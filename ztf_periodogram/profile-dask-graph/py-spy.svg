<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1802" onload="init(evt)" viewBox="0 0 1200 1802" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1802" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o py-spy.svg -- python ./ztf-periodogram-data.lsdb.io.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1791.00"> </text><svg id="frames" x="10" width="1180" total_samples="61610"><g><title>dumps (cloudpickle/cloudpickle.py:1479) (281 samples, 0.46%)</title><rect x="0.3360%" y="324" width="0.4561%" height="15" fill="rgb(227,0,7)" fg:x="207" fg:w="281"/><text x="0.5860%" y="334.50"></text></g><g><title>dump (cloudpickle/cloudpickle.py:1245) (280 samples, 0.45%)</title><rect x="0.3376%" y="340" width="0.4545%" height="15" fill="rgb(217,0,24)" fg:x="208" fg:w="280"/><text x="0.5876%" y="350.50"></text></g><g><title>_normalize_pickle (dask/base.py:1251) (437 samples, 0.71%)</title><rect x="0.0844%" y="308" width="0.7093%" height="15" fill="rgb(221,193,54)" fg:x="52" fg:w="437"/><text x="0.3344%" y="318.50"></text></g><g><title>_normalize_pickle (dask/base.py:1252) (99 samples, 0.16%)</title><rect x="0.7937%" y="308" width="0.1607%" height="15" fill="rgb(248,212,6)" fg:x="489" fg:w="99"/><text x="1.0437%" y="318.50"></text></g><g><title>tokenize (dask/base.py:1036) (625 samples, 1.01%)</title><rect x="0.0049%" y="196" width="1.0144%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="625"/><text x="0.2549%" y="206.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (625 samples, 1.01%)</title><rect x="0.0049%" y="212" width="1.0144%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="625"/><text x="0.2549%" y="222.50"></text></g><g><title>__call__ (dask/utils.py:773) (625 samples, 1.01%)</title><rect x="0.0049%" y="228" width="1.0144%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="625"/><text x="0.2549%" y="238.50"></text></g><g><title>normalize_seq (dask/base.py:1169) (625 samples, 1.01%)</title><rect x="0.0049%" y="244" width="1.0144%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="625"/><text x="0.2549%" y="254.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (614 samples, 1.00%)</title><rect x="0.0227%" y="260" width="0.9966%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="614"/><text x="0.2727%" y="270.50"></text></g><g><title>__call__ (dask/utils.py:773) (599 samples, 0.97%)</title><rect x="0.0471%" y="276" width="0.9722%" height="15" fill="rgb(220,122,19)" fg:x="29" fg:w="599"/><text x="0.2971%" y="286.50"></text></g><g><title>normalize_object (dask/base.py:1218) (581 samples, 0.94%)</title><rect x="0.0763%" y="292" width="0.9430%" height="15" fill="rgb(250,228,42)" fg:x="47" fg:w="581"/><text x="0.3263%" y="302.50"></text></g><g><title>__getitem__ (dask_expr/_expr.py:113) (631 samples, 1.02%)</title><rect x="0.0016%" y="116" width="1.0242%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="631"/><text x="0.2516%" y="126.50"></text></g><g><title>are_co_aligned (dask_expr/_expr.py:3124) (631 samples, 1.02%)</title><rect x="0.0016%" y="132" width="1.0242%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="631"/><text x="0.2516%" y="142.50"></text></g><g><title>&lt;setcomp&gt; (dask_expr/_expr.py:3126) (631 samples, 1.02%)</title><rect x="0.0016%" y="148" width="1.0242%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="631"/><text x="0.2516%" y="158.50"></text></g><g><title>_tokenize_partial (dask_expr/_util.py:110) (631 samples, 1.02%)</title><rect x="0.0016%" y="164" width="1.0242%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="631"/><text x="0.2516%" y="174.50"></text></g><g><title>_tokenize_deterministic (dask_expr/_util.py:102) (631 samples, 1.02%)</title><rect x="0.0016%" y="180" width="1.0242%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="631"/><text x="0.2516%" y="190.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:113) (632 samples, 1.03%)</title><rect x="0.0016%" y="68" width="1.0258%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="632"/><text x="0.2516%" y="78.50"></text></g><g><title>__getitem__ (nested_dask/core.py:83) (632 samples, 1.03%)</title><rect x="0.0016%" y="84" width="1.0258%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="632"/><text x="0.2516%" y="94.50"></text></g><g><title>__getitem__ (dask_expr/_collection.py:394) (632 samples, 1.03%)</title><rect x="0.0016%" y="100" width="1.0258%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="632"/><text x="0.2516%" y="110.50"></text></g><g><title>_task (dask_expr/_expr.py:565) (191 samples, 0.31%)</title><rect x="1.2076%" y="164" width="0.3100%" height="15" fill="rgb(226,26,5)" fg:x="744" fg:w="191"/><text x="1.4576%" y="174.50"></text></g><g><title>_task (dask_expr/_expr.py:662) (156 samples, 0.25%)</title><rect x="1.5598%" y="164" width="0.2532%" height="15" fill="rgb(249,33,26)" fg:x="961" fg:w="156"/><text x="1.8098%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (dask_expr/_expr.py:662) (145 samples, 0.24%)</title><rect x="1.5777%" y="180" width="0.2354%" height="15" fill="rgb(235,183,28)" fg:x="972" fg:w="145"/><text x="1.8277%" y="190.50"></text></g><g><title>_task (dask_expr/_expr.py:663) (96 samples, 0.16%)</title><rect x="1.8130%" y="164" width="0.1558%" height="15" fill="rgb(221,5,38)" fg:x="1117" fg:w="96"/><text x="2.0630%" y="174.50"></text></g><g><title>_layer (dask_expr/_core.py:233) (649 samples, 1.05%)</title><rect x="1.0891%" y="132" width="1.0534%" height="15" fill="rgb(247,18,42)" fg:x="671" fg:w="649"/><text x="1.3391%" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (dask_expr/_core.py:233) (649 samples, 1.05%)</title><rect x="1.0891%" y="148" width="1.0534%" height="15" fill="rgb(241,131,45)" fg:x="671" fg:w="649"/><text x="1.3391%" y="158.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:836) (8,993 samples, 14.60%)</title><rect x="27.8867%" y="196" width="14.5967%" height="15" fill="rgb(249,31,29)" fg:x="17181" fg:w="8993"/><text x="28.1367%" y="206.50">__iter__ (&lt;frozen _col..</text></g><g><title>get_all_external_keys (dask/highlevelgraph.py:576) (24,780 samples, 40.22%)</title><rect x="2.2707%" y="180" width="40.2207%" height="15" fill="rgb(225,111,53)" fg:x="1399" fg:w="24780"/><text x="2.5207%" y="190.50">get_all_external_keys (dask/highlevelgraph.py:576)</text></g><g><title>cull (dask/highlevelgraph.py:726) (24,802 samples, 40.26%)</title><rect x="2.2399%" y="164" width="40.2565%" height="15" fill="rgb(238,160,17)" fg:x="1380" fg:w="24802"/><text x="2.4899%" y="174.50">cull (dask/highlevelgraph.py:726)</text></g><g><title>cull (dask/highlevelgraph.py:729) (86 samples, 0.14%)</title><rect x="42.4980%" y="164" width="0.1396%" height="15" fill="rgb(214,148,48)" fg:x="26183" fg:w="86"/><text x="42.7480%" y="174.50"></text></g><g><title>__iter__ (&lt;frozen _collections_abc&gt;:836) (8,800 samples, 14.28%)</title><rect x="56.2117%" y="180" width="14.2834%" height="15" fill="rgb(232,36,49)" fg:x="34632" fg:w="8800"/><text x="56.4617%" y="190.50">__iter__ (&lt;frozen _col..</text></g><g><title>cull (dask/highlevelgraph.py:736) (17,170 samples, 27.87%)</title><rect x="42.6392%" y="164" width="27.8689%" height="15" fill="rgb(209,103,24)" fg:x="26270" fg:w="17170"/><text x="42.8892%" y="174.50">cull (dask/highlevelgraph.py:736)</text></g><g><title>&lt;dictcomp&gt; (dask/highlevelgraph.py:144) (88 samples, 0.14%)</title><rect x="70.6249%" y="196" width="0.1428%" height="15" fill="rgb(229,88,8)" fg:x="43512" fg:w="88"/><text x="70.8749%" y="206.50"></text></g><g><title>get_dependencies (dask/highlevelgraph.py:178) (79 samples, 0.13%)</title><rect x="70.6395%" y="212" width="0.1282%" height="15" fill="rgb(213,181,19)" fg:x="43521" fg:w="79"/><text x="70.8895%" y="222.50"></text></g><g><title>cull (dask/highlevelgraph.py:144) (92 samples, 0.15%)</title><rect x="70.6217%" y="180" width="0.1493%" height="15" fill="rgb(254,191,54)" fg:x="43510" fg:w="92"/><text x="70.8717%" y="190.50"></text></g><g><title>keys_in_tasks (dask/core.py:194) (11,951 samples, 19.40%)</title><rect x="70.9998%" y="212" width="19.3978%" height="15" fill="rgb(241,83,37)" fg:x="43743" fg:w="11951"/><text x="71.2498%" y="222.50">keys_in_tasks (dask/core.py:19..</text></g><g><title>cull (dask/highlevelgraph.py:154) (12,069 samples, 19.59%)</title><rect x="70.8359%" y="180" width="19.5894%" height="15" fill="rgb(233,36,39)" fg:x="43642" fg:w="12069"/><text x="71.0859%" y="190.50">cull (dask/highlevelgraph.py:15..</text></g><g><title>get_dependencies (dask/highlevelgraph.py:178) (12,063 samples, 19.58%)</title><rect x="70.8456%" y="196" width="19.5796%" height="15" fill="rgb(226,3,54)" fg:x="43648" fg:w="12063"/><text x="71.0956%" y="206.50">get_dependencies (dask/highleve..</text></g><g><title>cull (dask/highlevelgraph.py:738) (12,345 samples, 20.04%)</title><rect x="70.5178%" y="164" width="20.0373%" height="15" fill="rgb(245,192,40)" fg:x="43446" fg:w="12345"/><text x="70.7678%" y="174.50">cull (dask/highlevelgraph.py:73..</text></g><g><title>cull (dask/highlevelgraph.py:161) (76 samples, 0.12%)</title><rect x="90.4317%" y="180" width="0.1234%" height="15" fill="rgb(238,167,29)" fg:x="55715" fg:w="76"/><text x="90.6817%" y="190.50"></text></g><g><title>__init__ (dask/highlevelgraph.py:317) (65 samples, 0.11%)</title><rect x="90.4496%" y="196" width="0.1055%" height="15" fill="rgb(232,182,51)" fg:x="55726" fg:w="65"/><text x="90.6996%" y="206.50"></text></g><g><title>cull (dask/highlevelgraph.py:745) (88 samples, 0.14%)</title><rect x="90.5665%" y="164" width="0.1428%" height="15" fill="rgb(231,60,39)" fg:x="55798" fg:w="88"/><text x="90.8165%" y="174.50"></text></g><g><title>optimize (dask/delayed.py:530) (54,604 samples, 88.63%)</title><rect x="2.1863%" y="148" width="88.6285%" height="15" fill="rgb(208,69,12)" fg:x="1347" fg:w="54604"/><text x="2.4363%" y="158.50">optimize (dask/delayed.py:530)</text></g><g><title>_layer (dask_expr/_expr.py:2996) (54,703 samples, 88.79%)</title><rect x="2.1474%" y="132" width="88.7892%" height="15" fill="rgb(235,93,37)" fg:x="1323" fg:w="54703"/><text x="2.3974%" y="142.50">_layer (dask_expr/_expr.py:2996)</text></g><g><title>&lt;listcomp&gt; (dask_expr/_expr.py:91) (142 samples, 0.23%)</title><rect x="90.9901%" y="164" width="0.2305%" height="15" fill="rgb(213,116,39)" fg:x="56059" fg:w="142"/><text x="91.2401%" y="174.50"></text></g><g><title>__dask_graph__ (dask_expr/_core.py:509) (55,531 samples, 90.13%)</title><rect x="1.0891%" y="116" width="90.1331%" height="15" fill="rgb(222,207,29)" fg:x="671" fg:w="55531"/><text x="1.3391%" y="126.50">__dask_graph__ (dask_expr/_core.py:509)</text></g><g><title>_layer (dask_expr/_reductions.py:335) (143 samples, 0.23%)</title><rect x="90.9901%" y="132" width="0.2321%" height="15" fill="rgb(206,96,30)" fg:x="56059" fg:w="143"/><text x="91.2401%" y="142.50"></text></g><g><title>__dask_keys__ (dask_expr/_expr.py:91) (143 samples, 0.23%)</title><rect x="90.9901%" y="148" width="0.2321%" height="15" fill="rgb(218,138,4)" fg:x="56059" fg:w="143"/><text x="91.2401%" y="158.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:176) (55,700 samples, 90.41%)</title><rect x="1.0307%" y="68" width="90.4074%" height="15" fill="rgb(250,191,14)" fg:x="635" fg:w="55700"/><text x="1.2807%" y="78.50">&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:176)</text></g><g><title>dask (dask_expr/_collection.py:595) (55,666 samples, 90.35%)</title><rect x="1.0859%" y="84" width="90.3522%" height="15" fill="rgb(239,60,40)" fg:x="669" fg:w="55666"/><text x="1.3359%" y="94.50">dask (dask_expr/_collection.py:595)</text></g><g><title>__dask_graph__ (dask_expr/_collection.py:560) (55,665 samples, 90.35%)</title><rect x="1.0875%" y="100" width="90.3506%" height="15" fill="rgb(206,27,48)" fg:x="670" fg:w="55665"/><text x="1.3375%" y="110.50">__dask_graph__ (dask_expr/_collection.py:560)</text></g><g><title>__dask_graph__ (dask_expr/_core.py:513) (118 samples, 0.19%)</title><rect x="91.2466%" y="116" width="0.1915%" height="15" fill="rgb(225,35,8)" fg:x="56217" fg:w="118"/><text x="91.4966%" y="126.50"></text></g><g><title>merge (toolz/dicttoolz.py:39) (118 samples, 0.19%)</title><rect x="91.2466%" y="132" width="0.1915%" height="15" fill="rgb(250,213,24)" fg:x="56217" fg:w="118"/><text x="91.4966%" y="142.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:35) (65 samples, 0.11%)</title><rect x="91.7124%" y="68" width="0.1055%" height="15" fill="rgb(247,123,22)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (65 samples, 0.11%)</title><rect x="91.7124%" y="84" width="0.1055%" height="15" fill="rgb(231,138,38)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (65 samples, 0.11%)</title><rect x="91.7124%" y="100" width="0.1055%" height="15" fill="rgb(231,145,46)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (65 samples, 0.11%)</title><rect x="91.7124%" y="116" width="0.1055%" height="15" fill="rgb(251,118,11)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (65 samples, 0.11%)</title><rect x="91.7124%" y="132" width="0.1055%" height="15" fill="rgb(217,147,25)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (65 samples, 0.11%)</title><rect x="91.7124%" y="148" width="0.1055%" height="15" fill="rgb(247,81,37)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="158.50"></text></g><g><title>&lt;module&gt; (nested_pandas/__init__.py:2) (65 samples, 0.11%)</title><rect x="91.7124%" y="164" width="0.1055%" height="15" fill="rgb(209,12,38)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (65 samples, 0.11%)</title><rect x="91.7124%" y="180" width="0.1055%" height="15" fill="rgb(227,1,9)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (65 samples, 0.11%)</title><rect x="91.7124%" y="196" width="0.1055%" height="15" fill="rgb(248,47,43)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (65 samples, 0.11%)</title><rect x="91.7124%" y="212" width="0.1055%" height="15" fill="rgb(221,10,30)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (65 samples, 0.11%)</title><rect x="91.7124%" y="228" width="0.1055%" height="15" fill="rgb(210,229,1)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (65 samples, 0.11%)</title><rect x="91.7124%" y="244" width="0.1055%" height="15" fill="rgb(222,148,37)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="254.50"></text></g><g><title>&lt;module&gt; (nested_pandas/nestedframe/__init__.py:1) (65 samples, 0.11%)</title><rect x="91.7124%" y="260" width="0.1055%" height="15" fill="rgb(234,67,33)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (65 samples, 0.11%)</title><rect x="91.7124%" y="276" width="0.1055%" height="15" fill="rgb(247,98,35)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (65 samples, 0.11%)</title><rect x="91.7124%" y="292" width="0.1055%" height="15" fill="rgb(247,138,52)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (65 samples, 0.11%)</title><rect x="91.7124%" y="308" width="0.1055%" height="15" fill="rgb(213,79,30)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (65 samples, 0.11%)</title><rect x="91.7124%" y="324" width="0.1055%" height="15" fill="rgb(246,177,23)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (65 samples, 0.11%)</title><rect x="91.7124%" y="340" width="0.1055%" height="15" fill="rgb(230,62,27)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="350.50"></text></g><g><title>&lt;module&gt; (nested_pandas/nestedframe/core.py:7) (65 samples, 0.11%)</title><rect x="91.7124%" y="356" width="0.1055%" height="15" fill="rgb(216,154,8)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (65 samples, 0.11%)</title><rect x="91.7124%" y="372" width="0.1055%" height="15" fill="rgb(244,35,45)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (65 samples, 0.11%)</title><rect x="91.7124%" y="388" width="0.1055%" height="15" fill="rgb(251,115,12)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (65 samples, 0.11%)</title><rect x="91.7124%" y="404" width="0.1055%" height="15" fill="rgb(240,54,50)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (65 samples, 0.11%)</title><rect x="91.7124%" y="420" width="0.1055%" height="15" fill="rgb(233,84,52)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (65 samples, 0.11%)</title><rect x="91.7124%" y="436" width="0.1055%" height="15" fill="rgb(207,117,47)" fg:x="56504" fg:w="65"/><text x="91.9624%" y="446.50"></text></g><g><title>&lt;module&gt; (hipscat/io/file_io/file_io.py:15) (156 samples, 0.25%)</title><rect x="91.8471%" y="1444" width="0.2532%" height="15" fill="rgb(249,43,39)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (156 samples, 0.25%)</title><rect x="91.8471%" y="1460" width="0.2532%" height="15" fill="rgb(209,38,44)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1126) (156 samples, 0.25%)</title><rect x="91.8471%" y="1476" width="0.2532%" height="15" fill="rgb(236,212,23)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (156 samples, 0.25%)</title><rect x="91.8471%" y="1492" width="0.2532%" height="15" fill="rgb(242,79,21)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (156 samples, 0.25%)</title><rect x="91.8471%" y="1508" width="0.2532%" height="15" fill="rgb(211,96,35)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (156 samples, 0.25%)</title><rect x="91.8471%" y="1524" width="0.2532%" height="15" fill="rgb(253,215,40)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (156 samples, 0.25%)</title><rect x="91.8471%" y="1540" width="0.2532%" height="15" fill="rgb(211,81,21)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (156 samples, 0.25%)</title><rect x="91.8471%" y="1556" width="0.2532%" height="15" fill="rgb(208,190,38)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (156 samples, 0.25%)</title><rect x="91.8471%" y="1572" width="0.2532%" height="15" fill="rgb(235,213,38)" fg:x="56587" fg:w="156"/><text x="92.0971%" y="1582.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_math/__init__.py:6) (146 samples, 0.24%)</title><rect x="91.8633%" y="1588" width="0.2370%" height="15" fill="rgb(237,122,38)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (146 samples, 0.24%)</title><rect x="91.8633%" y="1604" width="0.2370%" height="15" fill="rgb(244,218,35)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (146 samples, 0.24%)</title><rect x="91.8633%" y="1620" width="0.2370%" height="15" fill="rgb(240,68,47)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (146 samples, 0.24%)</title><rect x="91.8633%" y="1636" width="0.2370%" height="15" fill="rgb(210,16,53)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (146 samples, 0.24%)</title><rect x="91.8633%" y="1652" width="0.2370%" height="15" fill="rgb(235,124,12)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (146 samples, 0.24%)</title><rect x="91.8633%" y="1668" width="0.2370%" height="15" fill="rgb(224,169,11)" fg:x="56597" fg:w="146"/><text x="92.1133%" y="1678.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_math/margin_bounding.py:93) (98 samples, 0.16%)</title><rect x="91.9412%" y="1684" width="0.1591%" height="15" fill="rgb(250,166,2)" fg:x="56645" fg:w="98"/><text x="92.1912%" y="1694.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (97 samples, 0.16%)</title><rect x="91.9429%" y="1700" width="0.1574%" height="15" fill="rgb(242,216,29)" fg:x="56646" fg:w="97"/><text x="92.1929%" y="1710.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (97 samples, 0.16%)</title><rect x="91.9429%" y="1716" width="0.1574%" height="15" fill="rgb(230,116,27)" fg:x="56646" fg:w="97"/><text x="92.1929%" y="1726.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (97 samples, 0.16%)</title><rect x="91.9429%" y="1732" width="0.1574%" height="15" fill="rgb(228,99,48)" fg:x="56646" fg:w="97"/><text x="92.1929%" y="1742.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (97 samples, 0.16%)</title><rect x="91.9429%" y="1748" width="0.1574%" height="15" fill="rgb(253,11,6)" fg:x="56646" fg:w="97"/><text x="92.1929%" y="1758.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (97 samples, 0.16%)</title><rect x="91.9429%" y="1764" width="0.1574%" height="15" fill="rgb(247,143,39)" fg:x="56646" fg:w="97"/><text x="92.1929%" y="1774.50"></text></g><g><title>&lt;module&gt; (hipscat/io/__init__.py:3) (165 samples, 0.27%)</title><rect x="91.8341%" y="1252" width="0.2678%" height="15" fill="rgb(236,97,10)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (165 samples, 0.27%)</title><rect x="91.8341%" y="1268" width="0.2678%" height="15" fill="rgb(233,208,19)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (165 samples, 0.27%)</title><rect x="91.8341%" y="1284" width="0.2678%" height="15" fill="rgb(216,164,2)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (165 samples, 0.27%)</title><rect x="91.8341%" y="1300" width="0.2678%" height="15" fill="rgb(220,129,5)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (165 samples, 0.27%)</title><rect x="91.8341%" y="1316" width="0.2678%" height="15" fill="rgb(242,17,10)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (165 samples, 0.27%)</title><rect x="91.8341%" y="1332" width="0.2678%" height="15" fill="rgb(242,107,0)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1342.50"></text></g><g><title>&lt;module&gt; (hipscat/io/file_io/__init__.py:1) (165 samples, 0.27%)</title><rect x="91.8341%" y="1348" width="0.2678%" height="15" fill="rgb(251,28,31)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (165 samples, 0.27%)</title><rect x="91.8341%" y="1364" width="0.2678%" height="15" fill="rgb(233,223,10)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (165 samples, 0.27%)</title><rect x="91.8341%" y="1380" width="0.2678%" height="15" fill="rgb(215,21,27)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (165 samples, 0.27%)</title><rect x="91.8341%" y="1396" width="0.2678%" height="15" fill="rgb(232,23,21)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (165 samples, 0.27%)</title><rect x="91.8341%" y="1412" width="0.2678%" height="15" fill="rgb(244,5,23)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (165 samples, 0.27%)</title><rect x="91.8341%" y="1428" width="0.2678%" height="15" fill="rgb(226,81,46)" fg:x="56579" fg:w="165"/><text x="92.0841%" y="1438.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/association_catalog/association_catalog.py:10) (167 samples, 0.27%)</title><rect x="91.8341%" y="820" width="0.2711%" height="15" fill="rgb(247,70,30)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (167 samples, 0.27%)</title><rect x="91.8341%" y="836" width="0.2711%" height="15" fill="rgb(212,68,19)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (167 samples, 0.27%)</title><rect x="91.8341%" y="852" width="0.2711%" height="15" fill="rgb(240,187,13)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (167 samples, 0.27%)</title><rect x="91.8341%" y="868" width="0.2711%" height="15" fill="rgb(223,113,26)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (167 samples, 0.27%)</title><rect x="91.8341%" y="884" width="0.2711%" height="15" fill="rgb(206,192,2)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (167 samples, 0.27%)</title><rect x="91.8341%" y="900" width="0.2711%" height="15" fill="rgb(241,108,4)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="910.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/association_catalog/association_catalog_info.py:6) (167 samples, 0.27%)</title><rect x="91.8341%" y="916" width="0.2711%" height="15" fill="rgb(247,173,49)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (167 samples, 0.27%)</title><rect x="91.8341%" y="932" width="0.2711%" height="15" fill="rgb(224,114,35)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1126) (167 samples, 0.27%)</title><rect x="91.8341%" y="948" width="0.2711%" height="15" fill="rgb(245,159,27)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (167 samples, 0.27%)</title><rect x="91.8341%" y="964" width="0.2711%" height="15" fill="rgb(245,172,44)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (167 samples, 0.27%)</title><rect x="91.8341%" y="980" width="0.2711%" height="15" fill="rgb(236,23,11)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (167 samples, 0.27%)</title><rect x="91.8341%" y="996" width="0.2711%" height="15" fill="rgb(205,117,38)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (167 samples, 0.27%)</title><rect x="91.8341%" y="1012" width="0.2711%" height="15" fill="rgb(237,72,25)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (167 samples, 0.27%)</title><rect x="91.8341%" y="1028" width="0.2711%" height="15" fill="rgb(244,70,9)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (167 samples, 0.27%)</title><rect x="91.8341%" y="1044" width="0.2711%" height="15" fill="rgb(217,125,39)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1054.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/dataset/__init__.py:1) (167 samples, 0.27%)</title><rect x="91.8341%" y="1060" width="0.2711%" height="15" fill="rgb(235,36,10)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (167 samples, 0.27%)</title><rect x="91.8341%" y="1076" width="0.2711%" height="15" fill="rgb(251,123,47)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (167 samples, 0.27%)</title><rect x="91.8341%" y="1092" width="0.2711%" height="15" fill="rgb(221,13,13)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (167 samples, 0.27%)</title><rect x="91.8341%" y="1108" width="0.2711%" height="15" fill="rgb(238,131,9)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (167 samples, 0.27%)</title><rect x="91.8341%" y="1124" width="0.2711%" height="15" fill="rgb(211,50,8)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (167 samples, 0.27%)</title><rect x="91.8341%" y="1140" width="0.2711%" height="15" fill="rgb(245,182,24)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1150.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/dataset/base_catalog_info.py:10) (167 samples, 0.27%)</title><rect x="91.8341%" y="1156" width="0.2711%" height="15" fill="rgb(242,14,37)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (167 samples, 0.27%)</title><rect x="91.8341%" y="1172" width="0.2711%" height="15" fill="rgb(246,228,12)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (167 samples, 0.27%)</title><rect x="91.8341%" y="1188" width="0.2711%" height="15" fill="rgb(213,55,15)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (167 samples, 0.27%)</title><rect x="91.8341%" y="1204" width="0.2711%" height="15" fill="rgb(209,9,3)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (167 samples, 0.27%)</title><rect x="91.8341%" y="1220" width="0.2711%" height="15" fill="rgb(230,59,30)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (167 samples, 0.27%)</title><rect x="91.8341%" y="1236" width="0.2711%" height="15" fill="rgb(209,121,21)" fg:x="56579" fg:w="167"/><text x="92.0841%" y="1246.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:112) (69 samples, 0.11%)</title><rect x="92.1912%" y="1332" width="0.1120%" height="15" fill="rgb(220,109,13)" fg:x="56799" fg:w="69"/><text x="92.4412%" y="1342.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:93) (68 samples, 0.11%)</title><rect x="92.1928%" y="1348" width="0.1104%" height="15" fill="rgb(232,18,1)" fg:x="56800" fg:w="68"/><text x="92.4428%" y="1358.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1083) (68 samples, 0.11%)</title><rect x="92.1928%" y="1364" width="0.1104%" height="15" fill="rgb(215,41,42)" fg:x="56800" fg:w="68"/><text x="92.4428%" y="1374.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (67 samples, 0.11%)</title><rect x="92.1944%" y="1380" width="0.1087%" height="15" fill="rgb(224,123,36)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1390.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:583) (67 samples, 0.11%)</title><rect x="92.1944%" y="1396" width="0.1087%" height="15" fill="rgb(240,125,3)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1406.50"></text></g><g><title>resolve (numba/core/typeinfer.py:606) (67 samples, 0.11%)</title><rect x="92.1944%" y="1412" width="0.1087%" height="15" fill="rgb(205,98,50)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1422.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1577) (67 samples, 0.11%)</title><rect x="92.1944%" y="1428" width="0.1087%" height="15" fill="rgb(205,185,37)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1438.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:196) (67 samples, 0.11%)</title><rect x="92.1944%" y="1444" width="0.1087%" height="15" fill="rgb(238,207,15)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1454.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:248) (67 samples, 0.11%)</title><rect x="92.1944%" y="1460" width="0.1087%" height="15" fill="rgb(213,199,42)" fg:x="56801" fg:w="67"/><text x="92.4444%" y="1470.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:308) (66 samples, 0.11%)</title><rect x="92.1961%" y="1476" width="0.1071%" height="15" fill="rgb(235,201,11)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1486.50"></text></g><g><title>apply (numba/core/typing/templates.py:350) (66 samples, 0.11%)</title><rect x="92.1961%" y="1492" width="0.1071%" height="15" fill="rgb(207,46,11)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1502.50"></text></g><g><title>generic (numba/core/typing/templates.py:613) (66 samples, 0.11%)</title><rect x="92.1961%" y="1508" width="0.1071%" height="15" fill="rgb(241,35,35)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1518.50"></text></g><g><title>_get_impl (numba/core/typing/templates.py:712) (66 samples, 0.11%)</title><rect x="92.1961%" y="1524" width="0.1071%" height="15" fill="rgb(243,32,47)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1534.50"></text></g><g><title>_build_impl (numba/core/typing/templates.py:816) (66 samples, 0.11%)</title><rect x="92.1961%" y="1540" width="0.1071%" height="15" fill="rgb(247,202,23)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1550.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (66 samples, 0.11%)</title><rect x="92.1961%" y="1556" width="0.1071%" height="15" fill="rgb(219,102,11)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1566.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:318) (66 samples, 0.11%)</title><rect x="92.1961%" y="1572" width="0.1071%" height="15" fill="rgb(243,110,44)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1582.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (66 samples, 0.11%)</title><rect x="92.1961%" y="1588" width="0.1071%" height="15" fill="rgb(222,74,54)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1598.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (66 samples, 0.11%)</title><rect x="92.1961%" y="1604" width="0.1071%" height="15" fill="rgb(216,99,12)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1614.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (66 samples, 0.11%)</title><rect x="92.1961%" y="1620" width="0.1071%" height="15" fill="rgb(226,22,26)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1630.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (66 samples, 0.11%)</title><rect x="92.1961%" y="1636" width="0.1071%" height="15" fill="rgb(217,163,10)" fg:x="56802" fg:w="66"/><text x="92.4461%" y="1646.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (65 samples, 0.11%)</title><rect x="92.1977%" y="1652" width="0.1055%" height="15" fill="rgb(213,25,53)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1662.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (65 samples, 0.11%)</title><rect x="92.1977%" y="1668" width="0.1055%" height="15" fill="rgb(252,105,26)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1678.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (65 samples, 0.11%)</title><rect x="92.1977%" y="1684" width="0.1055%" height="15" fill="rgb(220,39,43)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1694.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (65 samples, 0.11%)</title><rect x="92.1977%" y="1700" width="0.1055%" height="15" fill="rgb(229,68,48)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1710.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (65 samples, 0.11%)</title><rect x="92.1977%" y="1716" width="0.1055%" height="15" fill="rgb(252,8,32)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1726.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (65 samples, 0.11%)</title><rect x="92.1977%" y="1732" width="0.1055%" height="15" fill="rgb(223,20,43)" fg:x="56803" fg:w="65"/><text x="92.4477%" y="1742.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (62 samples, 0.10%)</title><rect x="92.2026%" y="1748" width="0.1006%" height="15" fill="rgb(229,81,49)" fg:x="56806" fg:w="62"/><text x="92.4526%" y="1758.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (62 samples, 0.10%)</title><rect x="92.2026%" y="1764" width="0.1006%" height="15" fill="rgb(236,28,36)" fg:x="56806" fg:w="62"/><text x="92.4526%" y="1774.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_tree/pixel_alignment.py:142) (177 samples, 0.29%)</title><rect x="92.1863%" y="1108" width="0.2873%" height="15" fill="rgb(249,185,26)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1118.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (177 samples, 0.29%)</title><rect x="92.1863%" y="1124" width="0.2873%" height="15" fill="rgb(249,174,33)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1134.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (177 samples, 0.29%)</title><rect x="92.1863%" y="1140" width="0.2873%" height="15" fill="rgb(233,201,37)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1150.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (177 samples, 0.29%)</title><rect x="92.1863%" y="1156" width="0.2873%" height="15" fill="rgb(221,78,26)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1166.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (177 samples, 0.29%)</title><rect x="92.1863%" y="1172" width="0.2873%" height="15" fill="rgb(250,127,30)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1182.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (177 samples, 0.29%)</title><rect x="92.1863%" y="1188" width="0.2873%" height="15" fill="rgb(230,49,44)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1198.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (177 samples, 0.29%)</title><rect x="92.1863%" y="1204" width="0.2873%" height="15" fill="rgb(229,67,23)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1214.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (177 samples, 0.29%)</title><rect x="92.1863%" y="1220" width="0.2873%" height="15" fill="rgb(249,83,47)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1230.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (177 samples, 0.29%)</title><rect x="92.1863%" y="1236" width="0.2873%" height="15" fill="rgb(215,43,3)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1246.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (177 samples, 0.29%)</title><rect x="92.1863%" y="1252" width="0.2873%" height="15" fill="rgb(238,154,13)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1262.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (177 samples, 0.29%)</title><rect x="92.1863%" y="1268" width="0.2873%" height="15" fill="rgb(219,56,2)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1278.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (177 samples, 0.29%)</title><rect x="92.1863%" y="1284" width="0.2873%" height="15" fill="rgb(233,0,4)" fg:x="56796" fg:w="177"/><text x="92.4363%" y="1294.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (174 samples, 0.28%)</title><rect x="92.1912%" y="1300" width="0.2824%" height="15" fill="rgb(235,30,7)" fg:x="56799" fg:w="174"/><text x="92.4412%" y="1310.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (174 samples, 0.28%)</title><rect x="92.1912%" y="1316" width="0.2824%" height="15" fill="rgb(250,79,13)" fg:x="56799" fg:w="174"/><text x="92.4412%" y="1326.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_tree/pixel_alignment.py:260) (63 samples, 0.10%)</title><rect x="92.5450%" y="1108" width="0.1023%" height="15" fill="rgb(211,146,34)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1118.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (63 samples, 0.10%)</title><rect x="92.5450%" y="1124" width="0.1023%" height="15" fill="rgb(228,22,38)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1134.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (63 samples, 0.10%)</title><rect x="92.5450%" y="1140" width="0.1023%" height="15" fill="rgb(235,168,5)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1150.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (63 samples, 0.10%)</title><rect x="92.5450%" y="1156" width="0.1023%" height="15" fill="rgb(221,155,16)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1166.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (63 samples, 0.10%)</title><rect x="92.5450%" y="1172" width="0.1023%" height="15" fill="rgb(215,215,53)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1182.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (63 samples, 0.10%)</title><rect x="92.5450%" y="1188" width="0.1023%" height="15" fill="rgb(223,4,10)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1198.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (63 samples, 0.10%)</title><rect x="92.5450%" y="1204" width="0.1023%" height="15" fill="rgb(234,103,6)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1214.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (63 samples, 0.10%)</title><rect x="92.5450%" y="1220" width="0.1023%" height="15" fill="rgb(227,97,0)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1230.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (63 samples, 0.10%)</title><rect x="92.5450%" y="1236" width="0.1023%" height="15" fill="rgb(234,150,53)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1246.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (63 samples, 0.10%)</title><rect x="92.5450%" y="1252" width="0.1023%" height="15" fill="rgb(228,201,54)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1262.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (63 samples, 0.10%)</title><rect x="92.5450%" y="1268" width="0.1023%" height="15" fill="rgb(222,22,37)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1278.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (63 samples, 0.10%)</title><rect x="92.5450%" y="1284" width="0.1023%" height="15" fill="rgb(237,53,32)" fg:x="57017" fg:w="63"/><text x="92.7950%" y="1294.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (62 samples, 0.10%)</title><rect x="92.5467%" y="1300" width="0.1006%" height="15" fill="rgb(233,25,53)" fg:x="57018" fg:w="62"/><text x="92.7967%" y="1310.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (62 samples, 0.10%)</title><rect x="92.5467%" y="1316" width="0.1006%" height="15" fill="rgb(210,40,34)" fg:x="57018" fg:w="62"/><text x="92.7967%" y="1326.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/association_catalog/association_catalog.py:13) (491 samples, 0.80%)</title><rect x="92.1052%" y="820" width="0.7969%" height="15" fill="rgb(241,220,44)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (491 samples, 0.80%)</title><rect x="92.1052%" y="836" width="0.7969%" height="15" fill="rgb(235,28,35)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (491 samples, 0.80%)</title><rect x="92.1052%" y="852" width="0.7969%" height="15" fill="rgb(210,56,17)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (491 samples, 0.80%)</title><rect x="92.1052%" y="868" width="0.7969%" height="15" fill="rgb(224,130,29)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (491 samples, 0.80%)</title><rect x="92.1052%" y="884" width="0.7969%" height="15" fill="rgb(235,212,8)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (491 samples, 0.80%)</title><rect x="92.1052%" y="900" width="0.7969%" height="15" fill="rgb(223,33,50)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="910.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/healpix_dataset/healpix_dataset.py:19) (491 samples, 0.80%)</title><rect x="92.1052%" y="916" width="0.7969%" height="15" fill="rgb(219,149,13)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (491 samples, 0.80%)</title><rect x="92.1052%" y="932" width="0.7969%" height="15" fill="rgb(250,156,29)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (491 samples, 0.80%)</title><rect x="92.1052%" y="948" width="0.7969%" height="15" fill="rgb(216,193,19)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (491 samples, 0.80%)</title><rect x="92.1052%" y="964" width="0.7969%" height="15" fill="rgb(216,135,14)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (491 samples, 0.80%)</title><rect x="92.1052%" y="980" width="0.7969%" height="15" fill="rgb(241,47,5)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (491 samples, 0.80%)</title><rect x="92.1052%" y="996" width="0.7969%" height="15" fill="rgb(233,42,35)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1006.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_tree/__init__.py:1) (491 samples, 0.80%)</title><rect x="92.1052%" y="1012" width="0.7969%" height="15" fill="rgb(231,13,6)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (491 samples, 0.80%)</title><rect x="92.1052%" y="1028" width="0.7969%" height="15" fill="rgb(207,181,40)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (491 samples, 0.80%)</title><rect x="92.1052%" y="1044" width="0.7969%" height="15" fill="rgb(254,173,49)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (491 samples, 0.80%)</title><rect x="92.1052%" y="1060" width="0.7969%" height="15" fill="rgb(221,1,38)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (491 samples, 0.80%)</title><rect x="92.1052%" y="1076" width="0.7969%" height="15" fill="rgb(206,124,46)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (491 samples, 0.80%)</title><rect x="92.1052%" y="1092" width="0.7969%" height="15" fill="rgb(249,21,11)" fg:x="56746" fg:w="491"/><text x="92.3552%" y="1102.50"></text></g><g><title>&lt;module&gt; (hipscat/pixel_tree/pixel_alignment.py:304) (157 samples, 0.25%)</title><rect x="92.6473%" y="1108" width="0.2548%" height="15" fill="rgb(222,201,40)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1118.50"></text></g><g><title>wrapper (numba/core/decorators.py:232) (157 samples, 0.25%)</title><rect x="92.6473%" y="1124" width="0.2548%" height="15" fill="rgb(235,61,29)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1134.50"></text></g><g><title>compile (numba/core/dispatcher.py:905) (157 samples, 0.25%)</title><rect x="92.6473%" y="1140" width="0.2548%" height="15" fill="rgb(219,207,3)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1150.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (157 samples, 0.25%)</title><rect x="92.6473%" y="1156" width="0.2548%" height="15" fill="rgb(222,56,46)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1166.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (157 samples, 0.25%)</title><rect x="92.6473%" y="1172" width="0.2548%" height="15" fill="rgb(239,76,54)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1182.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (157 samples, 0.25%)</title><rect x="92.6473%" y="1188" width="0.2548%" height="15" fill="rgb(231,124,27)" fg:x="57080" fg:w="157"/><text x="92.8973%" y="1198.50"></text></g><g><title>compile_extra (numba/core/compiler.py:744) (156 samples, 0.25%)</title><rect x="92.6489%" y="1204" width="0.2532%" height="15" fill="rgb(249,195,6)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1214.50"></text></g><g><title>compile_extra (numba/core/compiler.py:438) (156 samples, 0.25%)</title><rect x="92.6489%" y="1220" width="0.2532%" height="15" fill="rgb(237,174,47)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1230.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:506) (156 samples, 0.25%)</title><rect x="92.6489%" y="1236" width="0.2532%" height="15" fill="rgb(206,201,31)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1246.50"></text></g><g><title>_compile_core (numba/core/compiler.py:472) (156 samples, 0.25%)</title><rect x="92.6489%" y="1252" width="0.2532%" height="15" fill="rgb(231,57,52)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1262.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (156 samples, 0.25%)</title><rect x="92.6489%" y="1268" width="0.2532%" height="15" fill="rgb(248,177,22)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1278.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (156 samples, 0.25%)</title><rect x="92.6489%" y="1284" width="0.2532%" height="15" fill="rgb(215,211,37)" fg:x="57081" fg:w="156"/><text x="92.8989%" y="1294.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (155 samples, 0.25%)</title><rect x="92.6505%" y="1300" width="0.2516%" height="15" fill="rgb(241,128,51)" fg:x="57082" fg:w="155"/><text x="92.9005%" y="1310.50"></text></g><g><title>check (numba/core/compiler_machinery.py:273) (155 samples, 0.25%)</title><rect x="92.6505%" y="1316" width="0.2516%" height="15" fill="rgb(227,165,31)" fg:x="57082" fg:w="155"/><text x="92.9005%" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (103 samples, 0.17%)</title><rect x="92.9021%" y="1124" width="0.1672%" height="15" fill="rgb(228,167,24)" fg:x="57237" fg:w="103"/><text x="93.1521%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (103 samples, 0.17%)</title><rect x="92.9021%" y="1140" width="0.1672%" height="15" fill="rgb(228,143,12)" fg:x="57237" fg:w="103"/><text x="93.1521%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (103 samples, 0.17%)</title><rect x="92.9021%" y="1156" width="0.1672%" height="15" fill="rgb(249,149,8)" fg:x="57237" fg:w="103"/><text x="93.1521%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (103 samples, 0.17%)</title><rect x="92.9021%" y="1172" width="0.1672%" height="15" fill="rgb(243,35,44)" fg:x="57237" fg:w="103"/><text x="93.1521%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (103 samples, 0.17%)</title><rect x="92.9021%" y="1188" width="0.1672%" height="15" fill="rgb(246,89,9)" fg:x="57237" fg:w="103"/><text x="93.1521%" y="1198.50"></text></g><g><title>&lt;module&gt; (astropy/__init__.py:24) (98 samples, 0.16%)</title><rect x="92.9102%" y="1204" width="0.1591%" height="15" fill="rgb(233,213,13)" fg:x="57242" fg:w="98"/><text x="93.1602%" y="1214.50"></text></g><g><title>Conf (astropy/__init__.py:29) (98 samples, 0.16%)</title><rect x="92.9102%" y="1220" width="0.1591%" height="15" fill="rgb(233,141,41)" fg:x="57242" fg:w="98"/><text x="93.1602%" y="1230.50"></text></g><g><title>__init__ (astropy/config/configuration.py:289) (98 samples, 0.16%)</title><rect x="92.9102%" y="1236" width="0.1591%" height="15" fill="rgb(239,167,4)" fg:x="57242" fg:w="98"/><text x="93.1602%" y="1246.50"></text></g><g><title>find_current_module (astropy/utils/introspection.py:264) (98 samples, 0.16%)</title><rect x="92.9102%" y="1252" width="0.1591%" height="15" fill="rgb(209,217,16)" fg:x="57242" fg:w="98"/><text x="93.1602%" y="1262.50"></text></g><g><title>_get_module_from_frame (astropy/utils/introspection.py:276) (98 samples, 0.16%)</title><rect x="92.9102%" y="1268" width="0.1591%" height="15" fill="rgb(219,88,35)" fg:x="57242" fg:w="98"/><text x="93.1602%" y="1278.50"></text></g><g><title>getmodule (inspect.py:997) (83 samples, 0.13%)</title><rect x="92.9346%" y="1284" width="0.1347%" height="15" fill="rgb(220,193,23)" fg:x="57257" fg:w="83"/><text x="93.1846%" y="1294.50"></text></g><g><title>realpath (&lt;frozen posixpath&gt;:416) (83 samples, 0.13%)</title><rect x="92.9346%" y="1300" width="0.1347%" height="15" fill="rgb(230,90,52)" fg:x="57257" fg:w="83"/><text x="93.1846%" y="1310.50"></text></g><g><title>_joinrealpath (&lt;frozen posixpath&gt;:451) (77 samples, 0.12%)</title><rect x="92.9443%" y="1316" width="0.1250%" height="15" fill="rgb(252,106,19)" fg:x="57263" fg:w="77"/><text x="93.1943%" y="1326.50"></text></g><g><title>&lt;module&gt; (mocpy/fmoc/fmoc.py:2) (125 samples, 0.20%)</title><rect x="92.9021%" y="1108" width="0.2029%" height="15" fill="rgb(206,74,20)" fg:x="57237" fg:w="125"/><text x="93.1521%" y="1118.50"></text></g><g><title>&lt;module&gt; (mocpy/__init__.py:11) (138 samples, 0.22%)</title><rect x="92.9021%" y="916" width="0.2240%" height="15" fill="rgb(230,138,44)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (138 samples, 0.22%)</title><rect x="92.9021%" y="932" width="0.2240%" height="15" fill="rgb(235,182,43)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (138 samples, 0.22%)</title><rect x="92.9021%" y="948" width="0.2240%" height="15" fill="rgb(242,16,51)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (138 samples, 0.22%)</title><rect x="92.9021%" y="964" width="0.2240%" height="15" fill="rgb(248,9,4)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (138 samples, 0.22%)</title><rect x="92.9021%" y="980" width="0.2240%" height="15" fill="rgb(210,31,22)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (138 samples, 0.22%)</title><rect x="92.9021%" y="996" width="0.2240%" height="15" fill="rgb(239,54,39)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1006.50"></text></g><g><title>&lt;module&gt; (mocpy/fmoc/__init__.py:1) (138 samples, 0.22%)</title><rect x="92.9021%" y="1012" width="0.2240%" height="15" fill="rgb(230,99,41)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (138 samples, 0.22%)</title><rect x="92.9021%" y="1028" width="0.2240%" height="15" fill="rgb(253,106,12)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (138 samples, 0.22%)</title><rect x="92.9021%" y="1044" width="0.2240%" height="15" fill="rgb(213,46,41)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (138 samples, 0.22%)</title><rect x="92.9021%" y="1060" width="0.2240%" height="15" fill="rgb(215,133,35)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (138 samples, 0.22%)</title><rect x="92.9021%" y="1076" width="0.2240%" height="15" fill="rgb(213,28,5)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (138 samples, 0.22%)</title><rect x="92.9021%" y="1092" width="0.2240%" height="15" fill="rgb(215,77,49)" fg:x="57237" fg:w="138"/><text x="93.1521%" y="1102.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/__init__.py:3) (902 samples, 1.46%)</title><rect x="91.8341%" y="580" width="1.4640%" height="15" fill="rgb(248,100,22)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (902 samples, 1.46%)</title><rect x="91.8341%" y="596" width="1.4640%" height="15" fill="rgb(208,67,9)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1126) (902 samples, 1.46%)</title><rect x="91.8341%" y="612" width="1.4640%" height="15" fill="rgb(219,133,21)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (902 samples, 1.46%)</title><rect x="91.8341%" y="628" width="1.4640%" height="15" fill="rgb(246,46,29)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (902 samples, 1.46%)</title><rect x="91.8341%" y="644" width="1.4640%" height="15" fill="rgb(246,185,52)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (902 samples, 1.46%)</title><rect x="91.8341%" y="660" width="1.4640%" height="15" fill="rgb(252,136,11)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (902 samples, 1.46%)</title><rect x="91.8341%" y="676" width="1.4640%" height="15" fill="rgb(219,138,53)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (902 samples, 1.46%)</title><rect x="91.8341%" y="692" width="1.4640%" height="15" fill="rgb(211,51,23)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (902 samples, 1.46%)</title><rect x="91.8341%" y="708" width="1.4640%" height="15" fill="rgb(247,221,28)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="718.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/association_catalog/__init__.py:1) (902 samples, 1.46%)</title><rect x="91.8341%" y="724" width="1.4640%" height="15" fill="rgb(251,222,45)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (902 samples, 1.46%)</title><rect x="91.8341%" y="740" width="1.4640%" height="15" fill="rgb(217,162,53)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (902 samples, 1.46%)</title><rect x="91.8341%" y="756" width="1.4640%" height="15" fill="rgb(229,93,14)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (902 samples, 1.46%)</title><rect x="91.8341%" y="772" width="1.4640%" height="15" fill="rgb(209,67,49)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (902 samples, 1.46%)</title><rect x="91.8341%" y="788" width="1.4640%" height="15" fill="rgb(213,87,29)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (902 samples, 1.46%)</title><rect x="91.8341%" y="804" width="1.4640%" height="15" fill="rgb(205,151,52)" fg:x="56579" fg:w="902"/><text x="92.0841%" y="814.50"></text></g><g><title>&lt;module&gt; (hipscat/catalog/association_catalog/association_catalog.py:7) (244 samples, 0.40%)</title><rect x="92.9021%" y="820" width="0.3960%" height="15" fill="rgb(253,215,39)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (244 samples, 0.40%)</title><rect x="92.9021%" y="836" width="0.3960%" height="15" fill="rgb(221,220,41)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (244 samples, 0.40%)</title><rect x="92.9021%" y="852" width="0.3960%" height="15" fill="rgb(218,133,21)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (244 samples, 0.40%)</title><rect x="92.9021%" y="868" width="0.3960%" height="15" fill="rgb(221,193,43)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (244 samples, 0.40%)</title><rect x="92.9021%" y="884" width="0.3960%" height="15" fill="rgb(240,128,52)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (244 samples, 0.40%)</title><rect x="92.9021%" y="900" width="0.3960%" height="15" fill="rgb(253,114,12)" fg:x="57237" fg:w="244"/><text x="93.1521%" y="910.50"></text></g><g><title>&lt;module&gt; (mocpy/__init__.py:12) (106 samples, 0.17%)</title><rect x="93.1261%" y="916" width="0.1720%" height="15" fill="rgb(215,223,47)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (106 samples, 0.17%)</title><rect x="93.1261%" y="932" width="0.1720%" height="15" fill="rgb(248,225,23)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (106 samples, 0.17%)</title><rect x="93.1261%" y="948" width="0.1720%" height="15" fill="rgb(250,108,0)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (106 samples, 0.17%)</title><rect x="93.1261%" y="964" width="0.1720%" height="15" fill="rgb(228,208,7)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (106 samples, 0.17%)</title><rect x="93.1261%" y="980" width="0.1720%" height="15" fill="rgb(244,45,10)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (106 samples, 0.17%)</title><rect x="93.1261%" y="996" width="0.1720%" height="15" fill="rgb(207,125,25)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1006.50"></text></g><g><title>&lt;module&gt; (mocpy/moc/__init__.py:1) (106 samples, 0.17%)</title><rect x="93.1261%" y="1012" width="0.1720%" height="15" fill="rgb(210,195,18)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (106 samples, 0.17%)</title><rect x="93.1261%" y="1028" width="0.1720%" height="15" fill="rgb(249,80,12)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (106 samples, 0.17%)</title><rect x="93.1261%" y="1044" width="0.1720%" height="15" fill="rgb(221,65,9)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (106 samples, 0.17%)</title><rect x="93.1261%" y="1060" width="0.1720%" height="15" fill="rgb(235,49,36)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (106 samples, 0.17%)</title><rect x="93.1261%" y="1076" width="0.1720%" height="15" fill="rgb(225,32,20)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (106 samples, 0.17%)</title><rect x="93.1261%" y="1092" width="0.1720%" height="15" fill="rgb(215,141,46)" fg:x="57375" fg:w="106"/><text x="93.3761%" y="1102.50"></text></g><g><title>&lt;module&gt; (hipscat/__init__.py:3) (904 samples, 1.47%)</title><rect x="91.8341%" y="452" width="1.4673%" height="15" fill="rgb(250,160,47)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1232) (904 samples, 1.47%)</title><rect x="91.8341%" y="468" width="1.4673%" height="15" fill="rgb(216,222,40)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (904 samples, 1.47%)</title><rect x="91.8341%" y="484" width="1.4673%" height="15" fill="rgb(234,217,39)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (904 samples, 1.47%)</title><rect x="91.8341%" y="500" width="1.4673%" height="15" fill="rgb(207,178,40)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (904 samples, 1.47%)</title><rect x="91.8341%" y="516" width="1.4673%" height="15" fill="rgb(221,136,13)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (904 samples, 1.47%)</title><rect x="91.8341%" y="532" width="1.4673%" height="15" fill="rgb(249,199,10)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (904 samples, 1.47%)</title><rect x="91.8341%" y="548" width="1.4673%" height="15" fill="rgb(249,222,13)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (904 samples, 1.47%)</title><rect x="91.8341%" y="564" width="1.4673%" height="15" fill="rgb(244,185,38)" fg:x="56579" fg:w="904"/><text x="92.0841%" y="574.50"></text></g><g><title>&lt;module&gt; (lsdb/catalog/catalog.py:6) (905 samples, 1.47%)</title><rect x="91.8341%" y="356" width="1.4689%" height="15" fill="rgb(236,202,9)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (905 samples, 1.47%)</title><rect x="91.8341%" y="372" width="1.4689%" height="15" fill="rgb(250,229,37)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (905 samples, 1.47%)</title><rect x="91.8341%" y="388" width="1.4689%" height="15" fill="rgb(206,174,23)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (905 samples, 1.47%)</title><rect x="91.8341%" y="404" width="1.4689%" height="15" fill="rgb(211,33,43)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (905 samples, 1.47%)</title><rect x="91.8341%" y="420" width="1.4689%" height="15" fill="rgb(245,58,50)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (905 samples, 1.47%)</title><rect x="91.8341%" y="436" width="1.4689%" height="15" fill="rgb(244,68,36)" fg:x="56579" fg:w="905"/><text x="92.0841%" y="446.50"></text></g><g><title>&lt;module&gt; (lsdb/__init__.py:2) (948 samples, 1.54%)</title><rect x="91.8195%" y="164" width="1.5387%" height="15" fill="rgb(232,229,15)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (948 samples, 1.54%)</title><rect x="91.8195%" y="180" width="1.5387%" height="15" fill="rgb(254,30,23)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (948 samples, 1.54%)</title><rect x="91.8195%" y="196" width="1.5387%" height="15" fill="rgb(235,160,14)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (948 samples, 1.54%)</title><rect x="91.8195%" y="212" width="1.5387%" height="15" fill="rgb(212,155,44)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (948 samples, 1.54%)</title><rect x="91.8195%" y="228" width="1.5387%" height="15" fill="rgb(226,2,50)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (948 samples, 1.54%)</title><rect x="91.8195%" y="244" width="1.5387%" height="15" fill="rgb(234,177,6)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="254.50"></text></g><g><title>&lt;module&gt; (lsdb/catalog/__init__.py:1) (948 samples, 1.54%)</title><rect x="91.8195%" y="260" width="1.5387%" height="15" fill="rgb(217,24,9)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (948 samples, 1.54%)</title><rect x="91.8195%" y="276" width="1.5387%" height="15" fill="rgb(220,13,46)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (948 samples, 1.54%)</title><rect x="91.8195%" y="292" width="1.5387%" height="15" fill="rgb(239,221,27)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (948 samples, 1.54%)</title><rect x="91.8195%" y="308" width="1.5387%" height="15" fill="rgb(222,198,25)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (948 samples, 1.54%)</title><rect x="91.8195%" y="324" width="1.5387%" height="15" fill="rgb(211,99,13)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (948 samples, 1.54%)</title><rect x="91.8195%" y="340" width="1.5387%" height="15" fill="rgb(232,111,31)" fg:x="56570" fg:w="948"/><text x="92.0695%" y="350.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:38) (955 samples, 1.55%)</title><rect x="91.8179%" y="68" width="1.5501%" height="15" fill="rgb(245,82,37)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (955 samples, 1.55%)</title><rect x="91.8179%" y="84" width="1.5501%" height="15" fill="rgb(227,149,46)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (955 samples, 1.55%)</title><rect x="91.8179%" y="100" width="1.5501%" height="15" fill="rgb(218,36,50)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (955 samples, 1.55%)</title><rect x="91.8179%" y="116" width="1.5501%" height="15" fill="rgb(226,80,48)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (955 samples, 1.55%)</title><rect x="91.8179%" y="132" width="1.5501%" height="15" fill="rgb(238,224,15)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (955 samples, 1.55%)</title><rect x="91.8179%" y="148" width="1.5501%" height="15" fill="rgb(241,136,10)" fg:x="56569" fg:w="955"/><text x="92.0679%" y="158.50"></text></g><g><title>dumps (cloudpickle/cloudpickle.py:1479) (161 samples, 0.26%)</title><rect x="93.9085%" y="372" width="0.2613%" height="15" fill="rgb(208,32,45)" fg:x="57857" fg:w="161"/><text x="94.1585%" y="382.50"></text></g><g><title>dump (cloudpickle/cloudpickle.py:1245) (159 samples, 0.26%)</title><rect x="93.9117%" y="388" width="0.2581%" height="15" fill="rgb(207,135,9)" fg:x="57859" fg:w="159"/><text x="94.1617%" y="398.50"></text></g><g><title>_normalize_pickle (dask/base.py:1251) (309 samples, 0.50%)</title><rect x="93.6699%" y="356" width="0.5015%" height="15" fill="rgb(206,86,44)" fg:x="57710" fg:w="309"/><text x="93.9199%" y="366.50"></text></g><g><title>_normalize_pickle (dask/base.py:1252) (115 samples, 0.19%)</title><rect x="94.1714%" y="356" width="0.1867%" height="15" fill="rgb(245,177,15)" fg:x="58019" fg:w="115"/><text x="94.4214%" y="366.50"></text></g><g><title>normalize_object (dask/base.py:1218) (471 samples, 0.76%)</title><rect x="93.6617%" y="340" width="0.7645%" height="15" fill="rgb(206,64,50)" fg:x="57705" fg:w="471"/><text x="93.9117%" y="350.50"></text></g><g><title>tokenize (dask/base.py:1036) (506 samples, 0.82%)</title><rect x="93.6098%" y="244" width="0.8213%" height="15" fill="rgb(234,36,40)" fg:x="57673" fg:w="506"/><text x="93.8598%" y="254.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (506 samples, 0.82%)</title><rect x="93.6098%" y="260" width="0.8213%" height="15" fill="rgb(213,64,8)" fg:x="57673" fg:w="506"/><text x="93.8598%" y="270.50"></text></g><g><title>__call__ (dask/utils.py:773) (506 samples, 0.82%)</title><rect x="93.6098%" y="276" width="0.8213%" height="15" fill="rgb(210,75,36)" fg:x="57673" fg:w="506"/><text x="93.8598%" y="286.50"></text></g><g><title>normalize_seq (dask/base.py:1169) (506 samples, 0.82%)</title><rect x="93.6098%" y="292" width="0.8213%" height="15" fill="rgb(229,88,21)" fg:x="57673" fg:w="506"/><text x="93.8598%" y="302.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (495 samples, 0.80%)</title><rect x="93.6277%" y="308" width="0.8034%" height="15" fill="rgb(252,204,47)" fg:x="57684" fg:w="495"/><text x="93.8777%" y="318.50"></text></g><g><title>__call__ (dask/utils.py:773) (483 samples, 0.78%)</title><rect x="93.6471%" y="324" width="0.7840%" height="15" fill="rgb(208,77,27)" fg:x="57696" fg:w="483"/><text x="93.8971%" y="334.50"></text></g><g><title>from_map (nested_dask/core.py:272) (511 samples, 0.83%)</title><rect x="93.6066%" y="148" width="0.8294%" height="15" fill="rgb(221,76,26)" fg:x="57671" fg:w="511"/><text x="93.8566%" y="158.50"></text></g><g><title>from_map (dask_expr/_collection.py:6027) (510 samples, 0.83%)</title><rect x="93.6082%" y="164" width="0.8278%" height="15" fill="rgb(225,139,18)" fg:x="57672" fg:w="510"/><text x="93.8582%" y="174.50"></text></g><g><title>__new__ (dask_expr/_core.py:57) (510 samples, 0.83%)</title><rect x="93.6082%" y="180" width="0.8278%" height="15" fill="rgb(230,137,11)" fg:x="57672" fg:w="510"/><text x="93.8582%" y="190.50"></text></g><g><title>__get__ (functools.py:1001) (510 samples, 0.83%)</title><rect x="93.6082%" y="196" width="0.8278%" height="15" fill="rgb(212,28,1)" fg:x="57672" fg:w="510"/><text x="93.8582%" y="206.50"></text></g><g><title>_name (dask_expr/io/io.py:230) (510 samples, 0.83%)</title><rect x="93.6082%" y="212" width="0.8278%" height="15" fill="rgb(248,164,17)" fg:x="57672" fg:w="510"/><text x="93.8582%" y="222.50"></text></g><g><title>_tokenize_deterministic (dask_expr/_util.py:102) (510 samples, 0.83%)</title><rect x="93.6082%" y="228" width="0.8278%" height="15" fill="rgb(222,171,42)" fg:x="57672" fg:w="510"/><text x="93.8582%" y="238.50"></text></g><g><title>_load_dask_df_and_map (lsdb/loaders/hipscat/abstract_catalog_loader.py:63) (514 samples, 0.83%)</title><rect x="93.6033%" y="116" width="0.8343%" height="15" fill="rgb(243,84,45)" fg:x="57669" fg:w="514"/><text x="93.8533%" y="126.50"></text></g><g><title>_load_df_from_paths (lsdb/loaders/hipscat/abstract_catalog_loader.py:83) (512 samples, 0.83%)</title><rect x="93.6066%" y="132" width="0.8310%" height="15" fill="rgb(252,49,23)" fg:x="57671" fg:w="512"/><text x="93.8566%" y="142.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:74) (623 samples, 1.01%)</title><rect x="93.4280%" y="68" width="1.0112%" height="15" fill="rgb(215,19,7)" fg:x="57561" fg:w="623"/><text x="93.6780%" y="78.50"></text></g><g><title>read_hipscat (lsdb/loaders/hipscat/read_hipscat.py:87) (623 samples, 1.01%)</title><rect x="93.4280%" y="84" width="1.0112%" height="15" fill="rgb(238,81,41)" fg:x="57561" fg:w="623"/><text x="93.6780%" y="94.50"></text></g><g><title>load_catalog (lsdb/loaders/hipscat/hipscat_catalog_loader.py:22) (578 samples, 0.94%)</title><rect x="93.5011%" y="100" width="0.9382%" height="15" fill="rgb(210,199,37)" fg:x="57606" fg:w="578"/><text x="93.7511%" y="110.50"></text></g><g><title>keys_in_tasks (dask/core.py:194) (212 samples, 0.34%)</title><rect x="94.5480%" y="292" width="0.3441%" height="15" fill="rgb(244,192,49)" fg:x="58251" fg:w="212"/><text x="94.7980%" y="302.50"></text></g><g><title>to_delayed (dask/dataframe/core.py:2095) (265 samples, 0.43%)</title><rect x="94.4765%" y="196" width="0.4301%" height="15" fill="rgb(226,211,11)" fg:x="58207" fg:w="265"/><text x="94.7265%" y="206.50"></text></g><g><title>optimize (dask/dataframe/optimize.py:27) (265 samples, 0.43%)</title><rect x="94.4765%" y="212" width="0.4301%" height="15" fill="rgb(236,162,54)" fg:x="58207" fg:w="265"/><text x="94.7265%" y="222.50"></text></g><g><title>cull (dask/highlevelgraph.py:738) (263 samples, 0.43%)</title><rect x="94.4798%" y="228" width="0.4269%" height="15" fill="rgb(220,229,9)" fg:x="58209" fg:w="263"/><text x="94.7298%" y="238.50"></text></g><g><title>cull (dask/highlevelgraph.py:144) (263 samples, 0.43%)</title><rect x="94.4798%" y="244" width="0.4269%" height="15" fill="rgb(250,87,22)" fg:x="58209" fg:w="263"/><text x="94.7298%" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (dask/highlevelgraph.py:144) (263 samples, 0.43%)</title><rect x="94.4798%" y="260" width="0.4269%" height="15" fill="rgb(239,43,17)" fg:x="58209" fg:w="263"/><text x="94.7298%" y="270.50"></text></g><g><title>get_dependencies (dask/highlevelgraph.py:178) (261 samples, 0.42%)</title><rect x="94.4830%" y="276" width="0.4236%" height="15" fill="rgb(231,177,25)" fg:x="58211" fg:w="261"/><text x="94.7330%" y="286.50"></text></g><g><title>_task (dask_expr/_expr.py:3740) (63 samples, 0.10%)</title><rect x="94.9619%" y="292" width="0.1023%" height="15" fill="rgb(219,179,1)" fg:x="58506" fg:w="63"/><text x="95.2119%" y="302.50"></text></g><g><title>_task (dask_expr/_expr.py:2943) (92 samples, 0.15%)</title><rect x="95.1112%" y="308" width="0.1493%" height="15" fill="rgb(238,219,53)" fg:x="58598" fg:w="92"/><text x="95.3612%" y="318.50"></text></g><g><title>_task (dask_expr/_expr.py:663) (75 samples, 0.12%)</title><rect x="95.2930%" y="308" width="0.1217%" height="15" fill="rgb(232,167,36)" fg:x="58710" fg:w="75"/><text x="95.5430%" y="318.50"></text></g><g><title>_task (dask_expr/_expr.py:3750) (222 samples, 0.36%)</title><rect x="95.0917%" y="292" width="0.3603%" height="15" fill="rgb(244,19,51)" fg:x="58586" fg:w="222"/><text x="95.3417%" y="302.50"></text></g><g><title>dask (dask_expr/_collection.py:595) (327 samples, 0.53%)</title><rect x="94.9375%" y="212" width="0.5308%" height="15" fill="rgb(224,6,22)" fg:x="58491" fg:w="327"/><text x="95.1875%" y="222.50"></text></g><g><title>__dask_graph__ (dask_expr/_collection.py:560) (327 samples, 0.53%)</title><rect x="94.9375%" y="228" width="0.5308%" height="15" fill="rgb(224,145,5)" fg:x="58491" fg:w="327"/><text x="95.1875%" y="238.50"></text></g><g><title>__dask_graph__ (dask_expr/_core.py:509) (327 samples, 0.53%)</title><rect x="94.9375%" y="244" width="0.5308%" height="15" fill="rgb(234,130,49)" fg:x="58491" fg:w="327"/><text x="95.1875%" y="254.50"></text></g><g><title>_layer (dask_expr/_core.py:233) (327 samples, 0.53%)</title><rect x="94.9375%" y="260" width="0.5308%" height="15" fill="rgb(254,6,2)" fg:x="58491" fg:w="327"/><text x="95.1875%" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (dask_expr/_core.py:233) (327 samples, 0.53%)</title><rect x="94.9375%" y="276" width="0.5308%" height="15" fill="rgb(208,96,46)" fg:x="58491" fg:w="327"/><text x="95.1875%" y="286.50"></text></g><g><title>align_catalog_to_partitions (lsdb/dask/merge_catalog_functions.py:346) (613 samples, 0.99%)</title><rect x="94.4765%" y="148" width="0.9950%" height="15" fill="rgb(239,3,39)" fg:x="58207" fg:w="613"/><text x="94.7265%" y="158.50"></text></g><g><title>to_delayed (lsdb/catalog/dataset/dataset.py:52) (613 samples, 0.99%)</title><rect x="94.4765%" y="164" width="0.9950%" height="15" fill="rgb(233,210,1)" fg:x="58207" fg:w="613"/><text x="94.7265%" y="174.50"></text></g><g><title>to_delayed (dask_expr/_collection.py:2497) (613 samples, 0.99%)</title><rect x="94.4765%" y="180" width="0.9950%" height="15" fill="rgb(244,137,37)" fg:x="58207" fg:w="613"/><text x="94.7265%" y="190.50"></text></g><g><title>to_legacy_dataframe (dask_expr/_collection.py:1399) (329 samples, 0.53%)</title><rect x="94.9375%" y="196" width="0.5340%" height="15" fill="rgb(240,136,2)" fg:x="58491" fg:w="329"/><text x="95.1875%" y="206.50"></text></g><g><title>align_catalog_to_partitions (lsdb/dask/merge_catalog_functions.py:354) (156 samples, 0.25%)</title><rect x="95.4715%" y="148" width="0.2532%" height="15" fill="rgb(239,18,37)" fg:x="58820" fg:w="156"/><text x="95.7215%" y="158.50"></text></g><g><title>__call__ (numpy/lib/function_base.py:2372) (156 samples, 0.25%)</title><rect x="95.4715%" y="164" width="0.2532%" height="15" fill="rgb(218,185,22)" fg:x="58820" fg:w="156"/><text x="95.7215%" y="174.50"></text></g><g><title>_call_as_normal (numpy/lib/function_base.py:2365) (156 samples, 0.25%)</title><rect x="95.4715%" y="180" width="0.2532%" height="15" fill="rgb(225,218,4)" fg:x="58820" fg:w="156"/><text x="95.7215%" y="190.50"></text></g><g><title>_vectorize_call (numpy/lib/function_base.py:2455) (111 samples, 0.18%)</title><rect x="95.5446%" y="196" width="0.1802%" height="15" fill="rgb(230,182,32)" fg:x="58865" fg:w="111"/><text x="95.7946%" y="206.50"></text></g><g><title>&lt;lambda&gt; (lsdb/dask/merge_catalog_functions.py:350) (91 samples, 0.15%)</title><rect x="95.5770%" y="212" width="0.1477%" height="15" fill="rgb(242,56,43)" fg:x="58885" fg:w="91"/><text x="95.8270%" y="222.50"></text></g><g><title>__contains__ (hipscat/pixel_tree/pixel_tree.py:72) (89 samples, 0.14%)</title><rect x="95.5803%" y="228" width="0.1445%" height="15" fill="rgb(233,99,24)" fg:x="58887" fg:w="89"/><text x="95.8303%" y="238.50"></text></g><g><title>align_and_apply (lsdb/dask/merge_catalog_functions.py:145) (771 samples, 1.25%)</title><rect x="94.4765%" y="116" width="1.2514%" height="15" fill="rgb(234,209,42)" fg:x="58207" fg:w="771"/><text x="94.7265%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (lsdb/dask/merge_catalog_functions.py:145) (771 samples, 1.25%)</title><rect x="94.4765%" y="132" width="1.2514%" height="15" fill="rgb(227,7,12)" fg:x="58207" fg:w="771"/><text x="94.7265%" y="142.50"></text></g><g><title>_vectorize_call (numpy/lib/function_base.py:2450) (103 samples, 0.17%)</title><rect x="95.7280%" y="164" width="0.1672%" height="15" fill="rgb(245,203,43)" fg:x="58978" fg:w="103"/><text x="95.9780%" y="174.50"></text></g><g><title>_get_ufunc_and_otypes (numpy/lib/function_base.py:2404) (103 samples, 0.17%)</title><rect x="95.7280%" y="180" width="0.1672%" height="15" fill="rgb(238,205,33)" fg:x="58978" fg:w="103"/><text x="95.9780%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/function_base.py:2404) (103 samples, 0.17%)</title><rect x="95.7280%" y="196" width="0.1672%" height="15" fill="rgb(231,56,7)" fg:x="58978" fg:w="103"/><text x="95.9780%" y="206.50"></text></g><g><title>_vectorize_call (numpy/lib/function_base.py:2453) (84 samples, 0.14%)</title><rect x="95.8951%" y="164" width="0.1363%" height="15" fill="rgb(244,186,29)" fg:x="59081" fg:w="84"/><text x="96.1451%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/function_base.py:2453) (84 samples, 0.14%)</title><rect x="95.8951%" y="180" width="0.1363%" height="15" fill="rgb(234,111,31)" fg:x="59081" fg:w="84"/><text x="96.1451%" y="190.50"></text></g><g><title>call_function (dask/delayed.py:674) (95 samples, 0.15%)</title><rect x="96.0851%" y="212" width="0.1542%" height="15" fill="rgb(241,149,10)" fg:x="59198" fg:w="95"/><text x="96.3351%" y="222.50"></text></g><g><title>tokenize (dask/delayed.py:280) (73 samples, 0.12%)</title><rect x="96.1208%" y="228" width="0.1185%" height="15" fill="rgb(249,206,44)" fg:x="59220" fg:w="73"/><text x="96.3708%" y="238.50"></text></g><g><title>unpack_collections (dask/delayed.py:131) (110 samples, 0.18%)</title><rect x="97.0881%" y="356" width="0.1785%" height="15" fill="rgb(251,153,30)" fg:x="59816" fg:w="110"/><text x="97.3381%" y="366.50"></text></g><g><title>is_dataclass (dataclasses.py:1262) (72 samples, 0.12%)</title><rect x="97.1498%" y="372" width="0.1169%" height="15" fill="rgb(239,152,38)" fg:x="59854" fg:w="72"/><text x="97.3998%" y="382.50"></text></g><g><title>unzip (dask/delayed.py:42) (444 samples, 0.72%)</title><rect x="96.6856%" y="324" width="0.7207%" height="15" fill="rgb(249,139,47)" fg:x="59568" fg:w="444"/><text x="96.9356%" y="334.50"></text></g><g><title>&lt;genexpr&gt; (dask/delayed.py:115) (361 samples, 0.59%)</title><rect x="96.8203%" y="340" width="0.5859%" height="15" fill="rgb(244,64,35)" fg:x="59651" fg:w="361"/><text x="97.0703%" y="350.50"></text></g><g><title>unpack_collections (dask/delayed.py:115) (484 samples, 0.79%)</title><rect x="96.6320%" y="308" width="0.7856%" height="15" fill="rgb(216,46,15)" fg:x="59535" fg:w="484"/><text x="96.8820%" y="318.50"></text></g><g><title>unique (toolz/itertoolz.py:262) (191 samples, 0.31%)</title><rect x="97.5588%" y="324" width="0.3100%" height="15" fill="rgb(250,74,19)" fg:x="60106" fg:w="191"/><text x="97.8088%" y="334.50"></text></g><g><title>unpack_collections (dask/delayed.py:117) (290 samples, 0.47%)</title><rect x="97.4274%" y="308" width="0.4707%" height="15" fill="rgb(249,42,33)" fg:x="60025" fg:w="290"/><text x="97.6774%" y="318.50"></text></g><g><title>unzip (dask/delayed.py:42) (910 samples, 1.48%)</title><rect x="96.4746%" y="276" width="1.4770%" height="15" fill="rgb(242,149,17)" fg:x="59438" fg:w="910"/><text x="96.7246%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (dask/delayed.py:115) (881 samples, 1.43%)</title><rect x="96.5217%" y="292" width="1.4300%" height="15" fill="rgb(244,29,21)" fg:x="59467" fg:w="881"/><text x="96.7717%" y="302.50"></text></g><g><title>unpack_collections (dask/delayed.py:115) (924 samples, 1.50%)</title><rect x="96.4551%" y="260" width="1.4998%" height="15" fill="rgb(220,130,37)" fg:x="59426" fg:w="924"/><text x="96.7051%" y="270.50"></text></g><g><title>unpack_collections (dask/delayed.py:132) (1,007 samples, 1.63%)</title><rect x="96.4081%" y="244" width="1.6345%" height="15" fill="rgb(211,67,2)" fg:x="59397" fg:w="1007"/><text x="96.6581%" y="254.50"></text></g><g><title>call_function (dask/delayed.py:679) (1,221 samples, 1.98%)</title><rect x="96.2392%" y="212" width="1.9818%" height="15" fill="rgb(235,68,52)" fg:x="59293" fg:w="1221"/><text x="96.4892%" y="222.50">c..</text></g><g><title>unzip (dask/delayed.py:42) (1,219 samples, 1.98%)</title><rect x="96.2425%" y="228" width="1.9786%" height="15" fill="rgb(246,142,3)" fg:x="59295" fg:w="1219"/><text x="96.4925%" y="238.50">u..</text></g><g><title>call_function (dask/delayed.py:689) (103 samples, 0.17%)</title><rect x="98.2341%" y="212" width="0.1672%" height="15" fill="rgb(241,25,7)" fg:x="60522" fg:w="103"/><text x="98.4841%" y="222.50"></text></g><g><title>__call__ (dask/delayed.py:712) (1,458 samples, 2.37%)</title><rect x="96.0558%" y="196" width="2.3665%" height="15" fill="rgb(242,119,39)" fg:x="59180" fg:w="1458"/><text x="96.3058%" y="206.50">__..</text></g><g><title>join_catalog_data_nested (lsdb/dask/join_catalog_data.py:346) (2,434 samples, 3.95%)</title><rect x="94.4765%" y="100" width="3.9507%" height="15" fill="rgb(241,98,45)" fg:x="58207" fg:w="2434"/><text x="94.7265%" y="110.50">join..</text></g><g><title>align_and_apply (lsdb/dask/merge_catalog_functions.py:158) (1,663 samples, 2.70%)</title><rect x="95.7280%" y="116" width="2.6992%" height="15" fill="rgb(254,28,30)" fg:x="58978" fg:w="1663"/><text x="95.9780%" y="126.50">al..</text></g><g><title>__call__ (numpy/lib/function_base.py:2372) (1,663 samples, 2.70%)</title><rect x="95.7280%" y="132" width="2.6992%" height="15" fill="rgb(241,142,54)" fg:x="58978" fg:w="1663"/><text x="95.9780%" y="142.50">__..</text></g><g><title>_call_as_normal (numpy/lib/function_base.py:2365) (1,663 samples, 2.70%)</title><rect x="95.7280%" y="148" width="2.6992%" height="15" fill="rgb(222,85,15)" fg:x="58978" fg:w="1663"/><text x="95.9780%" y="158.50">_c..</text></g><g><title>_vectorize_call (numpy/lib/function_base.py:2455) (1,476 samples, 2.40%)</title><rect x="96.0315%" y="164" width="2.3957%" height="15" fill="rgb(210,85,47)" fg:x="59165" fg:w="1476"/><text x="96.2815%" y="174.50">_v..</text></g><g><title>apply_func (lsdb/dask/merge_catalog_functions.py:156) (1,471 samples, 2.39%)</title><rect x="96.0396%" y="180" width="2.3876%" height="15" fill="rgb(224,206,25)" fg:x="59170" fg:w="1471"/><text x="96.2896%" y="190.50">ap..</text></g><g><title>iterrows (pandas/core/frame.py:1554) (183 samples, 0.30%)</title><rect x="98.4369%" y="148" width="0.2970%" height="15" fill="rgb(243,201,19)" fg:x="60647" fg:w="183"/><text x="98.6869%" y="158.50"></text></g><g><title>get_partition_map_from_alignment_pixels (lsdb/dask/merge_catalog_functions.py:321) (190 samples, 0.31%)</title><rect x="98.4272%" y="132" width="0.3084%" height="15" fill="rgb(236,59,4)" fg:x="60641" fg:w="190"/><text x="98.6772%" y="142.50"></text></g><g><title>construct_catalog_args (lsdb/dask/merge_catalog_functions.py:194) (243 samples, 0.39%)</title><rect x="98.4272%" y="116" width="0.3944%" height="15" fill="rgb(254,179,45)" fg:x="60641" fg:w="243"/><text x="98.6772%" y="126.50"></text></g><g><title>dumps (cloudpickle/cloudpickle.py:1479) (126 samples, 0.20%)</title><rect x="99.1316%" y="356" width="0.2045%" height="15" fill="rgb(226,14,10)" fg:x="61075" fg:w="126"/><text x="99.3816%" y="366.50"></text></g><g><title>dump (cloudpickle/cloudpickle.py:1245) (121 samples, 0.20%)</title><rect x="99.1398%" y="372" width="0.1964%" height="15" fill="rgb(244,27,41)" fg:x="61080" fg:w="121"/><text x="99.3898%" y="382.50"></text></g><g><title>_normalize_pickle (dask/base.py:1251) (272 samples, 0.44%)</title><rect x="98.8979%" y="340" width="0.4415%" height="15" fill="rgb(235,35,32)" fg:x="60931" fg:w="272"/><text x="99.1479%" y="350.50"></text></g><g><title>_normalize_pickle (dask/base.py:1252) (95 samples, 0.15%)</title><rect x="99.3394%" y="340" width="0.1542%" height="15" fill="rgb(218,68,31)" fg:x="61203" fg:w="95"/><text x="99.5894%" y="350.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (447 samples, 0.73%)</title><rect x="98.8411%" y="292" width="0.7255%" height="15" fill="rgb(207,120,37)" fg:x="60896" fg:w="447"/><text x="99.0911%" y="302.50"></text></g><g><title>__call__ (dask/utils.py:773) (432 samples, 0.70%)</title><rect x="98.8654%" y="308" width="0.7012%" height="15" fill="rgb(227,98,0)" fg:x="60911" fg:w="432"/><text x="99.1154%" y="318.50"></text></g><g><title>normalize_object (dask/base.py:1218) (418 samples, 0.68%)</title><rect x="98.8882%" y="324" width="0.6785%" height="15" fill="rgb(207,7,3)" fg:x="60925" fg:w="418"/><text x="99.1382%" y="334.50"></text></g><g><title>from_delayed (dask_expr/io/_delayed.py:142) (457 samples, 0.74%)</title><rect x="98.8281%" y="148" width="0.7418%" height="15" fill="rgb(206,98,19)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="158.50"></text></g><g><title>__new__ (dask_expr/_core.py:57) (457 samples, 0.74%)</title><rect x="98.8281%" y="164" width="0.7418%" height="15" fill="rgb(217,5,26)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="174.50"></text></g><g><title>__get__ (functools.py:1001) (457 samples, 0.74%)</title><rect x="98.8281%" y="180" width="0.7418%" height="15" fill="rgb(235,190,38)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="190.50"></text></g><g><title>_name (dask_expr/io/_delayed.py:40) (457 samples, 0.74%)</title><rect x="98.8281%" y="196" width="0.7418%" height="15" fill="rgb(247,86,24)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="206.50"></text></g><g><title>_tokenize_deterministic (dask_expr/_util.py:102) (457 samples, 0.74%)</title><rect x="98.8281%" y="212" width="0.7418%" height="15" fill="rgb(205,101,16)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="222.50"></text></g><g><title>tokenize (dask/base.py:1036) (457 samples, 0.74%)</title><rect x="98.8281%" y="228" width="0.7418%" height="15" fill="rgb(246,168,33)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="238.50"></text></g><g><title>_normalize_seq_func (dask/base.py:1162) (457 samples, 0.74%)</title><rect x="98.8281%" y="244" width="0.7418%" height="15" fill="rgb(231,114,1)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="254.50"></text></g><g><title>__call__ (dask/utils.py:773) (457 samples, 0.74%)</title><rect x="98.8281%" y="260" width="0.7418%" height="15" fill="rgb(207,184,53)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="270.50"></text></g><g><title>normalize_seq (dask/base.py:1169) (457 samples, 0.74%)</title><rect x="98.8281%" y="276" width="0.7418%" height="15" fill="rgb(224,95,51)" fg:x="60888" fg:w="457"/><text x="99.0781%" y="286.50"></text></g><g><title>__init__ (dask/delayed.py:733) (94 samples, 0.15%)</title><rect x="99.5877%" y="228" width="0.1526%" height="15" fill="rgb(212,188,45)" fg:x="61356" fg:w="94"/><text x="99.8377%" y="238.50"></text></g><g><title>tokenize (dask/delayed.py:278) (91 samples, 0.15%)</title><rect x="99.5926%" y="244" width="0.1477%" height="15" fill="rgb(223,154,38)" fg:x="61359" fg:w="91"/><text x="99.8426%" y="254.50"></text></g><g><title>_unpack_collections (dask_expr/_core.py:36) (129 samples, 0.21%)</title><rect x="99.5715%" y="196" width="0.2094%" height="15" fill="rgb(251,22,52)" fg:x="61346" fg:w="129"/><text x="99.8215%" y="206.50"></text></g><g><title>__getattr__ (dask/delayed.py:616) (120 samples, 0.19%)</title><rect x="99.5861%" y="212" width="0.1948%" height="15" fill="rgb(229,209,22)" fg:x="61355" fg:w="120"/><text x="99.8361%" y="222.50"></text></g><g><title>__init__ (dask/delayed.py:733) (79 samples, 0.13%)</title><rect x="99.7939%" y="228" width="0.1282%" height="15" fill="rgb(234,138,34)" fg:x="61483" fg:w="79"/><text x="100.0439%" y="238.50"></text></g><g><title>tokenize (dask/delayed.py:278) (74 samples, 0.12%)</title><rect x="99.8020%" y="244" width="0.1201%" height="15" fill="rgb(212,95,11)" fg:x="61488" fg:w="74"/><text x="100.0520%" y="254.50"></text></g><g><title>__new__ (dask_expr/_core.py:56) (232 samples, 0.38%)</title><rect x="99.5715%" y="164" width="0.3766%" height="15" fill="rgb(240,179,47)" fg:x="61346" fg:w="232"/><text x="99.8215%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (dask_expr/_core.py:56) (232 samples, 0.38%)</title><rect x="99.5715%" y="180" width="0.3766%" height="15" fill="rgb(240,163,11)" fg:x="61346" fg:w="232"/><text x="99.8215%" y="190.50"></text></g><g><title>_unpack_collections (dask_expr/_core.py:37) (103 samples, 0.17%)</title><rect x="99.7809%" y="196" width="0.1672%" height="15" fill="rgb(236,37,12)" fg:x="61475" fg:w="103"/><text x="100.0309%" y="206.50"></text></g><g><title>__getattr__ (dask/delayed.py:616) (97 samples, 0.16%)</title><rect x="99.7906%" y="212" width="0.1574%" height="15" fill="rgb(232,164,16)" fg:x="61481" fg:w="97"/><text x="100.0406%" y="222.50"></text></g><g><title>join_nested (lsdb/catalog/catalog.py:544) (3,400 samples, 5.52%)</title><rect x="94.4392%" y="84" width="5.5186%" height="15" fill="rgb(244,205,15)" fg:x="58184" fg:w="3400"/><text x="94.6892%" y="94.50">join_ne..</text></g><g><title>join_catalog_data_nested (lsdb/dask/join_catalog_data.py:357) (943 samples, 1.53%)</title><rect x="98.4272%" y="100" width="1.5306%" height="15" fill="rgb(223,117,47)" fg:x="60641" fg:w="943"/><text x="98.6772%" y="110.50"></text></g><g><title>construct_catalog_args (lsdb/dask/merge_catalog_functions.py:198) (696 samples, 1.13%)</title><rect x="98.8281%" y="116" width="1.1297%" height="15" fill="rgb(244,107,35)" fg:x="60888" fg:w="696"/><text x="99.0781%" y="126.50"></text></g><g><title>from_delayed (nested_dask/core.py:209) (696 samples, 1.13%)</title><rect x="98.8281%" y="132" width="1.1297%" height="15" fill="rgb(205,140,8)" fg:x="60888" fg:w="696"/><text x="99.0781%" y="142.50"></text></g><g><title>from_delayed (dask_expr/io/_delayed.py:143) (239 samples, 0.39%)</title><rect x="99.5699%" y="148" width="0.3879%" height="15" fill="rgb(228,84,46)" fg:x="61345" fg:w="239"/><text x="99.8199%" y="158.50"></text></g><g><title>&lt;module&gt; (ztf-periodogram-data.lsdb.io.py:95) (3,404 samples, 5.53%)</title><rect x="94.4392%" y="68" width="5.5251%" height="15" fill="rgb(254,188,9)" fg:x="58184" fg:w="3404"/><text x="94.6892%" y="78.50">&lt;module..</text></g><g><title>all (61,610 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="61610"/><text x="0.2500%" y="62.50"></text></g></svg></svg>