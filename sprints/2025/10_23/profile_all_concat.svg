<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1610" onload="init(evt)" viewBox="0 0 1200 1610" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1610" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile_all_concat.svg -- pytest -k test_concat</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1599.00"> </text><svg id="frames" x="10" width="1180" total_samples="36744"><g><title>&lt;module&gt; (hats/catalog/dataset/table_properties.py:13) (38 samples, 0.10%)</title><rect x="0.1578%" y="1268" width="0.1034%" height="15" fill="rgb(227,0,7)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.10%)</title><rect x="0.1578%" y="1284" width="0.1034%" height="15" fill="rgb(217,0,24)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.10%)</title><rect x="0.1578%" y="1300" width="0.1034%" height="15" fill="rgb(221,193,54)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.10%)</title><rect x="0.1578%" y="1316" width="0.1034%" height="15" fill="rgb(248,212,6)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.10%)</title><rect x="0.1578%" y="1332" width="0.1034%" height="15" fill="rgb(208,68,35)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.10%)</title><rect x="0.1578%" y="1348" width="0.1034%" height="15" fill="rgb(232,128,0)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1358.50"></text></g><g><title>&lt;module&gt; (hats/io/__init__.py:3) (38 samples, 0.10%)</title><rect x="0.1578%" y="1364" width="0.1034%" height="15" fill="rgb(207,160,47)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.10%)</title><rect x="0.1578%" y="1380" width="0.1034%" height="15" fill="rgb(228,23,34)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.10%)</title><rect x="0.1578%" y="1396" width="0.1034%" height="15" fill="rgb(218,30,26)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.10%)</title><rect x="0.1578%" y="1412" width="0.1034%" height="15" fill="rgb(220,122,19)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.10%)</title><rect x="0.1578%" y="1428" width="0.1034%" height="15" fill="rgb(250,228,42)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.10%)</title><rect x="0.1578%" y="1444" width="0.1034%" height="15" fill="rgb(240,193,28)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1454.50"></text></g><g><title>&lt;module&gt; (hats/io/parquet_metadata.py:15) (38 samples, 0.10%)</title><rect x="0.1578%" y="1460" width="0.1034%" height="15" fill="rgb(216,20,37)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1470.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (38 samples, 0.10%)</title><rect x="0.1578%" y="1476" width="0.1034%" height="15" fill="rgb(206,188,39)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.10%)</title><rect x="0.1578%" y="1492" width="0.1034%" height="15" fill="rgb(217,207,13)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.10%)</title><rect x="0.1578%" y="1508" width="0.1034%" height="15" fill="rgb(231,73,38)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.10%)</title><rect x="0.1578%" y="1524" width="0.1034%" height="15" fill="rgb(225,20,46)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.10%)</title><rect x="0.1578%" y="1540" width="0.1034%" height="15" fill="rgb(210,31,41)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.10%)</title><rect x="0.1578%" y="1556" width="0.1034%" height="15" fill="rgb(221,200,47)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.10%)</title><rect x="0.1578%" y="1572" width="0.1034%" height="15" fill="rgb(226,26,5)" fg:x="58" fg:w="38"/><text x="0.4078%" y="1582.50"></text></g><g><title>&lt;module&gt; (hats/catalog/healpix_dataset/healpix_dataset.py:12) (44 samples, 0.12%)</title><rect x="0.1578%" y="980" width="0.1197%" height="15" fill="rgb(249,33,26)" fg:x="58" fg:w="44"/><text x="0.4078%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.12%)</title><rect x="0.1578%" y="996" width="0.1197%" height="15" fill="rgb(235,183,28)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.12%)</title><rect x="0.1578%" y="1012" width="0.1197%" height="15" fill="rgb(221,5,38)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.12%)</title><rect x="0.1578%" y="1028" width="0.1197%" height="15" fill="rgb(247,18,42)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.12%)</title><rect x="0.1578%" y="1044" width="0.1197%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.12%)</title><rect x="0.1578%" y="1060" width="0.1197%" height="15" fill="rgb(249,31,29)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1070.50"></text></g><g><title>&lt;module&gt; (hats/catalog/dataset/__init__.py:1) (44 samples, 0.12%)</title><rect x="0.1578%" y="1076" width="0.1197%" height="15" fill="rgb(225,111,53)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.12%)</title><rect x="0.1578%" y="1092" width="0.1197%" height="15" fill="rgb(238,160,17)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.12%)</title><rect x="0.1578%" y="1108" width="0.1197%" height="15" fill="rgb(214,148,48)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.12%)</title><rect x="0.1578%" y="1124" width="0.1197%" height="15" fill="rgb(232,36,49)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.12%)</title><rect x="0.1578%" y="1140" width="0.1197%" height="15" fill="rgb(209,103,24)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.12%)</title><rect x="0.1578%" y="1156" width="0.1197%" height="15" fill="rgb(229,88,8)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1166.50"></text></g><g><title>&lt;module&gt; (hats/catalog/dataset/dataset.py:10) (44 samples, 0.12%)</title><rect x="0.1578%" y="1172" width="0.1197%" height="15" fill="rgb(213,181,19)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (44 samples, 0.12%)</title><rect x="0.1578%" y="1188" width="0.1197%" height="15" fill="rgb(254,191,54)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (44 samples, 0.12%)</title><rect x="0.1578%" y="1204" width="0.1197%" height="15" fill="rgb(241,83,37)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (44 samples, 0.12%)</title><rect x="0.1578%" y="1220" width="0.1197%" height="15" fill="rgb(233,36,39)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (44 samples, 0.12%)</title><rect x="0.1578%" y="1236" width="0.1197%" height="15" fill="rgb(226,3,54)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (44 samples, 0.12%)</title><rect x="0.1578%" y="1252" width="0.1197%" height="15" fill="rgb(245,192,40)" fg:x="58" fg:w="44"/><text x="0.4078%" y="1262.50"></text></g><g><title>&lt;module&gt; (hats/catalog/healpix_dataset/healpix_dataset.py:6) (38 samples, 0.10%)</title><rect x="0.3484%" y="980" width="0.1034%" height="15" fill="rgb(238,167,29)" fg:x="128" fg:w="38"/><text x="0.5984%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (38 samples, 0.10%)</title><rect x="0.3484%" y="996" width="0.1034%" height="15" fill="rgb(232,182,51)" fg:x="128" fg:w="38"/><text x="0.5984%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (38 samples, 0.10%)</title><rect x="0.3484%" y="1012" width="0.1034%" height="15" fill="rgb(231,60,39)" fg:x="128" fg:w="38"/><text x="0.5984%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (38 samples, 0.10%)</title><rect x="0.3484%" y="1028" width="0.1034%" height="15" fill="rgb(208,69,12)" fg:x="128" fg:w="38"/><text x="0.5984%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (38 samples, 0.10%)</title><rect x="0.3484%" y="1044" width="0.1034%" height="15" fill="rgb(235,93,37)" fg:x="128" fg:w="38"/><text x="0.5984%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (38 samples, 0.10%)</title><rect x="0.3484%" y="1060" width="0.1034%" height="15" fill="rgb(213,116,39)" fg:x="128" fg:w="38"/><text x="0.5984%" y="1070.50"></text></g><g><title>main (_pytest/config/__init__.py:156) (192 samples, 0.52%)</title><rect x="0.0354%" y="100" width="0.5225%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="192"/><text x="0.2854%" y="110.50"></text></g><g><title>_prepareconfig (_pytest/config/__init__.py:342) (188 samples, 0.51%)</title><rect x="0.0463%" y="116" width="0.5116%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="188"/><text x="0.2963%" y="126.50"></text></g><g><title>__call__ (pluggy/_hooks.py:512) (188 samples, 0.51%)</title><rect x="0.0463%" y="132" width="0.5116%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="188"/><text x="0.2963%" y="142.50"></text></g><g><title>_hookexec (pluggy/_manager.py:120) (188 samples, 0.51%)</title><rect x="0.0463%" y="148" width="0.5116%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="188"/><text x="0.2963%" y="158.50"></text></g><g><title>_multicall (pluggy/_callers.py:121) (188 samples, 0.51%)</title><rect x="0.0463%" y="164" width="0.5116%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="188"/><text x="0.2963%" y="174.50"></text></g><g><title>pytest_cmdline_parse (_pytest/config/__init__.py:1146) (188 samples, 0.51%)</title><rect x="0.0463%" y="180" width="0.5116%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="188"/><text x="0.2963%" y="190.50"></text></g><g><title>parse (_pytest/config/__init__.py:1527) (188 samples, 0.51%)</title><rect x="0.0463%" y="196" width="0.5116%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="188"/><text x="0.2963%" y="206.50"></text></g><g><title>_preparse (_pytest/config/__init__.py:1431) (185 samples, 0.50%)</title><rect x="0.0544%" y="212" width="0.5035%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="185"/><text x="0.3044%" y="222.50"></text></g><g><title>__call__ (pluggy/_hooks.py:512) (185 samples, 0.50%)</title><rect x="0.0544%" y="228" width="0.5035%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="185"/><text x="0.3044%" y="238.50"></text></g><g><title>_hookexec (pluggy/_manager.py:120) (185 samples, 0.50%)</title><rect x="0.0544%" y="244" width="0.5035%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="185"/><text x="0.3044%" y="254.50"></text></g><g><title>_multicall (pluggy/_callers.py:121) (185 samples, 0.50%)</title><rect x="0.0544%" y="260" width="0.5035%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="185"/><text x="0.3044%" y="270.50"></text></g><g><title>pytest_load_initial_conftests (_pytest/config/__init__.py:1228) (185 samples, 0.50%)</title><rect x="0.0544%" y="276" width="0.5035%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="185"/><text x="0.3044%" y="286.50"></text></g><g><title>_set_initial_conftests (_pytest/config/__init__.py:583) (185 samples, 0.50%)</title><rect x="0.0544%" y="292" width="0.5035%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="185"/><text x="0.3044%" y="302.50"></text></g><g><title>_try_load_conftest (_pytest/config/__init__.py:621) (185 samples, 0.50%)</title><rect x="0.0544%" y="308" width="0.5035%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="185"/><text x="0.3044%" y="318.50"></text></g><g><title>_loadconftestmodules (_pytest/config/__init__.py:661) (185 samples, 0.50%)</title><rect x="0.0544%" y="324" width="0.5035%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="185"/><text x="0.3044%" y="334.50"></text></g><g><title>_importconftest (_pytest/config/__init__.py:712) (185 samples, 0.50%)</title><rect x="0.0544%" y="340" width="0.5035%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="185"/><text x="0.3044%" y="350.50"></text></g><g><title>import_path (_pytest/pathlib.py:587) (185 samples, 0.50%)</title><rect x="0.0544%" y="356" width="0.5035%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="185"/><text x="0.3044%" y="366.50"></text></g><g><title>import_module (importlib/__init__.py:90) (185 samples, 0.50%)</title><rect x="0.0544%" y="372" width="0.5035%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="185"/><text x="0.3044%" y="382.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1387) (185 samples, 0.50%)</title><rect x="0.0544%" y="388" width="0.5035%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="185"/><text x="0.3044%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (185 samples, 0.50%)</title><rect x="0.0544%" y="404" width="0.5035%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="185"/><text x="0.3044%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (185 samples, 0.50%)</title><rect x="0.0544%" y="420" width="0.5035%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="185"/><text x="0.3044%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (185 samples, 0.50%)</title><rect x="0.0544%" y="436" width="0.5035%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="185"/><text x="0.3044%" y="446.50"></text></g><g><title>exec_module (_pytest/assertion/rewrite.py:186) (185 samples, 0.50%)</title><rect x="0.0544%" y="452" width="0.5035%" height="15" fill="rgb(247,138,52)" fg:x="20" fg:w="185"/><text x="0.3044%" y="462.50"></text></g><g><title>&lt;module&gt; (conftest.py:3) (157 samples, 0.43%)</title><rect x="0.1306%" y="468" width="0.4273%" height="15" fill="rgb(213,79,30)" fg:x="48" fg:w="157"/><text x="0.3806%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (157 samples, 0.43%)</title><rect x="0.1306%" y="484" width="0.4273%" height="15" fill="rgb(246,177,23)" fg:x="48" fg:w="157"/><text x="0.3806%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (157 samples, 0.43%)</title><rect x="0.1306%" y="500" width="0.4273%" height="15" fill="rgb(230,62,27)" fg:x="48" fg:w="157"/><text x="0.3806%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (157 samples, 0.43%)</title><rect x="0.1306%" y="516" width="0.4273%" height="15" fill="rgb(216,154,8)" fg:x="48" fg:w="157"/><text x="0.3806%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (157 samples, 0.43%)</title><rect x="0.1306%" y="532" width="0.4273%" height="15" fill="rgb(244,35,45)" fg:x="48" fg:w="157"/><text x="0.3806%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="548" width="0.4273%" height="15" fill="rgb(251,115,12)" fg:x="48" fg:w="157"/><text x="0.3806%" y="558.50"></text></g><g><title>&lt;module&gt; (hats/__init__.py:3) (157 samples, 0.43%)</title><rect x="0.1306%" y="564" width="0.4273%" height="15" fill="rgb(240,54,50)" fg:x="48" fg:w="157"/><text x="0.3806%" y="574.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1415) (157 samples, 0.43%)</title><rect x="0.1306%" y="580" width="0.4273%" height="15" fill="rgb(233,84,52)" fg:x="48" fg:w="157"/><text x="0.3806%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="596" width="0.4273%" height="15" fill="rgb(207,117,47)" fg:x="48" fg:w="157"/><text x="0.3806%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (157 samples, 0.43%)</title><rect x="0.1306%" y="612" width="0.4273%" height="15" fill="rgb(249,43,39)" fg:x="48" fg:w="157"/><text x="0.3806%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (157 samples, 0.43%)</title><rect x="0.1306%" y="628" width="0.4273%" height="15" fill="rgb(209,38,44)" fg:x="48" fg:w="157"/><text x="0.3806%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (157 samples, 0.43%)</title><rect x="0.1306%" y="644" width="0.4273%" height="15" fill="rgb(236,212,23)" fg:x="48" fg:w="157"/><text x="0.3806%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (157 samples, 0.43%)</title><rect x="0.1306%" y="660" width="0.4273%" height="15" fill="rgb(242,79,21)" fg:x="48" fg:w="157"/><text x="0.3806%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="676" width="0.4273%" height="15" fill="rgb(211,96,35)" fg:x="48" fg:w="157"/><text x="0.3806%" y="686.50"></text></g><g><title>&lt;module&gt; (hats/catalog/__init__.py:3) (157 samples, 0.43%)</title><rect x="0.1306%" y="692" width="0.4273%" height="15" fill="rgb(253,215,40)" fg:x="48" fg:w="157"/><text x="0.3806%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (157 samples, 0.43%)</title><rect x="0.1306%" y="708" width="0.4273%" height="15" fill="rgb(211,81,21)" fg:x="48" fg:w="157"/><text x="0.3806%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (157 samples, 0.43%)</title><rect x="0.1306%" y="724" width="0.4273%" height="15" fill="rgb(208,190,38)" fg:x="48" fg:w="157"/><text x="0.3806%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (157 samples, 0.43%)</title><rect x="0.1306%" y="740" width="0.4273%" height="15" fill="rgb(235,213,38)" fg:x="48" fg:w="157"/><text x="0.3806%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (157 samples, 0.43%)</title><rect x="0.1306%" y="756" width="0.4273%" height="15" fill="rgb(237,122,38)" fg:x="48" fg:w="157"/><text x="0.3806%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="772" width="0.4273%" height="15" fill="rgb(244,218,35)" fg:x="48" fg:w="157"/><text x="0.3806%" y="782.50"></text></g><g><title>&lt;module&gt; (hats/catalog/association_catalog/__init__.py:1) (157 samples, 0.43%)</title><rect x="0.1306%" y="788" width="0.4273%" height="15" fill="rgb(240,68,47)" fg:x="48" fg:w="157"/><text x="0.3806%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (157 samples, 0.43%)</title><rect x="0.1306%" y="804" width="0.4273%" height="15" fill="rgb(210,16,53)" fg:x="48" fg:w="157"/><text x="0.3806%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (157 samples, 0.43%)</title><rect x="0.1306%" y="820" width="0.4273%" height="15" fill="rgb(235,124,12)" fg:x="48" fg:w="157"/><text x="0.3806%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (157 samples, 0.43%)</title><rect x="0.1306%" y="836" width="0.4273%" height="15" fill="rgb(224,169,11)" fg:x="48" fg:w="157"/><text x="0.3806%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (157 samples, 0.43%)</title><rect x="0.1306%" y="852" width="0.4273%" height="15" fill="rgb(250,166,2)" fg:x="48" fg:w="157"/><text x="0.3806%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="868" width="0.4273%" height="15" fill="rgb(242,216,29)" fg:x="48" fg:w="157"/><text x="0.3806%" y="878.50"></text></g><g><title>&lt;module&gt; (hats/catalog/association_catalog/association_catalog.py:3) (157 samples, 0.43%)</title><rect x="0.1306%" y="884" width="0.4273%" height="15" fill="rgb(230,116,27)" fg:x="48" fg:w="157"/><text x="0.3806%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (157 samples, 0.43%)</title><rect x="0.1306%" y="900" width="0.4273%" height="15" fill="rgb(228,99,48)" fg:x="48" fg:w="157"/><text x="0.3806%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (157 samples, 0.43%)</title><rect x="0.1306%" y="916" width="0.4273%" height="15" fill="rgb(253,11,6)" fg:x="48" fg:w="157"/><text x="0.3806%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (157 samples, 0.43%)</title><rect x="0.1306%" y="932" width="0.4273%" height="15" fill="rgb(247,143,39)" fg:x="48" fg:w="157"/><text x="0.3806%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (157 samples, 0.43%)</title><rect x="0.1306%" y="948" width="0.4273%" height="15" fill="rgb(236,97,10)" fg:x="48" fg:w="157"/><text x="0.3806%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (157 samples, 0.43%)</title><rect x="0.1306%" y="964" width="0.4273%" height="15" fill="rgb(233,208,19)" fg:x="48" fg:w="157"/><text x="0.3806%" y="974.50"></text></g><g><title>&lt;module&gt; (hats/catalog/healpix_dataset/healpix_dataset.py:8) (39 samples, 0.11%)</title><rect x="0.4518%" y="980" width="0.1061%" height="15" fill="rgb(216,164,2)" fg:x="166" fg:w="39"/><text x="0.7018%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (39 samples, 0.11%)</title><rect x="0.4518%" y="996" width="0.1061%" height="15" fill="rgb(220,129,5)" fg:x="166" fg:w="39"/><text x="0.7018%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (39 samples, 0.11%)</title><rect x="0.4518%" y="1012" width="0.1061%" height="15" fill="rgb(242,17,10)" fg:x="166" fg:w="39"/><text x="0.7018%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (39 samples, 0.11%)</title><rect x="0.4518%" y="1028" width="0.1061%" height="15" fill="rgb(242,107,0)" fg:x="166" fg:w="39"/><text x="0.7018%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:995) (39 samples, 0.11%)</title><rect x="0.4518%" y="1044" width="0.1061%" height="15" fill="rgb(251,28,31)" fg:x="166" fg:w="39"/><text x="0.7018%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (39 samples, 0.11%)</title><rect x="0.4518%" y="1060" width="0.1061%" height="15" fill="rgb(233,223,10)" fg:x="166" fg:w="39"/><text x="0.7018%" y="1070.50"></text></g><g><title>test_concat_both_margins_uses_smallest_threshold (test_concatenation.py:720) (51 samples, 0.14%)</title><rect x="0.6804%" y="548" width="0.1388%" height="15" fill="rgb(215,21,27)" fg:x="250" fg:w="51"/><text x="0.9304%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (51 samples, 0.14%)</title><rect x="0.6804%" y="564" width="0.1388%" height="15" fill="rgb(232,23,21)" fg:x="250" fg:w="51"/><text x="0.9304%" y="574.50"></text></g><g><title>test_concat_both_margins_uses_smallest_threshold (test_concatenation.py:730) (116 samples, 0.32%)</title><rect x="0.8437%" y="548" width="0.3157%" height="15" fill="rgb(244,5,23)" fg:x="310" fg:w="116"/><text x="1.0937%" y="558.50"></text></g><g><title>test_concat_catalog_margin_content (test_concatenation.py:332) (37 samples, 0.10%)</title><rect x="1.2111%" y="548" width="0.1007%" height="15" fill="rgb(226,81,46)" fg:x="445" fg:w="37"/><text x="1.4611%" y="558.50"></text></g><g><title>test_concat_catalog_row_count (test_concatenation.py:231) (43 samples, 0.12%)</title><rect x="1.3580%" y="548" width="0.1170%" height="15" fill="rgb(247,70,30)" fg:x="499" fg:w="43"/><text x="1.6080%" y="558.50"></text></g><g><title>search (lsdb/catalog/catalog.py:587) (43 samples, 0.12%)</title><rect x="1.3580%" y="564" width="0.1170%" height="15" fill="rgb(212,68,19)" fg:x="499" fg:w="43"/><text x="1.6080%" y="574.50"></text></g><g><title>search (lsdb/catalog/dataset/healpix_dataset.py:636) (43 samples, 0.12%)</title><rect x="1.3580%" y="580" width="0.1170%" height="15" fill="rgb(240,187,13)" fg:x="499" fg:w="43"/><text x="1.6080%" y="590.50"></text></g><g><title>_reload_with_filter (lsdb/catalog/dataset/healpix_dataset.py:667) (42 samples, 0.11%)</title><rect x="1.3608%" y="596" width="0.1143%" height="15" fill="rgb(223,113,26)" fg:x="500" fg:w="42"/><text x="1.6108%" y="606.50"></text></g><g><title>_load_catalog (lsdb/loaders/hats/read_hats.py:170) (42 samples, 0.11%)</title><rect x="1.3608%" y="612" width="0.1143%" height="15" fill="rgb(206,192,2)" fg:x="500" fg:w="42"/><text x="1.6108%" y="622.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:470) (43 samples, 0.12%)</title><rect x="1.5867%" y="1220" width="0.1170%" height="15" fill="rgb(241,108,4)" fg:x="583" fg:w="43"/><text x="1.8367%" y="1230.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:499) (63 samples, 0.17%)</title><rect x="1.7880%" y="1220" width="0.1715%" height="15" fill="rgb(247,173,49)" fg:x="657" fg:w="63"/><text x="2.0380%" y="1230.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (63 samples, 0.17%)</title><rect x="1.7880%" y="1236" width="0.1715%" height="15" fill="rgb(224,114,35)" fg:x="657" fg:w="63"/><text x="2.0380%" y="1246.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:996) (63 samples, 0.17%)</title><rect x="1.7880%" y="1252" width="0.1715%" height="15" fill="rgb(245,159,27)" fg:x="657" fg:w="63"/><text x="2.0380%" y="1262.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (63 samples, 0.17%)</title><rect x="1.7880%" y="1268" width="0.1715%" height="15" fill="rgb(245,172,44)" fg:x="657" fg:w="63"/><text x="2.0380%" y="1278.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (165 samples, 0.45%)</title><rect x="1.5377%" y="996" width="0.4491%" height="15" fill="rgb(236,23,11)" fg:x="565" fg:w="165"/><text x="1.7877%" y="1006.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:319) (165 samples, 0.45%)</title><rect x="1.5377%" y="1012" width="0.4491%" height="15" fill="rgb(205,117,38)" fg:x="565" fg:w="165"/><text x="1.7877%" y="1022.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (164 samples, 0.45%)</title><rect x="1.5404%" y="1028" width="0.4463%" height="15" fill="rgb(237,72,25)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1038.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (164 samples, 0.45%)</title><rect x="1.5404%" y="1044" width="0.4463%" height="15" fill="rgb(244,70,9)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1054.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (164 samples, 0.45%)</title><rect x="1.5404%" y="1060" width="0.4463%" height="15" fill="rgb(217,125,39)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1070.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (164 samples, 0.45%)</title><rect x="1.5404%" y="1076" width="0.4463%" height="15" fill="rgb(235,36,10)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1086.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (164 samples, 0.45%)</title><rect x="1.5404%" y="1092" width="0.4463%" height="15" fill="rgb(251,123,47)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1102.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (164 samples, 0.45%)</title><rect x="1.5404%" y="1108" width="0.4463%" height="15" fill="rgb(221,13,13)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1118.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (164 samples, 0.45%)</title><rect x="1.5404%" y="1124" width="0.4463%" height="15" fill="rgb(238,131,9)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1134.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (164 samples, 0.45%)</title><rect x="1.5404%" y="1140" width="0.4463%" height="15" fill="rgb(211,50,8)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1150.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (164 samples, 0.45%)</title><rect x="1.5404%" y="1156" width="0.4463%" height="15" fill="rgb(245,182,24)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1166.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (164 samples, 0.45%)</title><rect x="1.5404%" y="1172" width="0.4463%" height="15" fill="rgb(242,14,37)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1182.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (164 samples, 0.45%)</title><rect x="1.5404%" y="1188" width="0.4463%" height="15" fill="rgb(246,228,12)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1198.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (164 samples, 0.45%)</title><rect x="1.5404%" y="1204" width="0.4463%" height="15" fill="rgb(213,55,15)" fg:x="566" fg:w="164"/><text x="1.7904%" y="1214.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:572) (184 samples, 0.50%)</title><rect x="1.4887%" y="916" width="0.5008%" height="15" fill="rgb(209,9,3)" fg:x="547" fg:w="184"/><text x="1.7387%" y="926.50"></text></g><g><title>resolve (numba/core/typeinfer.py:595) (183 samples, 0.50%)</title><rect x="1.4914%" y="932" width="0.4980%" height="15" fill="rgb(230,59,30)" fg:x="548" fg:w="183"/><text x="1.7414%" y="942.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1569) (183 samples, 0.50%)</title><rect x="1.4914%" y="948" width="0.4980%" height="15" fill="rgb(209,121,21)" fg:x="548" fg:w="183"/><text x="1.7414%" y="958.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:279) (183 samples, 0.50%)</title><rect x="1.4914%" y="964" width="0.4980%" height="15" fill="rgb(220,109,13)" fg:x="548" fg:w="183"/><text x="1.7414%" y="974.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:335) (183 samples, 0.50%)</title><rect x="1.4914%" y="980" width="0.4980%" height="15" fill="rgb(232,18,1)" fg:x="548" fg:w="183"/><text x="1.7414%" y="990.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:114) (189 samples, 0.51%)</title><rect x="1.4805%" y="852" width="0.5144%" height="15" fill="rgb(215,41,42)" fg:x="544" fg:w="189"/><text x="1.7305%" y="862.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:95) (189 samples, 0.51%)</title><rect x="1.4805%" y="868" width="0.5144%" height="15" fill="rgb(224,123,36)" fg:x="544" fg:w="189"/><text x="1.7305%" y="878.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1075) (189 samples, 0.51%)</title><rect x="1.4805%" y="884" width="0.5144%" height="15" fill="rgb(240,125,3)" fg:x="544" fg:w="189"/><text x="1.7305%" y="894.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (188 samples, 0.51%)</title><rect x="1.4832%" y="900" width="0.5116%" height="15" fill="rgb(205,98,50)" fg:x="545" fg:w="188"/><text x="1.7332%" y="910.50"></text></g><g><title>test_concat_catalog_row_count (test_concatenation.py:234) (260 samples, 0.71%)</title><rect x="1.4805%" y="548" width="0.7076%" height="15" fill="rgb(205,185,37)" fg:x="544" fg:w="260"/><text x="1.7305%" y="558.50"></text></g><g><title>concat (lsdb/catalog/catalog.py:430) (260 samples, 0.71%)</title><rect x="1.4805%" y="564" width="0.7076%" height="15" fill="rgb(238,207,15)" fg:x="544" fg:w="260"/><text x="1.7305%" y="574.50"></text></g><g><title>concat_catalog_data (lsdb/dask/concat_catalog_data.py:368) (260 samples, 0.71%)</title><rect x="1.4805%" y="580" width="0.7076%" height="15" fill="rgb(213,199,42)" fg:x="544" fg:w="260"/><text x="1.7305%" y="590.50"></text></g><g><title>concat_align_catalogs (lsdb/dask/merge_catalog_functions.py:297) (260 samples, 0.71%)</title><rect x="1.4805%" y="596" width="0.7076%" height="15" fill="rgb(235,201,11)" fg:x="544" fg:w="260"/><text x="1.7305%" y="606.50"></text></g><g><title>align_with_mocs (hats/pixel_tree/pixel_alignment.py:438) (260 samples, 0.71%)</title><rect x="1.4805%" y="612" width="0.7076%" height="15" fill="rgb(207,46,11)" fg:x="544" fg:w="260"/><text x="1.7305%" y="622.50"></text></g><g><title>align_trees (hats/pixel_tree/pixel_alignment.py:104) (260 samples, 0.71%)</title><rect x="1.4805%" y="628" width="0.7076%" height="15" fill="rgb(241,35,35)" fg:x="544" fg:w="260"/><text x="1.7305%" y="638.50"></text></g><g><title>_compile_for_args (numba/core/dispatcher.py:376) (260 samples, 0.71%)</title><rect x="1.4805%" y="644" width="0.7076%" height="15" fill="rgb(243,32,47)" fg:x="544" fg:w="260"/><text x="1.7305%" y="654.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (260 samples, 0.71%)</title><rect x="1.4805%" y="660" width="0.7076%" height="15" fill="rgb(247,202,23)" fg:x="544" fg:w="260"/><text x="1.7305%" y="670.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (260 samples, 0.71%)</title><rect x="1.4805%" y="676" width="0.7076%" height="15" fill="rgb(219,102,11)" fg:x="544" fg:w="260"/><text x="1.7305%" y="686.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (260 samples, 0.71%)</title><rect x="1.4805%" y="692" width="0.7076%" height="15" fill="rgb(243,110,44)" fg:x="544" fg:w="260"/><text x="1.7305%" y="702.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (260 samples, 0.71%)</title><rect x="1.4805%" y="708" width="0.7076%" height="15" fill="rgb(222,74,54)" fg:x="544" fg:w="260"/><text x="1.7305%" y="718.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (260 samples, 0.71%)</title><rect x="1.4805%" y="724" width="0.7076%" height="15" fill="rgb(216,99,12)" fg:x="544" fg:w="260"/><text x="1.7305%" y="734.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (260 samples, 0.71%)</title><rect x="1.4805%" y="740" width="0.7076%" height="15" fill="rgb(226,22,26)" fg:x="544" fg:w="260"/><text x="1.7305%" y="750.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (260 samples, 0.71%)</title><rect x="1.4805%" y="756" width="0.7076%" height="15" fill="rgb(217,163,10)" fg:x="544" fg:w="260"/><text x="1.7305%" y="766.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (260 samples, 0.71%)</title><rect x="1.4805%" y="772" width="0.7076%" height="15" fill="rgb(213,25,53)" fg:x="544" fg:w="260"/><text x="1.7305%" y="782.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (260 samples, 0.71%)</title><rect x="1.4805%" y="788" width="0.7076%" height="15" fill="rgb(252,105,26)" fg:x="544" fg:w="260"/><text x="1.7305%" y="798.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (260 samples, 0.71%)</title><rect x="1.4805%" y="804" width="0.7076%" height="15" fill="rgb(220,39,43)" fg:x="544" fg:w="260"/><text x="1.7305%" y="814.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (260 samples, 0.71%)</title><rect x="1.4805%" y="820" width="0.7076%" height="15" fill="rgb(229,68,48)" fg:x="544" fg:w="260"/><text x="1.7305%" y="830.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (260 samples, 0.71%)</title><rect x="1.4805%" y="836" width="0.7076%" height="15" fill="rgb(252,8,32)" fg:x="544" fg:w="260"/><text x="1.7305%" y="846.50"></text></g><g><title>load_catalog (lsdb/loaders/dataframe/dataframe_catalog_loader.py:203) (40 samples, 0.11%)</title><rect x="2.2888%" y="596" width="0.1089%" height="15" fill="rgb(223,20,43)" fg:x="841" fg:w="40"/><text x="2.5388%" y="606.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:82) (47 samples, 0.13%)</title><rect x="2.2779%" y="580" width="0.1279%" height="15" fill="rgb(229,81,49)" fg:x="837" fg:w="47"/><text x="2.5279%" y="590.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:470) (47 samples, 0.13%)</title><rect x="2.5555%" y="1268" width="0.1279%" height="15" fill="rgb(236,28,36)" fg:x="939" fg:w="47"/><text x="2.8055%" y="1278.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:472) (38 samples, 0.10%)</title><rect x="2.6834%" y="1268" width="0.1034%" height="15" fill="rgb(249,185,26)" fg:x="986" fg:w="38"/><text x="2.9334%" y="1278.50"></text></g><g><title>create_cpython_wrapper (numba/core/lowering.py:288) (38 samples, 0.10%)</title><rect x="2.6834%" y="1284" width="0.1034%" height="15" fill="rgb(249,174,33)" fg:x="986" fg:w="38"/><text x="2.9334%" y="1294.50"></text></g><g><title>finalize (numba/core/codegen.py:769) (60 samples, 0.16%)</title><rect x="2.8168%" y="1332" width="0.1633%" height="15" fill="rgb(233,201,37)" fg:x="1035" fg:w="60"/><text x="3.0668%" y="1342.50"></text></g><g><title>_optimize_final_module (numba/core/codegen.py:689) (58 samples, 0.16%)</title><rect x="2.8222%" y="1348" width="0.1578%" height="15" fill="rgb(221,78,26)" fg:x="1037" fg:w="58"/><text x="3.0722%" y="1358.50"></text></g><g><title>run (llvmlite/binding/newpassmanagers.py:122) (58 samples, 0.16%)</title><rect x="2.8222%" y="1364" width="0.1578%" height="15" fill="rgb(250,127,30)" fg:x="1037" fg:w="58"/><text x="3.0722%" y="1374.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:197) (58 samples, 0.16%)</title><rect x="2.8222%" y="1380" width="0.1578%" height="15" fill="rgb(230,49,44)" fg:x="1037" fg:w="58"/><text x="3.0722%" y="1390.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:499) (116 samples, 0.32%)</title><rect x="2.8059%" y="1268" width="0.3157%" height="15" fill="rgb(229,67,23)" fg:x="1031" fg:w="116"/><text x="3.0559%" y="1278.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (116 samples, 0.32%)</title><rect x="2.8059%" y="1284" width="0.3157%" height="15" fill="rgb(249,83,47)" fg:x="1031" fg:w="116"/><text x="3.0559%" y="1294.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:996) (116 samples, 0.32%)</title><rect x="2.8059%" y="1300" width="0.3157%" height="15" fill="rgb(215,43,3)" fg:x="1031" fg:w="116"/><text x="3.0559%" y="1310.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (116 samples, 0.32%)</title><rect x="2.8059%" y="1316" width="0.3157%" height="15" fill="rgb(238,154,13)" fg:x="1031" fg:w="116"/><text x="3.0559%" y="1326.50"></text></g><g><title>finalize (numba/core/codegen.py:772) (51 samples, 0.14%)</title><rect x="2.9828%" y="1332" width="0.1388%" height="15" fill="rgb(219,56,2)" fg:x="1096" fg:w="51"/><text x="3.2328%" y="1342.50"></text></g><g><title>_finalize_final_module (numba/core/codegen.py:804) (44 samples, 0.12%)</title><rect x="3.0019%" y="1348" width="0.1197%" height="15" fill="rgb(233,0,4)" fg:x="1103" fg:w="44"/><text x="3.2519%" y="1358.50"></text></g><g><title>_finalize_specific (numba/core/codegen.py:1006) (37 samples, 0.10%)</title><rect x="3.0209%" y="1364" width="0.1007%" height="15" fill="rgb(235,30,7)" fg:x="1110" fg:w="37"/><text x="3.2709%" y="1374.50"></text></g><g><title>wrapper (numba/core/codegen.py:1067) (37 samples, 0.10%)</title><rect x="3.0209%" y="1380" width="0.1007%" height="15" fill="rgb(250,79,13)" fg:x="1110" fg:w="37"/><text x="3.2709%" y="1390.50"></text></g><g><title>finalize_object (llvmlite/binding/executionengine.py:99) (37 samples, 0.10%)</title><rect x="3.0209%" y="1396" width="0.1007%" height="15" fill="rgb(211,146,34)" fg:x="1110" fg:w="37"/><text x="3.2709%" y="1406.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:197) (37 samples, 0.10%)</title><rect x="3.0209%" y="1412" width="0.1007%" height="15" fill="rgb(228,22,38)" fg:x="1110" fg:w="37"/><text x="3.2709%" y="1422.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:114) (266 samples, 0.72%)</title><rect x="2.4249%" y="900" width="0.7239%" height="15" fill="rgb(235,168,5)" fg:x="891" fg:w="266"/><text x="2.6749%" y="910.50"></text></g><g><title>type_inference_stage (numba/core/typed_passes.py:95) (266 samples, 0.72%)</title><rect x="2.4249%" y="916" width="0.7239%" height="15" fill="rgb(221,155,16)" fg:x="891" fg:w="266"/><text x="2.6749%" y="926.50"></text></g><g><title>propagate (numba/core/typeinfer.py:1075) (266 samples, 0.72%)</title><rect x="2.4249%" y="932" width="0.7239%" height="15" fill="rgb(215,215,53)" fg:x="891" fg:w="266"/><text x="2.6749%" y="942.50"></text></g><g><title>propagate (numba/core/typeinfer.py:160) (266 samples, 0.72%)</title><rect x="2.4249%" y="948" width="0.7239%" height="15" fill="rgb(223,4,10)" fg:x="891" fg:w="266"/><text x="2.6749%" y="958.50"></text></g><g><title>__call__ (numba/core/typeinfer.py:572) (266 samples, 0.72%)</title><rect x="2.4249%" y="964" width="0.7239%" height="15" fill="rgb(234,103,6)" fg:x="891" fg:w="266"/><text x="2.6749%" y="974.50"></text></g><g><title>resolve (numba/core/typeinfer.py:595) (266 samples, 0.72%)</title><rect x="2.4249%" y="980" width="0.7239%" height="15" fill="rgb(227,97,0)" fg:x="891" fg:w="266"/><text x="2.6749%" y="990.50"></text></g><g><title>resolve_call (numba/core/typeinfer.py:1569) (266 samples, 0.72%)</title><rect x="2.4249%" y="996" width="0.7239%" height="15" fill="rgb(234,150,53)" fg:x="891" fg:w="266"/><text x="2.6749%" y="1006.50"></text></g><g><title>resolve_function_type (numba/core/typing/context.py:279) (266 samples, 0.72%)</title><rect x="2.4249%" y="1012" width="0.7239%" height="15" fill="rgb(228,201,54)" fg:x="891" fg:w="266"/><text x="2.6749%" y="1022.50"></text></g><g><title>_resolve_user_function_type (numba/core/typing/context.py:335) (266 samples, 0.72%)</title><rect x="2.4249%" y="1028" width="0.7239%" height="15" fill="rgb(222,22,37)" fg:x="891" fg:w="266"/><text x="2.6749%" y="1038.50"></text></g><g><title>get_call_type (numba/core/types/functions.py:541) (246 samples, 0.67%)</title><rect x="2.4793%" y="1044" width="0.6695%" height="15" fill="rgb(237,53,32)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1054.50"></text></g><g><title>get_call_template (numba/core/dispatcher.py:319) (246 samples, 0.67%)</title><rect x="2.4793%" y="1060" width="0.6695%" height="15" fill="rgb(233,25,53)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1070.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (246 samples, 0.67%)</title><rect x="2.4793%" y="1076" width="0.6695%" height="15" fill="rgb(210,40,34)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1086.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (246 samples, 0.67%)</title><rect x="2.4793%" y="1092" width="0.6695%" height="15" fill="rgb(241,220,44)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1102.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (246 samples, 0.67%)</title><rect x="2.4793%" y="1108" width="0.6695%" height="15" fill="rgb(235,28,35)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1118.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (246 samples, 0.67%)</title><rect x="2.4793%" y="1124" width="0.6695%" height="15" fill="rgb(210,56,17)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1134.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (246 samples, 0.67%)</title><rect x="2.4793%" y="1140" width="0.6695%" height="15" fill="rgb(224,130,29)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1150.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (246 samples, 0.67%)</title><rect x="2.4793%" y="1156" width="0.6695%" height="15" fill="rgb(235,212,8)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1166.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (246 samples, 0.67%)</title><rect x="2.4793%" y="1172" width="0.6695%" height="15" fill="rgb(223,33,50)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1182.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (246 samples, 0.67%)</title><rect x="2.4793%" y="1188" width="0.6695%" height="15" fill="rgb(219,149,13)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1198.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (246 samples, 0.67%)</title><rect x="2.4793%" y="1204" width="0.6695%" height="15" fill="rgb(250,156,29)" fg:x="911" fg:w="246"/><text x="2.7293%" y="1214.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (245 samples, 0.67%)</title><rect x="2.4820%" y="1220" width="0.6668%" height="15" fill="rgb(216,193,19)" fg:x="912" fg:w="245"/><text x="2.7320%" y="1230.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (243 samples, 0.66%)</title><rect x="2.4875%" y="1236" width="0.6613%" height="15" fill="rgb(216,135,14)" fg:x="914" fg:w="243"/><text x="2.7375%" y="1246.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (243 samples, 0.66%)</title><rect x="2.4875%" y="1252" width="0.6613%" height="15" fill="rgb(241,47,5)" fg:x="914" fg:w="243"/><text x="2.7375%" y="1262.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:135) (349 samples, 0.95%)</title><rect x="2.4140%" y="628" width="0.9498%" height="15" fill="rgb(233,42,35)" fg:x="887" fg:w="349"/><text x="2.6640%" y="638.50"></text></g><g><title>generate_negative_tree_pixels (hats/catalog/catalog.py:28) (349 samples, 0.95%)</title><rect x="2.4140%" y="644" width="0.9498%" height="15" fill="rgb(231,13,6)" fg:x="887" fg:w="349"/><text x="2.6640%" y="654.50"></text></g><g><title>compute_negative_tree_pixels (hats/pixel_tree/negative_tree.py:18) (349 samples, 0.95%)</title><rect x="2.4140%" y="660" width="0.9498%" height="15" fill="rgb(207,181,40)" fg:x="887" fg:w="349"/><text x="2.6640%" y="670.50"></text></g><g><title>align_trees (hats/pixel_tree/pixel_alignment.py:104) (349 samples, 0.95%)</title><rect x="2.4140%" y="676" width="0.9498%" height="15" fill="rgb(254,173,49)" fg:x="887" fg:w="349"/><text x="2.6640%" y="686.50"></text></g><g><title>_compile_for_args (numba/core/dispatcher.py:376) (349 samples, 0.95%)</title><rect x="2.4140%" y="692" width="0.9498%" height="15" fill="rgb(221,1,38)" fg:x="887" fg:w="349"/><text x="2.6640%" y="702.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (349 samples, 0.95%)</title><rect x="2.4140%" y="708" width="0.9498%" height="15" fill="rgb(206,124,46)" fg:x="887" fg:w="349"/><text x="2.6640%" y="718.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (349 samples, 0.95%)</title><rect x="2.4140%" y="724" width="0.9498%" height="15" fill="rgb(249,21,11)" fg:x="887" fg:w="349"/><text x="2.6640%" y="734.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (349 samples, 0.95%)</title><rect x="2.4140%" y="740" width="0.9498%" height="15" fill="rgb(222,201,40)" fg:x="887" fg:w="349"/><text x="2.6640%" y="750.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (349 samples, 0.95%)</title><rect x="2.4140%" y="756" width="0.9498%" height="15" fill="rgb(235,61,29)" fg:x="887" fg:w="349"/><text x="2.6640%" y="766.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (348 samples, 0.95%)</title><rect x="2.4167%" y="772" width="0.9471%" height="15" fill="rgb(219,207,3)" fg:x="888" fg:w="348"/><text x="2.6667%" y="782.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (346 samples, 0.94%)</title><rect x="2.4222%" y="788" width="0.9417%" height="15" fill="rgb(222,56,46)" fg:x="890" fg:w="346"/><text x="2.6722%" y="798.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (346 samples, 0.94%)</title><rect x="2.4222%" y="804" width="0.9417%" height="15" fill="rgb(239,76,54)" fg:x="890" fg:w="346"/><text x="2.6722%" y="814.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (346 samples, 0.94%)</title><rect x="2.4222%" y="820" width="0.9417%" height="15" fill="rgb(231,124,27)" fg:x="890" fg:w="346"/><text x="2.6722%" y="830.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (346 samples, 0.94%)</title><rect x="2.4222%" y="836" width="0.9417%" height="15" fill="rgb(249,195,6)" fg:x="890" fg:w="346"/><text x="2.6722%" y="846.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (346 samples, 0.94%)</title><rect x="2.4222%" y="852" width="0.9417%" height="15" fill="rgb(237,174,47)" fg:x="890" fg:w="346"/><text x="2.6722%" y="862.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (345 samples, 0.94%)</title><rect x="2.4249%" y="868" width="0.9389%" height="15" fill="rgb(206,201,31)" fg:x="891" fg:w="345"/><text x="2.6749%" y="878.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (345 samples, 0.94%)</title><rect x="2.4249%" y="884" width="0.9389%" height="15" fill="rgb(231,57,52)" fg:x="891" fg:w="345"/><text x="2.6749%" y="894.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (377 samples, 1.03%)</title><rect x="2.4140%" y="612" width="1.0260%" height="15" fill="rgb(248,177,22)" fg:x="887" fg:w="377"/><text x="2.6640%" y="622.50"></text></g><g><title>test_concat_catalogs_with_different_schemas (test_concatenation.py:364) (453 samples, 1.23%)</title><rect x="2.2752%" y="548" width="1.2329%" height="15" fill="rgb(215,211,37)" fg:x="836" fg:w="453"/><text x="2.5252%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (453 samples, 1.23%)</title><rect x="2.2752%" y="564" width="1.2329%" height="15" fill="rgb(241,128,51)" fg:x="836" fg:w="453"/><text x="2.5252%" y="574.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (402 samples, 1.09%)</title><rect x="2.4140%" y="580" width="1.0941%" height="15" fill="rgb(227,165,31)" fg:x="887" fg:w="402"/><text x="2.6640%" y="590.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (402 samples, 1.09%)</title><rect x="2.4140%" y="596" width="1.0941%" height="15" fill="rgb(228,167,24)" fg:x="887" fg:w="402"/><text x="2.6640%" y="606.50"></text></g><g><title>test_concat_catalogs_with_different_schemas (test_concatenation.py:411) (67 samples, 0.18%)</title><rect x="3.5271%" y="548" width="0.1823%" height="15" fill="rgb(228,143,12)" fg:x="1296" fg:w="67"/><text x="3.7771%" y="558.50"></text></g><g><title>assert_series_equal (pandas/_testing/asserters.py:967) (66 samples, 0.18%)</title><rect x="3.5298%" y="564" width="0.1796%" height="15" fill="rgb(249,149,8)" fg:x="1297" fg:w="66"/><text x="3.7798%" y="574.50"></text></g><g><title>assert_index_equal (pandas/_testing/asserters.py:326) (66 samples, 0.18%)</title><rect x="3.5298%" y="580" width="0.1796%" height="15" fill="rgb(243,35,44)" fg:x="1297" fg:w="66"/><text x="3.7798%" y="590.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:201) (37 samples, 0.10%)</title><rect x="3.9626%" y="564" width="0.1007%" height="15" fill="rgb(246,89,9)" fg:x="1456" fg:w="37"/><text x="4.2126%" y="574.50"></text></g><g><title>_row_multiset (test_concatenation.py:127) (37 samples, 0.10%)</title><rect x="3.9626%" y="580" width="0.1007%" height="15" fill="rgb(233,213,13)" fg:x="1456" fg:w="37"/><text x="4.2126%" y="590.50"></text></g><g><title>__init__ (collections/__init__.py:607) (37 samples, 0.10%)</title><rect x="3.9626%" y="596" width="0.1007%" height="15" fill="rgb(233,141,41)" fg:x="1456" fg:w="37"/><text x="4.2126%" y="606.50"></text></g><g><title>update (collections/__init__.py:699) (37 samples, 0.10%)</title><rect x="3.9626%" y="612" width="0.1007%" height="15" fill="rgb(239,167,4)" fg:x="1456" fg:w="37"/><text x="4.2126%" y="622.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (37 samples, 0.10%)</title><rect x="3.9626%" y="628" width="0.1007%" height="15" fill="rgb(209,217,16)" fg:x="1456" fg:w="37"/><text x="4.2126%" y="638.50"></text></g><g><title>test_concat_catalogs_with_different_schemas (test_concatenation.py:439) (129 samples, 0.35%)</title><rect x="3.7367%" y="548" width="0.3511%" height="15" fill="rgb(219,88,35)" fg:x="1373" fg:w="129"/><text x="3.9867%" y="558.50"></text></g><g><title>test_concat_ignore_empty_margins_left_missing_keeps_right_margin (test_concatenation.py:987) (86 samples, 0.23%)</title><rect x="4.1721%" y="548" width="0.2341%" height="15" fill="rgb(220,193,23)" fg:x="1533" fg:w="86"/><text x="4.4221%" y="558.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (48 samples, 0.13%)</title><rect x="4.6266%" y="676" width="0.1306%" height="15" fill="rgb(230,90,52)" fg:x="1700" fg:w="48"/><text x="4.8766%" y="686.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (48 samples, 0.13%)</title><rect x="4.6266%" y="692" width="0.1306%" height="15" fill="rgb(252,106,19)" fg:x="1700" fg:w="48"/><text x="4.8766%" y="702.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (40 samples, 0.11%)</title><rect x="4.6484%" y="708" width="0.1089%" height="15" fill="rgb(206,74,20)" fg:x="1708" fg:w="40"/><text x="4.8984%" y="718.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (54 samples, 0.15%)</title><rect x="4.6266%" y="660" width="0.1470%" height="15" fill="rgb(230,138,44)" fg:x="1700" fg:w="54"/><text x="4.8766%" y="670.50"></text></g><g><title>_convert_dtypes_to_pyarrow (lsdb/loaders/dataframe/from_dataframe_utils.py:46) (57 samples, 0.16%)</title><rect x="4.6212%" y="644" width="0.1551%" height="15" fill="rgb(235,182,43)" fg:x="1698" fg:w="57"/><text x="4.8712%" y="654.50"></text></g><g><title>_generate_dask_dataframe (lsdb/loaders/dataframe/from_dataframe_utils.py:25) (66 samples, 0.18%)</title><rect x="4.6157%" y="628" width="0.1796%" height="15" fill="rgb(242,16,51)" fg:x="1696" fg:w="66"/><text x="4.8657%" y="638.50"></text></g><g><title>load_catalog (lsdb/loaders/dataframe/dataframe_catalog_loader.py:203) (90 samples, 0.24%)</title><rect x="4.5613%" y="596" width="0.2449%" height="15" fill="rgb(248,9,4)" fg:x="1676" fg:w="90"/><text x="4.8113%" y="606.50"></text></g><g><title>_generate_dask_df_and_map (lsdb/loaders/dataframe/dataframe_catalog_loader.py:280) (70 samples, 0.19%)</title><rect x="4.6157%" y="612" width="0.1905%" height="15" fill="rgb(210,31,22)" fg:x="1696" fg:w="70"/><text x="4.8657%" y="622.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:82) (102 samples, 0.28%)</title><rect x="4.5341%" y="580" width="0.2776%" height="15" fill="rgb(239,54,39)" fg:x="1666" fg:w="102"/><text x="4.7841%" y="590.50"></text></g><g><title>test_concat_ignore_empty_margins_mixed_orders (test_concatenation.py:1120) (144 samples, 0.39%)</title><rect x="4.5286%" y="548" width="0.3919%" height="15" fill="rgb(230,99,41)" fg:x="1664" fg:w="144"/><text x="4.7786%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (144 samples, 0.39%)</title><rect x="4.5286%" y="564" width="0.3919%" height="15" fill="rgb(253,106,12)" fg:x="1664" fg:w="144"/><text x="4.7786%" y="574.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (40 samples, 0.11%)</title><rect x="4.8117%" y="580" width="0.1089%" height="15" fill="rgb(213,46,41)" fg:x="1768" fg:w="40"/><text x="5.0617%" y="590.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (40 samples, 0.11%)</title><rect x="4.8117%" y="596" width="0.1089%" height="15" fill="rgb(215,133,35)" fg:x="1768" fg:w="40"/><text x="5.0617%" y="606.50"></text></g><g><title>load_catalog (lsdb/loaders/dataframe/dataframe_catalog_loader.py:203) (49 samples, 0.13%)</title><rect x="4.9532%" y="596" width="0.1334%" height="15" fill="rgb(213,28,5)" fg:x="1820" fg:w="49"/><text x="5.2032%" y="606.50"></text></g><g><title>_generate_dask_df_and_map (lsdb/loaders/dataframe/dataframe_catalog_loader.py:280) (40 samples, 0.11%)</title><rect x="4.9777%" y="612" width="0.1089%" height="15" fill="rgb(215,77,49)" fg:x="1829" fg:w="40"/><text x="5.2277%" y="622.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:82) (54 samples, 0.15%)</title><rect x="4.9423%" y="580" width="0.1470%" height="15" fill="rgb(248,100,22)" fg:x="1816" fg:w="54"/><text x="5.1923%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (43 samples, 0.12%)</title><rect x="5.0947%" y="612" width="0.1170%" height="15" fill="rgb(208,67,9)" fg:x="1872" fg:w="43"/><text x="5.3447%" y="622.50"></text></g><g><title>test_concat_ignore_empty_margins_mixed_orders (test_concatenation.py:1121) (132 samples, 0.36%)</title><rect x="4.9205%" y="548" width="0.3592%" height="15" fill="rgb(219,133,21)" fg:x="1808" fg:w="132"/><text x="5.1705%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (127 samples, 0.35%)</title><rect x="4.9341%" y="564" width="0.3456%" height="15" fill="rgb(246,46,29)" fg:x="1813" fg:w="127"/><text x="5.1841%" y="574.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (69 samples, 0.19%)</title><rect x="5.0920%" y="580" width="0.1878%" height="15" fill="rgb(246,185,52)" fg:x="1871" fg:w="69"/><text x="5.3420%" y="590.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (69 samples, 0.19%)</title><rect x="5.0920%" y="596" width="0.1878%" height="15" fill="rgb(252,136,11)" fg:x="1871" fg:w="69"/><text x="5.3420%" y="606.50"></text></g><g><title>test_concat_ignore_empty_margins_mixed_orders (test_concatenation.py:1125) (37 samples, 0.10%)</title><rect x="5.2798%" y="548" width="0.1007%" height="15" fill="rgb(219,138,53)" fg:x="1940" fg:w="37"/><text x="5.5298%" y="558.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:170) (40 samples, 0.11%)</title><rect x="5.4431%" y="564" width="0.1089%" height="15" fill="rgb(211,51,23)" fg:x="2000" fg:w="40"/><text x="5.6931%" y="574.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:180) (37 samples, 0.10%)</title><rect x="5.6962%" y="564" width="0.1007%" height="15" fill="rgb(247,221,28)" fg:x="2093" fg:w="37"/><text x="5.9462%" y="574.50"></text></g><g><title>__iter__ (pandas/core/arrays/arrow/array.py:649) (41 samples, 0.11%)</title><rect x="5.9248%" y="644" width="0.1116%" height="15" fill="rgb(251,222,45)" fg:x="2177" fg:w="41"/><text x="6.1748%" y="654.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:200) (94 samples, 0.26%)</title><rect x="5.7996%" y="564" width="0.2558%" height="15" fill="rgb(217,162,53)" fg:x="2131" fg:w="94"/><text x="6.0496%" y="574.50"></text></g><g><title>_row_multiset (test_concatenation.py:127) (93 samples, 0.25%)</title><rect x="5.8023%" y="580" width="0.2531%" height="15" fill="rgb(229,93,14)" fg:x="2132" fg:w="93"/><text x="6.0523%" y="590.50"></text></g><g><title>__init__ (collections/__init__.py:607) (93 samples, 0.25%)</title><rect x="5.8023%" y="596" width="0.2531%" height="15" fill="rgb(209,67,49)" fg:x="2132" fg:w="93"/><text x="6.0523%" y="606.50"></text></g><g><title>update (collections/__init__.py:699) (93 samples, 0.25%)</title><rect x="5.8023%" y="612" width="0.2531%" height="15" fill="rgb(213,87,29)" fg:x="2132" fg:w="93"/><text x="6.0523%" y="622.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (89 samples, 0.24%)</title><rect x="5.8132%" y="628" width="0.2422%" height="15" fill="rgb(205,151,52)" fg:x="2136" fg:w="89"/><text x="6.0632%" y="638.50"></text></g><g><title>__iter__ (pandas/core/arrays/arrow/array.py:649) (38 samples, 0.10%)</title><rect x="6.1697%" y="644" width="0.1034%" height="15" fill="rgb(253,215,39)" fg:x="2267" fg:w="38"/><text x="6.4197%" y="654.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:201) (93 samples, 0.25%)</title><rect x="6.0554%" y="564" width="0.2531%" height="15" fill="rgb(221,220,41)" fg:x="2225" fg:w="93"/><text x="6.3054%" y="574.50"></text></g><g><title>_row_multiset (test_concatenation.py:127) (92 samples, 0.25%)</title><rect x="6.0581%" y="580" width="0.2504%" height="15" fill="rgb(218,133,21)" fg:x="2226" fg:w="92"/><text x="6.3081%" y="590.50"></text></g><g><title>__init__ (collections/__init__.py:607) (92 samples, 0.25%)</title><rect x="6.0581%" y="596" width="0.2504%" height="15" fill="rgb(221,193,43)" fg:x="2226" fg:w="92"/><text x="6.3081%" y="606.50"></text></g><g><title>update (collections/__init__.py:699) (92 samples, 0.25%)</title><rect x="6.0581%" y="612" width="0.2504%" height="15" fill="rgb(240,128,52)" fg:x="2226" fg:w="92"/><text x="6.3081%" y="622.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (91 samples, 0.25%)</title><rect x="6.0609%" y="628" width="0.2477%" height="15" fill="rgb(253,114,12)" fg:x="2227" fg:w="91"/><text x="6.3109%" y="638.50"></text></g><g><title>test_concat_ignore_empty_margins_mixed_orders (test_concatenation.py:1142) (375 samples, 1.02%)</title><rect x="5.3805%" y="548" width="1.0206%" height="15" fill="rgb(215,223,47)" fg:x="1977" fg:w="375"/><text x="5.6305%" y="558.50"></text></g><g><title>test_concat_ignore_empty_margins_right_missing_keeps_left_margin (test_concatenation.py:1032) (108 samples, 0.29%)</title><rect x="6.4473%" y="548" width="0.2939%" height="15" fill="rgb(248,225,23)" fg:x="2369" fg:w="108"/><text x="6.6973%" y="558.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (39 samples, 0.11%)</title><rect x="6.8202%" y="628" width="0.1061%" height="15" fill="rgb(250,108,0)" fg:x="2506" fg:w="39"/><text x="7.0702%" y="638.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (223 samples, 0.61%)</title><rect x="6.8174%" y="612" width="0.6069%" height="15" fill="rgb(228,208,7)" fg:x="2505" fg:w="223"/><text x="7.0674%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (165 samples, 0.45%)</title><rect x="6.9753%" y="628" width="0.4491%" height="15" fill="rgb(244,45,10)" fg:x="2563" fg:w="165"/><text x="7.2253%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (133 samples, 0.36%)</title><rect x="7.0624%" y="644" width="0.3620%" height="15" fill="rgb(207,125,25)" fg:x="2595" fg:w="133"/><text x="7.3124%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (133 samples, 0.36%)</title><rect x="7.0624%" y="660" width="0.3620%" height="15" fill="rgb(210,195,18)" fg:x="2595" fg:w="133"/><text x="7.3124%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (99 samples, 0.27%)</title><rect x="7.1549%" y="676" width="0.2694%" height="15" fill="rgb(249,80,12)" fg:x="2629" fg:w="99"/><text x="7.4049%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (99 samples, 0.27%)</title><rect x="7.1549%" y="692" width="0.2694%" height="15" fill="rgb(221,65,9)" fg:x="2629" fg:w="99"/><text x="7.4049%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (99 samples, 0.27%)</title><rect x="7.1549%" y="708" width="0.2694%" height="15" fill="rgb(235,49,36)" fg:x="2629" fg:w="99"/><text x="7.4049%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (99 samples, 0.27%)</title><rect x="7.1549%" y="724" width="0.2694%" height="15" fill="rgb(225,32,20)" fg:x="2629" fg:w="99"/><text x="7.4049%" y="734.50"></text></g><g><title>test_concat_margin_with_different_schemas_and_orders (test_concatenation.py:539) (250 samples, 0.68%)</title><rect x="6.8093%" y="548" width="0.6804%" height="15" fill="rgb(215,141,46)" fg:x="2502" fg:w="250"/><text x="7.0593%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (247 samples, 0.67%)</title><rect x="6.8174%" y="564" width="0.6722%" height="15" fill="rgb(250,160,47)" fg:x="2505" fg:w="247"/><text x="7.0674%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (247 samples, 0.67%)</title><rect x="6.8174%" y="580" width="0.6722%" height="15" fill="rgb(216,222,40)" fg:x="2505" fg:w="247"/><text x="7.0674%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (247 samples, 0.67%)</title><rect x="6.8174%" y="596" width="0.6722%" height="15" fill="rgb(234,217,39)" fg:x="2505" fg:w="247"/><text x="7.0674%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (104 samples, 0.28%)</title><rect x="7.4897%" y="612" width="0.2830%" height="15" fill="rgb(207,178,40)" fg:x="2752" fg:w="104"/><text x="7.7397%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (78 samples, 0.21%)</title><rect x="7.5604%" y="628" width="0.2123%" height="15" fill="rgb(221,136,13)" fg:x="2778" fg:w="78"/><text x="7.8104%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (63 samples, 0.17%)</title><rect x="7.6012%" y="644" width="0.1715%" height="15" fill="rgb(249,199,10)" fg:x="2793" fg:w="63"/><text x="7.8512%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (63 samples, 0.17%)</title><rect x="7.6012%" y="660" width="0.1715%" height="15" fill="rgb(249,222,13)" fg:x="2793" fg:w="63"/><text x="7.8512%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (51 samples, 0.14%)</title><rect x="7.6339%" y="676" width="0.1388%" height="15" fill="rgb(244,185,38)" fg:x="2805" fg:w="51"/><text x="7.8839%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (51 samples, 0.14%)</title><rect x="7.6339%" y="692" width="0.1388%" height="15" fill="rgb(236,202,9)" fg:x="2805" fg:w="51"/><text x="7.8839%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (51 samples, 0.14%)</title><rect x="7.6339%" y="708" width="0.1388%" height="15" fill="rgb(250,229,37)" fg:x="2805" fg:w="51"/><text x="7.8839%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (51 samples, 0.14%)</title><rect x="7.6339%" y="724" width="0.1388%" height="15" fill="rgb(206,174,23)" fg:x="2805" fg:w="51"/><text x="7.8839%" y="734.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (112 samples, 0.30%)</title><rect x="7.4897%" y="596" width="0.3048%" height="15" fill="rgb(211,33,43)" fg:x="2752" fg:w="112"/><text x="7.7397%" y="606.50"></text></g><g><title>test_concat_margin_with_different_schemas_and_orders (test_concatenation.py:543) (113 samples, 0.31%)</title><rect x="7.4897%" y="548" width="0.3075%" height="15" fill="rgb(245,58,50)" fg:x="2752" fg:w="113"/><text x="7.7397%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (113 samples, 0.31%)</title><rect x="7.4897%" y="564" width="0.3075%" height="15" fill="rgb(244,68,36)" fg:x="2752" fg:w="113"/><text x="7.7397%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (113 samples, 0.31%)</title><rect x="7.4897%" y="580" width="0.3075%" height="15" fill="rgb(232,229,15)" fg:x="2752" fg:w="113"/><text x="7.7397%" y="590.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (135 samples, 0.37%)</title><rect x="7.7999%" y="612" width="0.3674%" height="15" fill="rgb(254,30,23)" fg:x="2866" fg:w="135"/><text x="8.0499%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (104 samples, 0.28%)</title><rect x="7.8843%" y="628" width="0.2830%" height="15" fill="rgb(235,160,14)" fg:x="2897" fg:w="104"/><text x="8.1343%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (93 samples, 0.25%)</title><rect x="7.9142%" y="644" width="0.2531%" height="15" fill="rgb(212,155,44)" fg:x="2908" fg:w="93"/><text x="8.1642%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (93 samples, 0.25%)</title><rect x="7.9142%" y="660" width="0.2531%" height="15" fill="rgb(226,2,50)" fg:x="2908" fg:w="93"/><text x="8.1642%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (85 samples, 0.23%)</title><rect x="7.9360%" y="676" width="0.2313%" height="15" fill="rgb(234,177,6)" fg:x="2916" fg:w="85"/><text x="8.1860%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (85 samples, 0.23%)</title><rect x="7.9360%" y="692" width="0.2313%" height="15" fill="rgb(217,24,9)" fg:x="2916" fg:w="85"/><text x="8.1860%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (85 samples, 0.23%)</title><rect x="7.9360%" y="708" width="0.2313%" height="15" fill="rgb(220,13,46)" fg:x="2916" fg:w="85"/><text x="8.1860%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (85 samples, 0.23%)</title><rect x="7.9360%" y="724" width="0.2313%" height="15" fill="rgb(239,221,27)" fg:x="2916" fg:w="85"/><text x="8.1860%" y="734.50"></text></g><g><title>test_concat_margin_with_different_schemas_and_orders (test_concatenation.py:547) (141 samples, 0.38%)</title><rect x="7.7972%" y="548" width="0.3837%" height="15" fill="rgb(222,198,25)" fg:x="2865" fg:w="141"/><text x="8.0472%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (141 samples, 0.38%)</title><rect x="7.7972%" y="564" width="0.3837%" height="15" fill="rgb(211,99,13)" fg:x="2865" fg:w="141"/><text x="8.0472%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (141 samples, 0.38%)</title><rect x="7.7972%" y="580" width="0.3837%" height="15" fill="rgb(232,111,31)" fg:x="2865" fg:w="141"/><text x="8.0472%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (141 samples, 0.38%)</title><rect x="7.7972%" y="596" width="0.3837%" height="15" fill="rgb(245,82,37)" fg:x="2865" fg:w="141"/><text x="8.0472%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (163 samples, 0.44%)</title><rect x="8.1918%" y="628" width="0.4436%" height="15" fill="rgb(227,149,46)" fg:x="3010" fg:w="163"/><text x="8.4418%" y="638.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (127 samples, 0.35%)</title><rect x="8.2898%" y="644" width="0.3456%" height="15" fill="rgb(218,36,50)" fg:x="3046" fg:w="127"/><text x="8.5398%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (104 samples, 0.28%)</title><rect x="8.3524%" y="660" width="0.2830%" height="15" fill="rgb(226,80,48)" fg:x="3069" fg:w="104"/><text x="8.6024%" y="670.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (104 samples, 0.28%)</title><rect x="8.3524%" y="676" width="0.2830%" height="15" fill="rgb(238,224,15)" fg:x="3069" fg:w="104"/><text x="8.6024%" y="686.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (90 samples, 0.24%)</title><rect x="8.3905%" y="692" width="0.2449%" height="15" fill="rgb(241,136,10)" fg:x="3083" fg:w="90"/><text x="8.6405%" y="702.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (90 samples, 0.24%)</title><rect x="8.3905%" y="708" width="0.2449%" height="15" fill="rgb(208,32,45)" fg:x="3083" fg:w="90"/><text x="8.6405%" y="718.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (90 samples, 0.24%)</title><rect x="8.3905%" y="724" width="0.2449%" height="15" fill="rgb(207,135,9)" fg:x="3083" fg:w="90"/><text x="8.6405%" y="734.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (90 samples, 0.24%)</title><rect x="8.3905%" y="740" width="0.2449%" height="15" fill="rgb(206,86,44)" fg:x="3083" fg:w="90"/><text x="8.6405%" y="750.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (184 samples, 0.50%)</title><rect x="8.1891%" y="612" width="0.5008%" height="15" fill="rgb(245,177,15)" fg:x="3009" fg:w="184"/><text x="8.4391%" y="622.50"></text></g><g><title>test_concat_margin_with_different_schemas_and_orders (test_concatenation.py:555) (192 samples, 0.52%)</title><rect x="8.1809%" y="548" width="0.5225%" height="15" fill="rgb(206,64,50)" fg:x="3006" fg:w="192"/><text x="8.4309%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (191 samples, 0.52%)</title><rect x="8.1836%" y="564" width="0.5198%" height="15" fill="rgb(234,36,40)" fg:x="3007" fg:w="191"/><text x="8.4336%" y="574.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (189 samples, 0.51%)</title><rect x="8.1891%" y="580" width="0.5144%" height="15" fill="rgb(213,64,8)" fg:x="3009" fg:w="189"/><text x="8.4391%" y="590.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (189 samples, 0.51%)</title><rect x="8.1891%" y="596" width="0.5144%" height="15" fill="rgb(210,75,36)" fg:x="3009" fg:w="189"/><text x="8.4391%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (210 samples, 0.57%)</title><rect x="8.7307%" y="628" width="0.5715%" height="15" fill="rgb(229,88,21)" fg:x="3208" fg:w="210"/><text x="8.9807%" y="638.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (153 samples, 0.42%)</title><rect x="8.8858%" y="644" width="0.4164%" height="15" fill="rgb(252,204,47)" fg:x="3265" fg:w="153"/><text x="9.1358%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (128 samples, 0.35%)</title><rect x="8.9538%" y="660" width="0.3484%" height="15" fill="rgb(208,77,27)" fg:x="3290" fg:w="128"/><text x="9.2038%" y="670.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (128 samples, 0.35%)</title><rect x="8.9538%" y="676" width="0.3484%" height="15" fill="rgb(221,76,26)" fg:x="3290" fg:w="128"/><text x="9.2038%" y="686.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (111 samples, 0.30%)</title><rect x="9.0001%" y="692" width="0.3021%" height="15" fill="rgb(225,139,18)" fg:x="3307" fg:w="111"/><text x="9.2501%" y="702.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (111 samples, 0.30%)</title><rect x="9.0001%" y="708" width="0.3021%" height="15" fill="rgb(230,137,11)" fg:x="3307" fg:w="111"/><text x="9.2501%" y="718.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (111 samples, 0.30%)</title><rect x="9.0001%" y="724" width="0.3021%" height="15" fill="rgb(212,28,1)" fg:x="3307" fg:w="111"/><text x="9.2501%" y="734.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (111 samples, 0.30%)</title><rect x="9.0001%" y="740" width="0.3021%" height="15" fill="rgb(248,164,17)" fg:x="3307" fg:w="111"/><text x="9.2501%" y="750.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (218 samples, 0.59%)</title><rect x="8.7252%" y="612" width="0.5933%" height="15" fill="rgb(222,171,42)" fg:x="3206" fg:w="218"/><text x="8.9752%" y="622.50"></text></g><g><title>test_concat_margin_with_different_schemas_and_orders (test_concatenation.py:556) (228 samples, 0.62%)</title><rect x="8.7035%" y="548" width="0.6205%" height="15" fill="rgb(243,84,45)" fg:x="3198" fg:w="228"/><text x="8.9535%" y="558.50"></text></g><g><title>normalize_ra_dec (test_concatenation.py:94) (228 samples, 0.62%)</title><rect x="8.7035%" y="564" width="0.6205%" height="15" fill="rgb(252,49,23)" fg:x="3198" fg:w="228"/><text x="8.9535%" y="574.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (220 samples, 0.60%)</title><rect x="8.7252%" y="580" width="0.5987%" height="15" fill="rgb(215,19,7)" fg:x="3206" fg:w="220"/><text x="8.9752%" y="590.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (220 samples, 0.60%)</title><rect x="8.7252%" y="596" width="0.5987%" height="15" fill="rgb(238,81,41)" fg:x="3206" fg:w="220"/><text x="8.9752%" y="606.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (43 samples, 0.12%)</title><rect x="9.4083%" y="628" width="0.1170%" height="15" fill="rgb(210,199,37)" fg:x="3457" fg:w="43"/><text x="9.6583%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (161 samples, 0.44%)</title><rect x="9.6070%" y="644" width="0.4382%" height="15" fill="rgb(244,192,49)" fg:x="3530" fg:w="161"/><text x="9.8570%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (161 samples, 0.44%)</title><rect x="9.6070%" y="660" width="0.4382%" height="15" fill="rgb(226,211,11)" fg:x="3530" fg:w="161"/><text x="9.8570%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (142 samples, 0.39%)</title><rect x="9.6587%" y="676" width="0.3865%" height="15" fill="rgb(236,162,54)" fg:x="3549" fg:w="142"/><text x="9.9087%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (142 samples, 0.39%)</title><rect x="9.6587%" y="692" width="0.3865%" height="15" fill="rgb(220,229,9)" fg:x="3549" fg:w="142"/><text x="9.9087%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (142 samples, 0.39%)</title><rect x="9.6587%" y="708" width="0.3865%" height="15" fill="rgb(250,87,22)" fg:x="3549" fg:w="142"/><text x="9.9087%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (142 samples, 0.39%)</title><rect x="9.6587%" y="724" width="0.3865%" height="15" fill="rgb(239,43,17)" fg:x="3549" fg:w="142"/><text x="9.9087%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (238 samples, 0.65%)</title><rect x="9.4056%" y="612" width="0.6477%" height="15" fill="rgb(231,177,25)" fg:x="3456" fg:w="238"/><text x="9.6556%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (185 samples, 0.50%)</title><rect x="9.5499%" y="628" width="0.5035%" height="15" fill="rgb(219,179,1)" fg:x="3509" fg:w="185"/><text x="9.7999%" y="638.50"></text></g><g><title>test_concat_margin_with_low_and_high_orders (test_concatenation.py:470) (266 samples, 0.72%)</title><rect x="9.3784%" y="548" width="0.7239%" height="15" fill="rgb(238,219,53)" fg:x="3446" fg:w="266"/><text x="9.6284%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (259 samples, 0.70%)</title><rect x="9.3975%" y="564" width="0.7049%" height="15" fill="rgb(232,167,36)" fg:x="3453" fg:w="259"/><text x="9.6475%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (259 samples, 0.70%)</title><rect x="9.3975%" y="580" width="0.7049%" height="15" fill="rgb(244,19,51)" fg:x="3453" fg:w="259"/><text x="9.6475%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (259 samples, 0.70%)</title><rect x="9.3975%" y="596" width="0.7049%" height="15" fill="rgb(224,6,22)" fg:x="3453" fg:w="259"/><text x="9.6475%" y="606.50"></text></g><g><title>finalize (numba/core/codegen.py:769) (42 samples, 0.11%)</title><rect x="10.2901%" y="948" width="0.1143%" height="15" fill="rgb(224,145,5)" fg:x="3781" fg:w="42"/><text x="10.5401%" y="958.50"></text></g><g><title>_optimize_final_module (numba/core/codegen.py:689) (40 samples, 0.11%)</title><rect x="10.2956%" y="964" width="0.1089%" height="15" fill="rgb(234,130,49)" fg:x="3783" fg:w="40"/><text x="10.5456%" y="974.50"></text></g><g><title>run (llvmlite/binding/newpassmanagers.py:122) (40 samples, 0.11%)</title><rect x="10.2956%" y="980" width="0.1089%" height="15" fill="rgb(254,6,2)" fg:x="3783" fg:w="40"/><text x="10.5456%" y="990.50"></text></g><g><title>__call__ (llvmlite/binding/ffi.py:197) (40 samples, 0.11%)</title><rect x="10.2956%" y="996" width="0.1089%" height="15" fill="rgb(208,96,46)" fg:x="3783" fg:w="40"/><text x="10.5456%" y="1006.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:499) (63 samples, 0.17%)</title><rect x="10.2901%" y="884" width="0.1715%" height="15" fill="rgb(239,3,39)" fg:x="3781" fg:w="63"/><text x="10.5401%" y="894.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (63 samples, 0.17%)</title><rect x="10.2901%" y="900" width="0.1715%" height="15" fill="rgb(233,210,1)" fg:x="3781" fg:w="63"/><text x="10.5401%" y="910.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:996) (63 samples, 0.17%)</title><rect x="10.2901%" y="916" width="0.1715%" height="15" fill="rgb(244,137,37)" fg:x="3781" fg:w="63"/><text x="10.5401%" y="926.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (63 samples, 0.17%)</title><rect x="10.2901%" y="932" width="0.1715%" height="15" fill="rgb(240,136,2)" fg:x="3781" fg:w="63"/><text x="10.5401%" y="942.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:135) (139 samples, 0.38%)</title><rect x="10.1051%" y="612" width="0.3783%" height="15" fill="rgb(239,18,37)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="622.50"></text></g><g><title>generate_negative_tree_pixels (hats/catalog/catalog.py:28) (139 samples, 0.38%)</title><rect x="10.1051%" y="628" width="0.3783%" height="15" fill="rgb(218,185,22)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="638.50"></text></g><g><title>compute_negative_tree_pixels (hats/pixel_tree/negative_tree.py:18) (139 samples, 0.38%)</title><rect x="10.1051%" y="644" width="0.3783%" height="15" fill="rgb(225,218,4)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="654.50"></text></g><g><title>align_trees (hats/pixel_tree/pixel_alignment.py:104) (139 samples, 0.38%)</title><rect x="10.1051%" y="660" width="0.3783%" height="15" fill="rgb(230,182,32)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="670.50"></text></g><g><title>_compile_for_args (numba/core/dispatcher.py:376) (139 samples, 0.38%)</title><rect x="10.1051%" y="676" width="0.3783%" height="15" fill="rgb(242,56,43)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="686.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (139 samples, 0.38%)</title><rect x="10.1051%" y="692" width="0.3783%" height="15" fill="rgb(233,99,24)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="702.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (139 samples, 0.38%)</title><rect x="10.1051%" y="708" width="0.3783%" height="15" fill="rgb(234,209,42)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="718.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (139 samples, 0.38%)</title><rect x="10.1051%" y="724" width="0.3783%" height="15" fill="rgb(227,7,12)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="734.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (139 samples, 0.38%)</title><rect x="10.1051%" y="740" width="0.3783%" height="15" fill="rgb(245,203,43)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="750.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (139 samples, 0.38%)</title><rect x="10.1051%" y="756" width="0.3783%" height="15" fill="rgb(238,205,33)" fg:x="3713" fg:w="139"/><text x="10.3551%" y="766.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (137 samples, 0.37%)</title><rect x="10.1105%" y="772" width="0.3728%" height="15" fill="rgb(231,56,7)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="782.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (137 samples, 0.37%)</title><rect x="10.1105%" y="788" width="0.3728%" height="15" fill="rgb(244,186,29)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="798.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (137 samples, 0.37%)</title><rect x="10.1105%" y="804" width="0.3728%" height="15" fill="rgb(234,111,31)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="814.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (137 samples, 0.37%)</title><rect x="10.1105%" y="820" width="0.3728%" height="15" fill="rgb(241,149,10)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="830.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (137 samples, 0.37%)</title><rect x="10.1105%" y="836" width="0.3728%" height="15" fill="rgb(249,206,44)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="846.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (137 samples, 0.37%)</title><rect x="10.1105%" y="852" width="0.3728%" height="15" fill="rgb(251,153,30)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="862.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (137 samples, 0.37%)</title><rect x="10.1105%" y="868" width="0.3728%" height="15" fill="rgb(239,152,38)" fg:x="3715" fg:w="137"/><text x="10.3605%" y="878.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (99 samples, 0.27%)</title><rect x="10.4833%" y="612" width="0.2694%" height="15" fill="rgb(249,139,47)" fg:x="3852" fg:w="99"/><text x="10.7333%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (91 samples, 0.25%)</title><rect x="10.5051%" y="628" width="0.2477%" height="15" fill="rgb(244,64,35)" fg:x="3860" fg:w="91"/><text x="10.7551%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (77 samples, 0.21%)</title><rect x="10.5432%" y="644" width="0.2096%" height="15" fill="rgb(216,46,15)" fg:x="3874" fg:w="77"/><text x="10.7932%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (77 samples, 0.21%)</title><rect x="10.5432%" y="660" width="0.2096%" height="15" fill="rgb(250,74,19)" fg:x="3874" fg:w="77"/><text x="10.7932%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (63 samples, 0.17%)</title><rect x="10.5813%" y="676" width="0.1715%" height="15" fill="rgb(249,42,33)" fg:x="3888" fg:w="63"/><text x="10.8313%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (63 samples, 0.17%)</title><rect x="10.5813%" y="692" width="0.1715%" height="15" fill="rgb(242,149,17)" fg:x="3888" fg:w="63"/><text x="10.8313%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (63 samples, 0.17%)</title><rect x="10.5813%" y="708" width="0.1715%" height="15" fill="rgb(244,29,21)" fg:x="3888" fg:w="63"/><text x="10.8313%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (63 samples, 0.17%)</title><rect x="10.5813%" y="724" width="0.1715%" height="15" fill="rgb(220,130,37)" fg:x="3888" fg:w="63"/><text x="10.8313%" y="734.50"></text></g><g><title>test_concat_margin_with_low_and_high_orders (test_concatenation.py:472) (240 samples, 0.65%)</title><rect x="10.1023%" y="548" width="0.6532%" height="15" fill="rgb(211,67,2)" fg:x="3712" fg:w="240"/><text x="10.3523%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (239 samples, 0.65%)</title><rect x="10.1051%" y="564" width="0.6504%" height="15" fill="rgb(235,68,52)" fg:x="3713" fg:w="239"/><text x="10.3551%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (239 samples, 0.65%)</title><rect x="10.1051%" y="580" width="0.6504%" height="15" fill="rgb(246,142,3)" fg:x="3713" fg:w="239"/><text x="10.3551%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (239 samples, 0.65%)</title><rect x="10.1051%" y="596" width="0.6504%" height="15" fill="rgb(241,25,7)" fg:x="3713" fg:w="239"/><text x="10.3551%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (116 samples, 0.32%)</title><rect x="10.7582%" y="612" width="0.3157%" height="15" fill="rgb(242,119,39)" fg:x="3953" fg:w="116"/><text x="11.0082%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (81 samples, 0.22%)</title><rect x="10.8535%" y="628" width="0.2204%" height="15" fill="rgb(241,98,45)" fg:x="3988" fg:w="81"/><text x="11.1035%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (75 samples, 0.20%)</title><rect x="10.8698%" y="644" width="0.2041%" height="15" fill="rgb(254,28,30)" fg:x="3994" fg:w="75"/><text x="11.1198%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (75 samples, 0.20%)</title><rect x="10.8698%" y="660" width="0.2041%" height="15" fill="rgb(241,142,54)" fg:x="3994" fg:w="75"/><text x="11.1198%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (67 samples, 0.18%)</title><rect x="10.8916%" y="676" width="0.1823%" height="15" fill="rgb(222,85,15)" fg:x="4002" fg:w="67"/><text x="11.1416%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (67 samples, 0.18%)</title><rect x="10.8916%" y="692" width="0.1823%" height="15" fill="rgb(210,85,47)" fg:x="4002" fg:w="67"/><text x="11.1416%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (67 samples, 0.18%)</title><rect x="10.8916%" y="708" width="0.1823%" height="15" fill="rgb(224,206,25)" fg:x="4002" fg:w="67"/><text x="11.1416%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (67 samples, 0.18%)</title><rect x="10.8916%" y="724" width="0.1823%" height="15" fill="rgb(243,201,19)" fg:x="4002" fg:w="67"/><text x="11.1416%" y="734.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (121 samples, 0.33%)</title><rect x="10.7555%" y="596" width="0.3293%" height="15" fill="rgb(236,59,4)" fg:x="3952" fg:w="121"/><text x="11.0055%" y="606.50"></text></g><g><title>test_concat_margin_with_low_and_high_orders (test_concatenation.py:474) (122 samples, 0.33%)</title><rect x="10.7555%" y="548" width="0.3320%" height="15" fill="rgb(254,179,45)" fg:x="3952" fg:w="122"/><text x="11.0055%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (122 samples, 0.33%)</title><rect x="10.7555%" y="564" width="0.3320%" height="15" fill="rgb(226,14,10)" fg:x="3952" fg:w="122"/><text x="11.0055%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (122 samples, 0.33%)</title><rect x="10.7555%" y="580" width="0.3320%" height="15" fill="rgb(244,27,41)" fg:x="3952" fg:w="122"/><text x="11.0055%" y="590.50"></text></g><g><title>_compute_pixel_list (lsdb/loaders/dataframe/dataframe_catalog_loader.py:239) (63 samples, 0.17%)</title><rect x="11.2127%" y="596" width="0.1715%" height="15" fill="rgb(235,35,32)" fg:x="4120" fg:w="63"/><text x="11.4627%" y="606.50"></text></g><g><title>load_catalog (lsdb/loaders/dataframe/dataframe_catalog_loader.py:202) (67 samples, 0.18%)</title><rect x="11.2073%" y="580" width="0.1823%" height="15" fill="rgb(218,68,31)" fg:x="4118" fg:w="67"/><text x="11.4573%" y="590.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:82) (75 samples, 0.20%)</title><rect x="11.2046%" y="564" width="0.2041%" height="15" fill="rgb(207,120,37)" fg:x="4117" fg:w="75"/><text x="11.4546%" y="574.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (39 samples, 0.11%)</title><rect x="11.4168%" y="628" width="0.1061%" height="15" fill="rgb(227,98,0)" fg:x="4195" fg:w="39"/><text x="11.6668%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (127 samples, 0.35%)</title><rect x="11.5965%" y="644" width="0.3456%" height="15" fill="rgb(207,7,3)" fg:x="4261" fg:w="127"/><text x="11.8465%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (127 samples, 0.35%)</title><rect x="11.5965%" y="660" width="0.3456%" height="15" fill="rgb(206,98,19)" fg:x="4261" fg:w="127"/><text x="11.8465%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (106 samples, 0.29%)</title><rect x="11.6536%" y="676" width="0.2885%" height="15" fill="rgb(217,5,26)" fg:x="4282" fg:w="106"/><text x="11.9036%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (106 samples, 0.29%)</title><rect x="11.6536%" y="692" width="0.2885%" height="15" fill="rgb(235,190,38)" fg:x="4282" fg:w="106"/><text x="11.9036%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (106 samples, 0.29%)</title><rect x="11.6536%" y="708" width="0.2885%" height="15" fill="rgb(247,86,24)" fg:x="4282" fg:w="106"/><text x="11.9036%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (106 samples, 0.29%)</title><rect x="11.6536%" y="724" width="0.2885%" height="15" fill="rgb(205,101,16)" fg:x="4282" fg:w="106"/><text x="11.9036%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (198 samples, 0.54%)</title><rect x="11.4087%" y="612" width="0.5389%" height="15" fill="rgb(246,168,33)" fg:x="4192" fg:w="198"/><text x="11.6587%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (150 samples, 0.41%)</title><rect x="11.5393%" y="628" width="0.4082%" height="15" fill="rgb(231,114,1)" fg:x="4240" fg:w="150"/><text x="11.7893%" y="638.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (207 samples, 0.56%)</title><rect x="11.4087%" y="596" width="0.5634%" height="15" fill="rgb(207,184,53)" fg:x="4192" fg:w="207"/><text x="11.6587%" y="606.50"></text></g><g><title>test_concat_preserves_all_na_columns (test_concatenation.py:756) (286 samples, 0.78%)</title><rect x="11.2018%" y="548" width="0.7784%" height="15" fill="rgb(224,95,51)" fg:x="4116" fg:w="286"/><text x="11.4518%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (210 samples, 0.57%)</title><rect x="11.4087%" y="564" width="0.5715%" height="15" fill="rgb(212,188,45)" fg:x="4192" fg:w="210"/><text x="11.6587%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (210 samples, 0.57%)</title><rect x="11.4087%" y="580" width="0.5715%" height="15" fill="rgb(223,154,38)" fg:x="4192" fg:w="210"/><text x="11.6587%" y="590.50"></text></g><g><title>_compute_pixel_list (lsdb/loaders/dataframe/dataframe_catalog_loader.py:239) (41 samples, 0.11%)</title><rect x="11.9884%" y="596" width="0.1116%" height="15" fill="rgb(251,22,52)" fg:x="4405" fg:w="41"/><text x="12.2384%" y="606.50"></text></g><g><title>load_catalog (lsdb/loaders/dataframe/dataframe_catalog_loader.py:202) (45 samples, 0.12%)</title><rect x="11.9856%" y="580" width="0.1225%" height="15" fill="rgb(229,209,22)" fg:x="4404" fg:w="45"/><text x="12.2356%" y="590.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:82) (49 samples, 0.13%)</title><rect x="11.9856%" y="564" width="0.1334%" height="15" fill="rgb(234,138,34)" fg:x="4404" fg:w="49"/><text x="12.2356%" y="574.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (39 samples, 0.11%)</title><rect x="12.1244%" y="628" width="0.1061%" height="15" fill="rgb(212,95,11)" fg:x="4455" fg:w="39"/><text x="12.3744%" y="638.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (192 samples, 0.52%)</title><rect x="12.1217%" y="612" width="0.5225%" height="15" fill="rgb(240,179,47)" fg:x="4454" fg:w="192"/><text x="12.3717%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (144 samples, 0.39%)</title><rect x="12.2523%" y="628" width="0.3919%" height="15" fill="rgb(240,163,11)" fg:x="4502" fg:w="144"/><text x="12.5023%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (104 samples, 0.28%)</title><rect x="12.3612%" y="644" width="0.2830%" height="15" fill="rgb(236,37,12)" fg:x="4542" fg:w="104"/><text x="12.6112%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (104 samples, 0.28%)</title><rect x="12.3612%" y="660" width="0.2830%" height="15" fill="rgb(232,164,16)" fg:x="4542" fg:w="104"/><text x="12.6112%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (90 samples, 0.24%)</title><rect x="12.3993%" y="676" width="0.2449%" height="15" fill="rgb(244,205,15)" fg:x="4556" fg:w="90"/><text x="12.6493%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (90 samples, 0.24%)</title><rect x="12.3993%" y="692" width="0.2449%" height="15" fill="rgb(223,117,47)" fg:x="4556" fg:w="90"/><text x="12.6493%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (90 samples, 0.24%)</title><rect x="12.3993%" y="708" width="0.2449%" height="15" fill="rgb(244,107,35)" fg:x="4556" fg:w="90"/><text x="12.6493%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (90 samples, 0.24%)</title><rect x="12.3993%" y="724" width="0.2449%" height="15" fill="rgb(205,140,8)" fg:x="4556" fg:w="90"/><text x="12.6493%" y="734.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (220 samples, 0.60%)</title><rect x="12.1190%" y="596" width="0.5987%" height="15" fill="rgb(228,84,46)" fg:x="4453" fg:w="220"/><text x="12.3690%" y="606.50"></text></g><g><title>test_concat_preserves_all_na_columns (test_concatenation.py:757) (273 samples, 0.74%)</title><rect x="11.9802%" y="548" width="0.7430%" height="15" fill="rgb(254,188,9)" fg:x="4402" fg:w="273"/><text x="12.2302%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (222 samples, 0.60%)</title><rect x="12.1190%" y="564" width="0.6042%" height="15" fill="rgb(206,112,54)" fg:x="4453" fg:w="222"/><text x="12.3690%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (222 samples, 0.60%)</title><rect x="12.1190%" y="580" width="0.6042%" height="15" fill="rgb(216,84,49)" fg:x="4453" fg:w="222"/><text x="12.3690%" y="590.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (76 samples, 0.21%)</title><rect x="12.7994%" y="628" width="0.2068%" height="15" fill="rgb(214,194,35)" fg:x="4703" fg:w="76"/><text x="13.0494%" y="638.50"></text></g><g><title>__iter__ (pandas/core/arrays/arrow/array.py:649) (57 samples, 0.16%)</title><rect x="13.0062%" y="628" width="0.1551%" height="15" fill="rgb(249,28,3)" fg:x="4779" fg:w="57"/><text x="13.2562%" y="638.50"></text></g><g><title>test_concat_preserves_all_na_columns (test_concatenation.py:772) (166 samples, 0.45%)</title><rect x="12.7395%" y="548" width="0.4518%" height="15" fill="rgb(222,56,52)" fg:x="4681" fg:w="166"/><text x="12.9895%" y="558.50"></text></g><g><title>_row_multiset (test_concatenation.py:127) (164 samples, 0.45%)</title><rect x="12.7449%" y="564" width="0.4463%" height="15" fill="rgb(245,217,50)" fg:x="4683" fg:w="164"/><text x="12.9949%" y="574.50"></text></g><g><title>__init__ (collections/__init__.py:607) (164 samples, 0.45%)</title><rect x="12.7449%" y="580" width="0.4463%" height="15" fill="rgb(213,201,24)" fg:x="4683" fg:w="164"/><text x="12.9949%" y="590.50"></text></g><g><title>update (collections/__init__.py:699) (164 samples, 0.45%)</title><rect x="12.7449%" y="596" width="0.4463%" height="15" fill="rgb(248,116,28)" fg:x="4683" fg:w="164"/><text x="12.9949%" y="606.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (156 samples, 0.42%)</title><rect x="12.7667%" y="612" width="0.4246%" height="15" fill="rgb(219,72,43)" fg:x="4691" fg:w="156"/><text x="13.0167%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (118 samples, 0.32%)</title><rect x="13.2403%" y="628" width="0.3211%" height="15" fill="rgb(209,138,14)" fg:x="4865" fg:w="118"/><text x="13.4903%" y="638.50"></text></g><g><title>get_margin (hats/pixel_math/pixel_margins.py:23) (90 samples, 0.24%)</title><rect x="13.3165%" y="644" width="0.2449%" height="15" fill="rgb(222,18,33)" fg:x="4893" fg:w="90"/><text x="13.5665%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:847) (102 samples, 0.28%)</title><rect x="13.6811%" y="644" width="0.2776%" height="15" fill="rgb(213,199,7)" fg:x="5027" fg:w="102"/><text x="13.9311%" y="654.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:835) (69 samples, 0.19%)</title><rect x="13.9751%" y="676" width="0.1878%" height="15" fill="rgb(250,110,10)" fg:x="5135" fg:w="69"/><text x="14.2251%" y="686.50"></text></g><g><title>_list_to_arrays (pandas/core/internals/construction.py:853) (69 samples, 0.19%)</title><rect x="13.9751%" y="692" width="0.1878%" height="15" fill="rgb(248,123,6)" fg:x="5135" fg:w="69"/><text x="14.2251%" y="702.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (533 samples, 1.45%)</title><rect x="13.9587%" y="644" width="1.4506%" height="15" fill="rgb(206,91,31)" fg:x="5129" fg:w="533"/><text x="14.2087%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (533 samples, 1.45%)</title><rect x="13.9587%" y="660" width="1.4506%" height="15" fill="rgb(211,154,13)" fg:x="5129" fg:w="533"/><text x="14.2087%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (458 samples, 1.25%)</title><rect x="14.1629%" y="676" width="1.2465%" height="15" fill="rgb(225,148,7)" fg:x="5204" fg:w="458"/><text x="14.4129%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (458 samples, 1.25%)</title><rect x="14.1629%" y="692" width="1.2465%" height="15" fill="rgb(220,160,43)" fg:x="5204" fg:w="458"/><text x="14.4129%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (458 samples, 1.25%)</title><rect x="14.1629%" y="708" width="1.2465%" height="15" fill="rgb(213,52,39)" fg:x="5204" fg:w="458"/><text x="14.4129%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (458 samples, 1.25%)</title><rect x="14.1629%" y="724" width="1.2465%" height="15" fill="rgb(243,137,7)" fg:x="5204" fg:w="458"/><text x="14.4129%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (804 samples, 2.19%)</title><rect x="13.2321%" y="612" width="2.1881%" height="15" fill="rgb(230,79,13)" fg:x="4862" fg:w="804"/><text x="13.4821%" y="622.50">_..</text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (649 samples, 1.77%)</title><rect x="13.6539%" y="628" width="1.7663%" height="15" fill="rgb(247,105,23)" fg:x="5017" fg:w="649"/><text x="13.9039%" y="638.50"></text></g><g><title>_factorize_keys (pandas/core/reshape/merge.py:2562) (177 samples, 0.48%)</title><rect x="15.4447%" y="756" width="0.4817%" height="15" fill="rgb(223,179,41)" fg:x="5675" fg:w="177"/><text x="15.6947%" y="766.50"></text></g><g><title>get_join_indexers_non_unique (pandas/core/reshape/merge.py:1794) (181 samples, 0.49%)</title><rect x="15.4447%" y="740" width="0.4926%" height="15" fill="rgb(218,9,34)" fg:x="5675" fg:w="181"/><text x="15.6947%" y="750.50"></text></g><g><title>test_concat_raises_when_left_margin_ra_dec_differs_from_its_catalog (test_concatenation.py:1327) (1,021 samples, 2.78%)</title><rect x="13.1913%" y="548" width="2.7787%" height="15" fill="rgb(222,106,8)" fg:x="4847" fg:w="1021"/><text x="13.4413%" y="558.50">te..</text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (1,006 samples, 2.74%)</title><rect x="13.2321%" y="564" width="2.7379%" height="15" fill="rgb(211,220,0)" fg:x="4862" fg:w="1006"/><text x="13.4821%" y="574.50">fr..</text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (1,006 samples, 2.74%)</title><rect x="13.2321%" y="580" width="2.7379%" height="15" fill="rgb(229,52,16)" fg:x="4862" fg:w="1006"/><text x="13.4821%" y="590.50">cr..</text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (1,006 samples, 2.74%)</title><rect x="13.2321%" y="596" width="2.7379%" height="15" fill="rgb(212,155,18)" fg:x="4862" fg:w="1006"/><text x="13.4821%" y="606.50">_c..</text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:138) (202 samples, 0.55%)</title><rect x="15.4202%" y="612" width="0.5497%" height="15" fill="rgb(242,21,14)" fg:x="5666" fg:w="202"/><text x="15.6702%" y="622.50"></text></g><g><title>_create_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:212) (201 samples, 0.55%)</title><rect x="15.4229%" y="628" width="0.5470%" height="15" fill="rgb(222,19,48)" fg:x="5667" fg:w="201"/><text x="15.6729%" y="638.50"></text></g><g><title>merge (pandas/core/frame.py:10859) (201 samples, 0.55%)</title><rect x="15.4229%" y="644" width="0.5470%" height="15" fill="rgb(232,45,27)" fg:x="5667" fg:w="201"/><text x="15.6729%" y="654.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (193 samples, 0.53%)</title><rect x="15.4447%" y="660" width="0.5253%" height="15" fill="rgb(249,103,42)" fg:x="5675" fg:w="193"/><text x="15.6947%" y="670.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (193 samples, 0.53%)</title><rect x="15.4447%" y="676" width="0.5253%" height="15" fill="rgb(246,81,33)" fg:x="5675" fg:w="193"/><text x="15.6947%" y="686.50"></text></g><g><title>_get_join_info (pandas/core/reshape/merge.py:1152) (193 samples, 0.53%)</title><rect x="15.4447%" y="692" width="0.5253%" height="15" fill="rgb(252,33,42)" fg:x="5675" fg:w="193"/><text x="15.6947%" y="702.50"></text></g><g><title>_get_join_indexers (pandas/core/reshape/merge.py:1126) (193 samples, 0.53%)</title><rect x="15.4447%" y="708" width="0.5253%" height="15" fill="rgb(209,212,41)" fg:x="5675" fg:w="193"/><text x="15.6947%" y="718.50"></text></g><g><title>get_join_indexers (pandas/core/reshape/merge.py:1760) (193 samples, 0.53%)</title><rect x="15.4447%" y="724" width="0.5253%" height="15" fill="rgb(207,154,6)" fg:x="5675" fg:w="193"/><text x="15.6947%" y="734.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (107 samples, 0.29%)</title><rect x="16.0625%" y="628" width="0.2912%" height="15" fill="rgb(223,64,47)" fg:x="5902" fg:w="107"/><text x="16.3125%" y="638.50"></text></g><g><title>get_margin (hats/pixel_math/pixel_margins.py:23) (80 samples, 0.22%)</title><rect x="16.1360%" y="644" width="0.2177%" height="15" fill="rgb(211,161,38)" fg:x="5929" fg:w="80"/><text x="16.3860%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:847) (80 samples, 0.22%)</title><rect x="16.5143%" y="644" width="0.2177%" height="15" fill="rgb(219,138,40)" fg:x="6068" fg:w="80"/><text x="16.7643%" y="654.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:835) (46 samples, 0.13%)</title><rect x="16.7429%" y="676" width="0.1252%" height="15" fill="rgb(241,228,46)" fg:x="6152" fg:w="46"/><text x="16.9929%" y="686.50"></text></g><g><title>_list_to_arrays (pandas/core/internals/construction.py:853) (46 samples, 0.13%)</title><rect x="16.7429%" y="692" width="0.1252%" height="15" fill="rgb(223,209,38)" fg:x="6152" fg:w="46"/><text x="16.9929%" y="702.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (456 samples, 1.24%)</title><rect x="16.7320%" y="644" width="1.2410%" height="15" fill="rgb(236,164,45)" fg:x="6148" fg:w="456"/><text x="16.9820%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (456 samples, 1.24%)</title><rect x="16.7320%" y="660" width="1.2410%" height="15" fill="rgb(231,15,5)" fg:x="6148" fg:w="456"/><text x="16.9820%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (406 samples, 1.10%)</title><rect x="16.8681%" y="676" width="1.1049%" height="15" fill="rgb(252,35,15)" fg:x="6198" fg:w="406"/><text x="17.1181%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (406 samples, 1.10%)</title><rect x="16.8681%" y="692" width="1.1049%" height="15" fill="rgb(248,181,18)" fg:x="6198" fg:w="406"/><text x="17.1181%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (406 samples, 1.10%)</title><rect x="16.8681%" y="708" width="1.1049%" height="15" fill="rgb(233,39,42)" fg:x="6198" fg:w="406"/><text x="17.1181%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (406 samples, 1.10%)</title><rect x="16.8681%" y="724" width="1.1049%" height="15" fill="rgb(238,110,33)" fg:x="6198" fg:w="406"/><text x="17.1181%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (720 samples, 1.96%)</title><rect x="16.0217%" y="612" width="1.9595%" height="15" fill="rgb(233,195,10)" fg:x="5887" fg:w="720"/><text x="16.2717%" y="622.50">_..</text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (553 samples, 1.51%)</title><rect x="16.4762%" y="628" width="1.5050%" height="15" fill="rgb(254,105,3)" fg:x="6054" fg:w="553"/><text x="16.7262%" y="638.50"></text></g><g><title>get_join_indexers_non_unique (pandas/core/reshape/merge.py:1794) (157 samples, 0.43%)</title><rect x="17.9948%" y="740" width="0.4273%" height="15" fill="rgb(221,225,9)" fg:x="6612" fg:w="157"/><text x="18.2448%" y="750.50"></text></g><g><title>_factorize_keys (pandas/core/reshape/merge.py:2562) (156 samples, 0.42%)</title><rect x="17.9975%" y="756" width="0.4246%" height="15" fill="rgb(224,227,45)" fg:x="6613" fg:w="156"/><text x="18.2475%" y="766.50"></text></g><g><title>test_concat_raises_when_left_margin_ra_dec_differs_from_its_catalog (test_concatenation.py:1328) (922 samples, 2.51%)</title><rect x="15.9700%" y="548" width="2.5093%" height="15" fill="rgb(229,198,43)" fg:x="5868" fg:w="922"/><text x="16.2200%" y="558.50">te..</text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (903 samples, 2.46%)</title><rect x="16.0217%" y="564" width="2.4575%" height="15" fill="rgb(206,209,35)" fg:x="5887" fg:w="903"/><text x="16.2717%" y="574.50">fr..</text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (903 samples, 2.46%)</title><rect x="16.0217%" y="580" width="2.4575%" height="15" fill="rgb(245,195,53)" fg:x="5887" fg:w="903"/><text x="16.2717%" y="590.50">cr..</text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (903 samples, 2.46%)</title><rect x="16.0217%" y="596" width="2.4575%" height="15" fill="rgb(240,92,26)" fg:x="5887" fg:w="903"/><text x="16.2717%" y="606.50">_c..</text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:138) (183 samples, 0.50%)</title><rect x="17.9812%" y="612" width="0.4980%" height="15" fill="rgb(207,40,23)" fg:x="6607" fg:w="183"/><text x="18.2312%" y="622.50"></text></g><g><title>_create_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:212) (182 samples, 0.50%)</title><rect x="17.9839%" y="628" width="0.4953%" height="15" fill="rgb(223,111,35)" fg:x="6608" fg:w="182"/><text x="18.2339%" y="638.50"></text></g><g><title>merge (pandas/core/frame.py:10859) (182 samples, 0.50%)</title><rect x="17.9839%" y="644" width="0.4953%" height="15" fill="rgb(229,147,28)" fg:x="6608" fg:w="182"/><text x="18.2339%" y="654.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (178 samples, 0.48%)</title><rect x="17.9948%" y="660" width="0.4844%" height="15" fill="rgb(211,29,28)" fg:x="6612" fg:w="178"/><text x="18.2448%" y="670.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (178 samples, 0.48%)</title><rect x="17.9948%" y="676" width="0.4844%" height="15" fill="rgb(228,72,33)" fg:x="6612" fg:w="178"/><text x="18.2448%" y="686.50"></text></g><g><title>_get_join_info (pandas/core/reshape/merge.py:1152) (178 samples, 0.48%)</title><rect x="17.9948%" y="692" width="0.4844%" height="15" fill="rgb(205,214,31)" fg:x="6612" fg:w="178"/><text x="18.2448%" y="702.50"></text></g><g><title>_get_join_indexers (pandas/core/reshape/merge.py:1126) (178 samples, 0.48%)</title><rect x="17.9948%" y="708" width="0.4844%" height="15" fill="rgb(224,111,15)" fg:x="6612" fg:w="178"/><text x="18.2448%" y="718.50"></text></g><g><title>get_join_indexers (pandas/core/reshape/merge.py:1760) (178 samples, 0.48%)</title><rect x="17.9948%" y="724" width="0.4844%" height="15" fill="rgb(253,21,26)" fg:x="6612" fg:w="178"/><text x="18.2448%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (107 samples, 0.29%)</title><rect x="18.5173%" y="612" width="0.2912%" height="15" fill="rgb(245,139,43)" fg:x="6804" fg:w="107"/><text x="18.7673%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (74 samples, 0.20%)</title><rect x="18.6071%" y="628" width="0.2014%" height="15" fill="rgb(252,170,7)" fg:x="6837" fg:w="74"/><text x="18.8571%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (63 samples, 0.17%)</title><rect x="18.6371%" y="644" width="0.1715%" height="15" fill="rgb(231,118,14)" fg:x="6848" fg:w="63"/><text x="18.8871%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (63 samples, 0.17%)</title><rect x="18.6371%" y="660" width="0.1715%" height="15" fill="rgb(238,83,0)" fg:x="6848" fg:w="63"/><text x="18.8871%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (54 samples, 0.15%)</title><rect x="18.6616%" y="676" width="0.1470%" height="15" fill="rgb(221,39,39)" fg:x="6857" fg:w="54"/><text x="18.9116%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (54 samples, 0.15%)</title><rect x="18.6616%" y="692" width="0.1470%" height="15" fill="rgb(222,119,46)" fg:x="6857" fg:w="54"/><text x="18.9116%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (54 samples, 0.15%)</title><rect x="18.6616%" y="708" width="0.1470%" height="15" fill="rgb(222,165,49)" fg:x="6857" fg:w="54"/><text x="18.9116%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (54 samples, 0.15%)</title><rect x="18.6616%" y="724" width="0.1470%" height="15" fill="rgb(219,113,52)" fg:x="6857" fg:w="54"/><text x="18.9116%" y="734.50"></text></g><g><title>test_concat_raises_when_ra_dec_missing_in_metadata (test_concatenation.py:1361) (129 samples, 0.35%)</title><rect x="18.4792%" y="548" width="0.3511%" height="15" fill="rgb(214,7,15)" fg:x="6790" fg:w="129"/><text x="18.7292%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (115 samples, 0.31%)</title><rect x="18.5173%" y="564" width="0.3130%" height="15" fill="rgb(235,32,4)" fg:x="6804" fg:w="115"/><text x="18.7673%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (115 samples, 0.31%)</title><rect x="18.5173%" y="580" width="0.3130%" height="15" fill="rgb(238,90,54)" fg:x="6804" fg:w="115"/><text x="18.7673%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (115 samples, 0.31%)</title><rect x="18.5173%" y="596" width="0.3130%" height="15" fill="rgb(213,208,19)" fg:x="6804" fg:w="115"/><text x="18.7673%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (117 samples, 0.32%)</title><rect x="18.8793%" y="612" width="0.3184%" height="15" fill="rgb(233,156,4)" fg:x="6937" fg:w="117"/><text x="19.1293%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (77 samples, 0.21%)</title><rect x="18.9881%" y="628" width="0.2096%" height="15" fill="rgb(207,194,5)" fg:x="6977" fg:w="77"/><text x="19.2381%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (69 samples, 0.19%)</title><rect x="19.0099%" y="644" width="0.1878%" height="15" fill="rgb(206,111,30)" fg:x="6985" fg:w="69"/><text x="19.2599%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (69 samples, 0.19%)</title><rect x="19.0099%" y="660" width="0.1878%" height="15" fill="rgb(243,70,54)" fg:x="6985" fg:w="69"/><text x="19.2599%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (62 samples, 0.17%)</title><rect x="19.0290%" y="676" width="0.1687%" height="15" fill="rgb(242,28,8)" fg:x="6992" fg:w="62"/><text x="19.2790%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (62 samples, 0.17%)</title><rect x="19.0290%" y="692" width="0.1687%" height="15" fill="rgb(219,106,18)" fg:x="6992" fg:w="62"/><text x="19.2790%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (62 samples, 0.17%)</title><rect x="19.0290%" y="708" width="0.1687%" height="15" fill="rgb(244,222,10)" fg:x="6992" fg:w="62"/><text x="19.2790%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (62 samples, 0.17%)</title><rect x="19.0290%" y="724" width="0.1687%" height="15" fill="rgb(236,179,52)" fg:x="6992" fg:w="62"/><text x="19.2790%" y="734.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (123 samples, 0.33%)</title><rect x="18.8766%" y="596" width="0.3347%" height="15" fill="rgb(213,23,39)" fg:x="6936" fg:w="123"/><text x="19.1266%" y="606.50"></text></g><g><title>test_concat_raises_when_ra_dec_missing_in_metadata (test_concatenation.py:1362) (141 samples, 0.38%)</title><rect x="18.8303%" y="548" width="0.3837%" height="15" fill="rgb(238,48,10)" fg:x="6919" fg:w="141"/><text x="19.0803%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (124 samples, 0.34%)</title><rect x="18.8766%" y="564" width="0.3375%" height="15" fill="rgb(251,196,23)" fg:x="6936" fg:w="124"/><text x="19.1266%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (124 samples, 0.34%)</title><rect x="18.8766%" y="580" width="0.3375%" height="15" fill="rgb(250,152,24)" fg:x="6936" fg:w="124"/><text x="19.1266%" y="590.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (66 samples, 0.18%)</title><rect x="19.2576%" y="612" width="0.1796%" height="15" fill="rgb(209,150,17)" fg:x="7076" fg:w="66"/><text x="19.5076%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (44 samples, 0.12%)</title><rect x="19.3174%" y="628" width="0.1197%" height="15" fill="rgb(234,202,34)" fg:x="7098" fg:w="44"/><text x="19.5674%" y="638.50"></text></g><g><title>test_concat_raises_when_ra_dec_names_differ_between_catalogs (test_concatenation.py:1317) (93 samples, 0.25%)</title><rect x="19.2140%" y="548" width="0.2531%" height="15" fill="rgb(253,148,53)" fg:x="7060" fg:w="93"/><text x="19.4640%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (77 samples, 0.21%)</title><rect x="19.2576%" y="564" width="0.2096%" height="15" fill="rgb(218,129,16)" fg:x="7076" fg:w="77"/><text x="19.5076%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (77 samples, 0.21%)</title><rect x="19.2576%" y="580" width="0.2096%" height="15" fill="rgb(216,85,19)" fg:x="7076" fg:w="77"/><text x="19.5076%" y="590.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (77 samples, 0.21%)</title><rect x="19.2576%" y="596" width="0.2096%" height="15" fill="rgb(235,228,7)" fg:x="7076" fg:w="77"/><text x="19.5076%" y="606.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (120 samples, 0.33%)</title><rect x="19.5161%" y="612" width="0.3266%" height="15" fill="rgb(245,175,0)" fg:x="7171" fg:w="120"/><text x="19.7661%" y="622.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (97 samples, 0.26%)</title><rect x="19.5787%" y="628" width="0.2640%" height="15" fill="rgb(208,168,36)" fg:x="7194" fg:w="97"/><text x="19.8287%" y="638.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (77 samples, 0.21%)</title><rect x="19.6331%" y="644" width="0.2096%" height="15" fill="rgb(246,171,24)" fg:x="7214" fg:w="77"/><text x="19.8831%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (77 samples, 0.21%)</title><rect x="19.6331%" y="660" width="0.2096%" height="15" fill="rgb(215,142,24)" fg:x="7214" fg:w="77"/><text x="19.8831%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (65 samples, 0.18%)</title><rect x="19.6658%" y="676" width="0.1769%" height="15" fill="rgb(250,187,7)" fg:x="7226" fg:w="65"/><text x="19.9158%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (65 samples, 0.18%)</title><rect x="19.6658%" y="692" width="0.1769%" height="15" fill="rgb(228,66,33)" fg:x="7226" fg:w="65"/><text x="19.9158%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (65 samples, 0.18%)</title><rect x="19.6658%" y="708" width="0.1769%" height="15" fill="rgb(234,215,21)" fg:x="7226" fg:w="65"/><text x="19.9158%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (65 samples, 0.18%)</title><rect x="19.6658%" y="724" width="0.1769%" height="15" fill="rgb(222,191,20)" fg:x="7226" fg:w="65"/><text x="19.9158%" y="734.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (130 samples, 0.35%)</title><rect x="19.5134%" y="596" width="0.3538%" height="15" fill="rgb(245,79,54)" fg:x="7170" fg:w="130"/><text x="19.7634%" y="606.50"></text></g><g><title>test_concat_raises_when_ra_dec_names_differ_between_catalogs (test_concatenation.py:1318) (149 samples, 0.41%)</title><rect x="19.4671%" y="548" width="0.4055%" height="15" fill="rgb(240,10,37)" fg:x="7153" fg:w="149"/><text x="19.7171%" y="558.50"></text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (132 samples, 0.36%)</title><rect x="19.5134%" y="564" width="0.3592%" height="15" fill="rgb(214,192,32)" fg:x="7170" fg:w="132"/><text x="19.7634%" y="574.50"></text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (132 samples, 0.36%)</title><rect x="19.5134%" y="580" width="0.3592%" height="15" fill="rgb(209,36,54)" fg:x="7170" fg:w="132"/><text x="19.7634%" y="590.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (112 samples, 0.30%)</title><rect x="19.9869%" y="628" width="0.3048%" height="15" fill="rgb(220,10,11)" fg:x="7344" fg:w="112"/><text x="20.2369%" y="638.50"></text></g><g><title>get_margin (hats/pixel_math/pixel_margins.py:23) (75 samples, 0.20%)</title><rect x="20.0876%" y="644" width="0.2041%" height="15" fill="rgb(221,106,17)" fg:x="7381" fg:w="75"/><text x="20.3376%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:847) (115 samples, 0.31%)</title><rect x="20.4931%" y="644" width="0.3130%" height="15" fill="rgb(251,142,44)" fg:x="7530" fg:w="115"/><text x="20.7431%" y="654.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:835) (63 samples, 0.17%)</title><rect x="20.8197%" y="676" width="0.1715%" height="15" fill="rgb(238,13,15)" fg:x="7650" fg:w="63"/><text x="21.0697%" y="686.50"></text></g><g><title>_list_to_arrays (pandas/core/internals/construction.py:853) (63 samples, 0.17%)</title><rect x="20.8197%" y="692" width="0.1715%" height="15" fill="rgb(208,107,27)" fg:x="7650" fg:w="63"/><text x="21.0697%" y="702.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (572 samples, 1.56%)</title><rect x="20.8061%" y="644" width="1.5567%" height="15" fill="rgb(205,136,37)" fg:x="7645" fg:w="572"/><text x="21.0561%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (572 samples, 1.56%)</title><rect x="20.8061%" y="660" width="1.5567%" height="15" fill="rgb(250,205,27)" fg:x="7645" fg:w="572"/><text x="21.0561%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (504 samples, 1.37%)</title><rect x="20.9912%" y="676" width="1.3717%" height="15" fill="rgb(210,80,43)" fg:x="7713" fg:w="504"/><text x="21.2412%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (504 samples, 1.37%)</title><rect x="20.9912%" y="692" width="1.3717%" height="15" fill="rgb(247,160,36)" fg:x="7713" fg:w="504"/><text x="21.2412%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (504 samples, 1.37%)</title><rect x="20.9912%" y="708" width="1.3717%" height="15" fill="rgb(234,13,49)" fg:x="7713" fg:w="504"/><text x="21.2412%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (504 samples, 1.37%)</title><rect x="20.9912%" y="724" width="1.3717%" height="15" fill="rgb(234,122,0)" fg:x="7713" fg:w="504"/><text x="21.2412%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (894 samples, 2.43%)</title><rect x="19.9434%" y="612" width="2.4331%" height="15" fill="rgb(207,146,38)" fg:x="7328" fg:w="894"/><text x="20.1934%" y="622.50">_g..</text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (742 samples, 2.02%)</title><rect x="20.3571%" y="628" width="2.0194%" height="15" fill="rgb(207,177,25)" fg:x="7480" fg:w="742"/><text x="20.6071%" y="638.50">_..</text></g><g><title>get_join_indexers_non_unique (pandas/core/reshape/merge.py:1794) (215 samples, 0.59%)</title><rect x="22.3819%" y="740" width="0.5851%" height="15" fill="rgb(211,178,42)" fg:x="8224" fg:w="215"/><text x="22.6319%" y="750.50"></text></g><g><title>_factorize_keys (pandas/core/reshape/merge.py:2562) (215 samples, 0.59%)</title><rect x="22.3819%" y="756" width="0.5851%" height="15" fill="rgb(230,69,54)" fg:x="8224" fg:w="215"/><text x="22.6319%" y="766.50"></text></g><g><title>test_concat_raises_when_right_margin_ra_dec_differs_from_its_catalog (test_concatenation.py:1345) (1,147 samples, 3.12%)</title><rect x="19.8726%" y="548" width="3.1216%" height="15" fill="rgb(214,135,41)" fg:x="7302" fg:w="1147"/><text x="20.1226%" y="558.50">tes..</text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (1,122 samples, 3.05%)</title><rect x="19.9407%" y="564" width="3.0536%" height="15" fill="rgb(237,67,25)" fg:x="7327" fg:w="1122"/><text x="20.1907%" y="574.50">fro..</text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (1,122 samples, 3.05%)</title><rect x="19.9407%" y="580" width="3.0536%" height="15" fill="rgb(222,189,50)" fg:x="7327" fg:w="1122"/><text x="20.1907%" y="590.50">cre..</text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (1,122 samples, 3.05%)</title><rect x="19.9407%" y="596" width="3.0536%" height="15" fill="rgb(245,148,34)" fg:x="7327" fg:w="1122"/><text x="20.1907%" y="606.50">_cr..</text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:138) (227 samples, 0.62%)</title><rect x="22.3764%" y="612" width="0.6178%" height="15" fill="rgb(222,29,6)" fg:x="8222" fg:w="227"/><text x="22.6264%" y="622.50"></text></g><g><title>_create_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:212) (227 samples, 0.62%)</title><rect x="22.3764%" y="628" width="0.6178%" height="15" fill="rgb(221,189,43)" fg:x="8222" fg:w="227"/><text x="22.6264%" y="638.50"></text></g><g><title>merge (pandas/core/frame.py:10859) (227 samples, 0.62%)</title><rect x="22.3764%" y="644" width="0.6178%" height="15" fill="rgb(207,36,27)" fg:x="8222" fg:w="227"/><text x="22.6264%" y="654.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (225 samples, 0.61%)</title><rect x="22.3819%" y="660" width="0.6123%" height="15" fill="rgb(217,90,24)" fg:x="8224" fg:w="225"/><text x="22.6319%" y="670.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (225 samples, 0.61%)</title><rect x="22.3819%" y="676" width="0.6123%" height="15" fill="rgb(224,66,35)" fg:x="8224" fg:w="225"/><text x="22.6319%" y="686.50"></text></g><g><title>_get_join_info (pandas/core/reshape/merge.py:1152) (225 samples, 0.61%)</title><rect x="22.3819%" y="692" width="0.6123%" height="15" fill="rgb(221,13,50)" fg:x="8224" fg:w="225"/><text x="22.6319%" y="702.50"></text></g><g><title>_get_join_indexers (pandas/core/reshape/merge.py:1126) (225 samples, 0.61%)</title><rect x="22.3819%" y="708" width="0.6123%" height="15" fill="rgb(236,68,49)" fg:x="8224" fg:w="225"/><text x="22.6319%" y="718.50"></text></g><g><title>get_join_indexers (pandas/core/reshape/merge.py:1760) (225 samples, 0.61%)</title><rect x="22.3819%" y="724" width="0.6123%" height="15" fill="rgb(229,146,28)" fg:x="8224" fg:w="225"/><text x="22.6319%" y="734.50"></text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:185) (94 samples, 0.26%)</title><rect x="23.0623%" y="628" width="0.2558%" height="15" fill="rgb(225,31,38)" fg:x="8474" fg:w="94"/><text x="23.3123%" y="638.50"></text></g><g><title>get_margin (hats/pixel_math/pixel_margins.py:23) (59 samples, 0.16%)</title><rect x="23.1575%" y="644" width="0.1606%" height="15" fill="rgb(250,208,3)" fg:x="8509" fg:w="59"/><text x="23.4075%" y="654.50"></text></g><g><title>__init__ (pandas/core/frame.py:847) (94 samples, 0.26%)</title><rect x="23.4542%" y="644" width="0.2558%" height="15" fill="rgb(246,54,23)" fg:x="8618" fg:w="94"/><text x="23.7042%" y="654.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:835) (44 samples, 0.12%)</title><rect x="23.7182%" y="676" width="0.1197%" height="15" fill="rgb(243,76,11)" fg:x="8715" fg:w="44"/><text x="23.9682%" y="686.50"></text></g><g><title>_list_to_arrays (pandas/core/internals/construction.py:853) (44 samples, 0.12%)</title><rect x="23.7182%" y="692" width="0.1197%" height="15" fill="rgb(245,21,50)" fg:x="8715" fg:w="44"/><text x="23.9682%" y="702.50"></text></g><g><title>__init__ (pandas/core/frame.py:855) (558 samples, 1.52%)</title><rect x="23.7100%" y="644" width="1.5186%" height="15" fill="rgb(228,9,43)" fg:x="8712" fg:w="558"/><text x="23.9600%" y="654.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (558 samples, 1.52%)</title><rect x="23.7100%" y="660" width="1.5186%" height="15" fill="rgb(208,100,47)" fg:x="8712" fg:w="558"/><text x="23.9600%" y="670.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:845) (511 samples, 1.39%)</title><rect x="23.8379%" y="676" width="1.3907%" height="15" fill="rgb(232,26,8)" fg:x="8759" fg:w="511"/><text x="24.0879%" y="686.50"></text></g><g><title>_finalize_columns_and_data (pandas/core/internals/construction.py:945) (511 samples, 1.39%)</title><rect x="23.8379%" y="692" width="1.3907%" height="15" fill="rgb(216,166,38)" fg:x="8759" fg:w="511"/><text x="24.0879%" y="702.50"></text></g><g><title>convert_object_array (pandas/core/internals/construction.py:1071) (511 samples, 1.39%)</title><rect x="23.8379%" y="708" width="1.3907%" height="15" fill="rgb(251,202,51)" fg:x="8759" fg:w="511"/><text x="24.0879%" y="718.50"></text></g><g><title>convert (pandas/core/internals/construction.py:1030) (511 samples, 1.39%)</title><rect x="23.8379%" y="724" width="1.3907%" height="15" fill="rgb(254,216,34)" fg:x="8759" fg:w="511"/><text x="24.0879%" y="734.50"></text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:137) (808 samples, 2.20%)</title><rect x="23.0323%" y="612" width="2.1990%" height="15" fill="rgb(251,32,27)" fg:x="8463" fg:w="808"/><text x="23.2823%" y="622.50">_..</text></g><g><title>_find_margin_pixel_pairs (lsdb/loaders/dataframe/margin_catalog_generator.py:191) (668 samples, 1.82%)</title><rect x="23.4133%" y="628" width="1.8180%" height="15" fill="rgb(208,127,28)" fg:x="8603" fg:w="668"/><text x="23.6633%" y="638.50">_..</text></g><g><title>get_join_indexers_non_unique (pandas/core/reshape/merge.py:1794) (191 samples, 0.52%)</title><rect x="25.2422%" y="740" width="0.5198%" height="15" fill="rgb(224,137,22)" fg:x="9275" fg:w="191"/><text x="25.4922%" y="750.50"></text></g><g><title>_factorize_keys (pandas/core/reshape/merge.py:2562) (190 samples, 0.52%)</title><rect x="25.2449%" y="756" width="0.5171%" height="15" fill="rgb(254,70,32)" fg:x="9276" fg:w="190"/><text x="25.4949%" y="766.50"></text></g><g><title>_create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:100) (1,014 samples, 2.76%)</title><rect x="23.0323%" y="596" width="2.7596%" height="15" fill="rgb(229,75,37)" fg:x="8463" fg:w="1014"/><text x="23.2823%" y="606.50">_c..</text></g><g><title>_get_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:138) (206 samples, 0.56%)</title><rect x="25.2313%" y="612" width="0.5606%" height="15" fill="rgb(252,64,23)" fg:x="9271" fg:w="206"/><text x="25.4813%" y="622.50"></text></g><g><title>_create_margins (lsdb/loaders/dataframe/margin_catalog_generator.py:212) (206 samples, 0.56%)</title><rect x="25.2313%" y="628" width="0.5606%" height="15" fill="rgb(232,162,48)" fg:x="9271" fg:w="206"/><text x="25.4813%" y="638.50"></text></g><g><title>merge (pandas/core/frame.py:10859) (206 samples, 0.56%)</title><rect x="25.2313%" y="644" width="0.5606%" height="15" fill="rgb(246,160,12)" fg:x="9271" fg:w="206"/><text x="25.4813%" y="654.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (202 samples, 0.55%)</title><rect x="25.2422%" y="660" width="0.5497%" height="15" fill="rgb(247,166,0)" fg:x="9275" fg:w="202"/><text x="25.4922%" y="670.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (202 samples, 0.55%)</title><rect x="25.2422%" y="676" width="0.5497%" height="15" fill="rgb(249,219,21)" fg:x="9275" fg:w="202"/><text x="25.4922%" y="686.50"></text></g><g><title>_get_join_info (pandas/core/reshape/merge.py:1152) (202 samples, 0.55%)</title><rect x="25.2422%" y="692" width="0.5497%" height="15" fill="rgb(205,209,3)" fg:x="9275" fg:w="202"/><text x="25.4922%" y="702.50"></text></g><g><title>_get_join_indexers (pandas/core/reshape/merge.py:1126) (202 samples, 0.55%)</title><rect x="25.2422%" y="708" width="0.5497%" height="15" fill="rgb(243,44,1)" fg:x="9275" fg:w="202"/><text x="25.4922%" y="718.50"></text></g><g><title>get_join_indexers (pandas/core/reshape/merge.py:1760) (202 samples, 0.55%)</title><rect x="25.2422%" y="724" width="0.5497%" height="15" fill="rgb(206,159,16)" fg:x="9275" fg:w="202"/><text x="25.4922%" y="734.50"></text></g><g><title>test_concat_raises_when_right_margin_ra_dec_differs_from_its_catalog (test_concatenation.py:1346) (1,029 samples, 2.80%)</title><rect x="22.9942%" y="548" width="2.8005%" height="15" fill="rgb(244,77,30)" fg:x="8449" fg:w="1029"/><text x="23.2442%" y="558.50">te..</text></g><g><title>from_dataframe (lsdb/loaders/dataframe/from_dataframe.py:89) (1,015 samples, 2.76%)</title><rect x="23.0323%" y="564" width="2.7624%" height="15" fill="rgb(218,69,12)" fg:x="8463" fg:w="1015"/><text x="23.2823%" y="574.50">fr..</text></g><g><title>create_catalog (lsdb/loaders/dataframe/margin_catalog_generator.py:95) (1,015 samples, 2.76%)</title><rect x="23.0323%" y="580" width="2.7624%" height="15" fill="rgb(212,87,7)" fg:x="8463" fg:w="1015"/><text x="23.2823%" y="590.50">cr..</text></g><g><title>finalize (numba/core/codegen.py:769) (40 samples, 0.11%)</title><rect x="25.9172%" y="932" width="0.1089%" height="15" fill="rgb(245,114,25)" fg:x="9523" fg:w="40"/><text x="26.1672%" y="942.50"></text></g><g><title>run_pass (numba/core/typed_passes.py:499) (55 samples, 0.15%)</title><rect x="25.9172%" y="868" width="0.1497%" height="15" fill="rgb(210,61,42)" fg:x="9523" fg:w="55"/><text x="26.1672%" y="878.50"></text></g><g><title>get_executable (numba/core/cpu.py:239) (55 samples, 0.15%)</title><rect x="25.9172%" y="884" width="0.1497%" height="15" fill="rgb(211,52,33)" fg:x="9523" fg:w="55"/><text x="26.1672%" y="894.50"></text></g><g><title>get_pointer_to_function (numba/core/codegen.py:996) (55 samples, 0.15%)</title><rect x="25.9172%" y="900" width="0.1497%" height="15" fill="rgb(234,58,33)" fg:x="9523" fg:w="55"/><text x="26.1672%" y="910.50"></text></g><g><title>_ensure_finalized (numba/core/codegen.py:567) (55 samples, 0.15%)</title><rect x="25.9172%" y="916" width="0.1497%" height="15" fill="rgb(220,115,36)" fg:x="9523" fg:w="55"/><text x="26.1672%" y="926.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:170) (97 samples, 0.26%)</title><rect x="25.8246%" y="564" width="0.2640%" height="15" fill="rgb(243,153,54)" fg:x="9489" fg:w="97"/><text x="26.0746%" y="574.50"></text></g><g><title>concat (lsdb/catalog/catalog.py:430) (97 samples, 0.26%)</title><rect x="25.8246%" y="580" width="0.2640%" height="15" fill="rgb(251,47,18)" fg:x="9489" fg:w="97"/><text x="26.0746%" y="590.50"></text></g><g><title>concat_catalog_data (lsdb/dask/concat_catalog_data.py:368) (97 samples, 0.26%)</title><rect x="25.8246%" y="596" width="0.2640%" height="15" fill="rgb(242,102,42)" fg:x="9489" fg:w="97"/><text x="26.0746%" y="606.50"></text></g><g><title>concat_align_catalogs (lsdb/dask/merge_catalog_functions.py:297) (96 samples, 0.26%)</title><rect x="25.8273%" y="612" width="0.2613%" height="15" fill="rgb(234,31,38)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="622.50"></text></g><g><title>align_with_mocs (hats/pixel_tree/pixel_alignment.py:438) (96 samples, 0.26%)</title><rect x="25.8273%" y="628" width="0.2613%" height="15" fill="rgb(221,117,51)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="638.50"></text></g><g><title>align_trees (hats/pixel_tree/pixel_alignment.py:104) (96 samples, 0.26%)</title><rect x="25.8273%" y="644" width="0.2613%" height="15" fill="rgb(212,20,18)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="654.50"></text></g><g><title>_compile_for_args (numba/core/dispatcher.py:376) (96 samples, 0.26%)</title><rect x="25.8273%" y="660" width="0.2613%" height="15" fill="rgb(245,133,36)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="670.50"></text></g><g><title>compile (numba/core/dispatcher.py:908) (96 samples, 0.26%)</title><rect x="25.8273%" y="676" width="0.2613%" height="15" fill="rgb(212,6,19)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="686.50"></text></g><g><title>compile (numba/core/dispatcher.py:80) (96 samples, 0.26%)</title><rect x="25.8273%" y="692" width="0.2613%" height="15" fill="rgb(218,1,36)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="702.50"></text></g><g><title>_compile_cached (numba/core/dispatcher.py:94) (96 samples, 0.26%)</title><rect x="25.8273%" y="708" width="0.2613%" height="15" fill="rgb(246,84,54)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="718.50"></text></g><g><title>_compile_core (numba/core/dispatcher.py:107) (96 samples, 0.26%)</title><rect x="25.8273%" y="724" width="0.2613%" height="15" fill="rgb(242,110,6)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="734.50"></text></g><g><title>compile_extra (numba/core/compiler.py:739) (96 samples, 0.26%)</title><rect x="25.8273%" y="740" width="0.2613%" height="15" fill="rgb(214,47,5)" fg:x="9490" fg:w="96"/><text x="26.0773%" y="750.50"></text></g><g><title>compile_extra (numba/core/compiler.py:439) (95 samples, 0.26%)</title><rect x="25.8301%" y="756" width="0.2585%" height="15" fill="rgb(218,159,25)" fg:x="9491" fg:w="95"/><text x="26.0801%" y="766.50"></text></g><g><title>_compile_bytecode (numba/core/compiler.py:505) (95 samples, 0.26%)</title><rect x="25.8301%" y="772" width="0.2585%" height="15" fill="rgb(215,211,28)" fg:x="9491" fg:w="95"/><text x="26.0801%" y="782.50"></text></g><g><title>_compile_core (numba/core/compiler.py:473) (94 samples, 0.26%)</title><rect x="25.8328%" y="788" width="0.2558%" height="15" fill="rgb(238,59,32)" fg:x="9492" fg:w="94"/><text x="26.0828%" y="798.50"></text></g><g><title>run (numba/core/compiler_machinery.py:356) (94 samples, 0.26%)</title><rect x="25.8328%" y="804" width="0.2558%" height="15" fill="rgb(226,82,3)" fg:x="9492" fg:w="94"/><text x="26.0828%" y="814.50"></text></g><g><title>_acquire_compile_lock (numba/core/compiler_lock.py:35) (94 samples, 0.26%)</title><rect x="25.8328%" y="820" width="0.2558%" height="15" fill="rgb(240,164,32)" fg:x="9492" fg:w="94"/><text x="26.0828%" y="830.50"></text></g><g><title>_runPass (numba/core/compiler_machinery.py:311) (94 samples, 0.26%)</title><rect x="25.8328%" y="836" width="0.2558%" height="15" fill="rgb(232,46,7)" fg:x="9492" fg:w="94"/><text x="26.0828%" y="846.50"></text></g><g><title>check (numba/core/compiler_machinery.py:272) (94 samples, 0.26%)</title><rect x="25.8328%" y="852" width="0.2558%" height="15" fill="rgb(229,129,53)" fg:x="9492" fg:w="94"/><text x="26.0828%" y="862.50"></text></g><g><title>_assert_concat_symmetry (test_concatenation.py:200) (43 samples, 0.12%)</title><rect x="26.0913%" y="564" width="0.1170%" height="15" fill="rgb(234,188,29)" fg:x="9587" fg:w="43"/><text x="26.3413%" y="574.50"></text></g><g><title>_row_multiset (test_concatenation.py:127) (43 samples, 0.12%)</title><rect x="26.0913%" y="580" width="0.1170%" height="15" fill="rgb(246,141,4)" fg:x="9587" fg:w="43"/><text x="26.3413%" y="590.50"></text></g><g><title>__init__ (collections/__init__.py:607) (43 samples, 0.12%)</title><rect x="26.0913%" y="596" width="0.1170%" height="15" fill="rgb(229,23,39)" fg:x="9587" fg:w="43"/><text x="26.3413%" y="606.50"></text></g><g><title>update (collections/__init__.py:699) (43 samples, 0.12%)</title><rect x="26.0913%" y="612" width="0.1170%" height="15" fill="rgb(206,12,3)" fg:x="9587" fg:w="43"/><text x="26.3413%" y="622.50"></text></g><g><title>&lt;genexpr&gt; (test_concatenation.py:126) (43 samples, 0.12%)</title><rect x="26.0913%" y="628" width="0.1170%" height="15" fill="rgb(252,226,20)" fg:x="9587" fg:w="43"/><text x="26.3413%" y="638.50"></text></g><g><title>test_concat_warn_left_no_margin (test_concatenation.py:629) (175 samples, 0.48%)</title><rect x="25.8192%" y="548" width="0.4763%" height="15" fill="rgb(216,123,35)" fg:x="9487" fg:w="175"/><text x="26.0692%" y="558.50"></text></g><g><title>_multicall (pluggy/_callers.py:121) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="436" width="25.8328%" height="15" fill="rgb(212,68,40)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="446.50">_multicall (pluggy/_callers.py:121)</text></g><g><title>pytest_runtest_call (_pytest/runner.py:178) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="452" width="25.8328%" height="15" fill="rgb(254,125,32)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="462.50">pytest_runtest_call (_pytest/runner.py:17..</text></g><g><title>runtest (_pytest/python.py:1671) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="468" width="25.8328%" height="15" fill="rgb(253,97,22)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="478.50">runtest (_pytest/python.py:1671)</text></g><g><title>__call__ (pluggy/_hooks.py:512) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="484" width="25.8328%" height="15" fill="rgb(241,101,14)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="494.50">__call__ (pluggy/_hooks.py:512)</text></g><g><title>_hookexec (pluggy/_manager.py:120) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="500" width="25.8328%" height="15" fill="rgb(238,103,29)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="510.50">_hookexec (pluggy/_manager.py:120)</text></g><g><title>_multicall (pluggy/_callers.py:121) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="516" width="25.8328%" height="15" fill="rgb(233,195,47)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="526.50">_multicall (pluggy/_callers.py:121)</text></g><g><title>pytest_pyfunc_call (_pytest/python.py:157) (9,492 samples, 25.83%)</title><rect x="0.6559%" y="532" width="25.8328%" height="15" fill="rgb(246,218,30)" fg:x="241" fg:w="9492"/><text x="0.9059%" y="542.50">pytest_pyfunc_call (_pytest/python.py:157)</text></g><g><title>test_concat_warn_right_no_margin (test_concatenation.py:664) (62 samples, 0.17%)</title><rect x="26.3199%" y="548" width="0.1687%" height="15" fill="rgb(219,145,47)" fg:x="9671" fg:w="62"/><text x="26.5699%" y="558.50"></text></g><g><title>call_and_report (_pytest/runner.py:245) (9,494 samples, 25.84%)</title><rect x="0.6532%" y="356" width="25.8382%" height="15" fill="rgb(243,12,26)" fg:x="240" fg:w="9494"/><text x="0.9032%" y="366.50">call_and_report (_pytest/runner.py:245)</text></g><g><title>from_call (_pytest/runner.py:344) (9,494 samples, 25.84%)</title><rect x="0.6532%" y="372" width="25.8382%" height="15" fill="rgb(214,87,16)" fg:x="240" fg:w="9494"/><text x="0.9032%" y="382.50">from_call (_pytest/runner.py:344)</text></g><g><title>&lt;lambda&gt; (_pytest/runner.py:246) (9,494 samples, 25.84%)</title><rect x="0.6532%" y="388" width="25.8382%" height="15" fill="rgb(208,99,42)" fg:x="240" fg:w="9494"/><text x="0.9032%" y="398.50">&lt;lambda&gt; (_pytest/runner.py:246)</text></g><g><title>__call__ (pluggy/_hooks.py:512) (9,494 samples, 25.84%)</title><rect x="0.6532%" y="404" width="25.8382%" height="15" fill="rgb(253,99,2)" fg:x="240" fg:w="9494"/><text x="0.9032%" y="414.50">__call__ (pluggy/_hooks.py:512)</text></g><g><title>_hookexec (pluggy/_manager.py:120) (9,494 samples, 25.84%)</title><rect x="0.6532%" y="420" width="25.8382%" height="15" fill="rgb(220,168,23)" fg:x="240" fg:w="9494"/><text x="0.9032%" y="430.50">_hookexec (pluggy/_manager.py:120)</text></g><g><title>wrap_session (_pytest/main.py:289) (9,531 samples, 25.94%)</title><rect x="0.5579%" y="180" width="25.9389%" height="15" fill="rgb(242,38,24)" fg:x="205" fg:w="9531"/><text x="0.8079%" y="190.50">wrap_session (_pytest/main.py:289)</text></g><g><title>_main (_pytest/main.py:343) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="196" width="25.8709%" height="15" fill="rgb(225,182,9)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="206.50">_main (_pytest/main.py:343)</text></g><g><title>__call__ (pluggy/_hooks.py:512) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="212" width="25.8709%" height="15" fill="rgb(243,178,37)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="222.50">__call__ (pluggy/_hooks.py:512)</text></g><g><title>_hookexec (pluggy/_manager.py:120) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="228" width="25.8709%" height="15" fill="rgb(232,139,19)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="238.50">_hookexec (pluggy/_manager.py:120)</text></g><g><title>_multicall (pluggy/_callers.py:121) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="244" width="25.8709%" height="15" fill="rgb(225,201,24)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="254.50">_multicall (pluggy/_callers.py:121)</text></g><g><title>pytest_runtestloop (_pytest/main.py:367) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="260" width="25.8709%" height="15" fill="rgb(221,47,46)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="270.50">pytest_runtestloop (_pytest/main.py:367)</text></g><g><title>__call__ (pluggy/_hooks.py:512) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="276" width="25.8709%" height="15" fill="rgb(249,23,13)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="286.50">__call__ (pluggy/_hooks.py:512)</text></g><g><title>_hookexec (pluggy/_manager.py:120) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="292" width="25.8709%" height="15" fill="rgb(219,9,5)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="302.50">_hookexec (pluggy/_manager.py:120)</text></g><g><title>_multicall (pluggy/_callers.py:121) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="308" width="25.8709%" height="15" fill="rgb(254,171,16)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="318.50">_multicall (pluggy/_callers.py:121)</text></g><g><title>pytest_runtest_protocol (_pytest/runner.py:117) (9,506 samples, 25.87%)</title><rect x="0.6260%" y="324" width="25.8709%" height="15" fill="rgb(230,171,20)" fg:x="230" fg:w="9506"/><text x="0.8760%" y="334.50">pytest_runtest_protocol (_pytest/runner.p..</text></g><g><title>runtestprotocol (_pytest/runner.py:136) (9,496 samples, 25.84%)</title><rect x="0.6532%" y="340" width="25.8437%" height="15" fill="rgb(210,71,41)" fg:x="240" fg:w="9496"/><text x="0.9032%" y="350.50">runtestprotocol (_pytest/runner.py:136)</text></g><g><title>&lt;module&gt; (pytest:7) (9,807 samples, 26.69%)</title><rect x="0.0354%" y="68" width="26.6901%" height="15" fill="rgb(206,173,20)" fg:x="13" fg:w="9807"/><text x="0.2854%" y="78.50">&lt;module&gt; (pytest:7)</text></g><g><title>console_main (_pytest/config/__init__.py:201) (9,807 samples, 26.69%)</title><rect x="0.0354%" y="84" width="26.6901%" height="15" fill="rgb(233,88,34)" fg:x="13" fg:w="9807"/><text x="0.2854%" y="94.50">console_main (_pytest/config/__init__.py:20..</text></g><g><title>main (_pytest/config/__init__.py:175) (9,615 samples, 26.17%)</title><rect x="0.5579%" y="100" width="26.1675%" height="15" fill="rgb(223,209,46)" fg:x="205" fg:w="9615"/><text x="0.8079%" y="110.50">main (_pytest/config/__init__.py:175)</text></g><g><title>__call__ (pluggy/_hooks.py:512) (9,615 samples, 26.17%)</title><rect x="0.5579%" y="116" width="26.1675%" height="15" fill="rgb(250,43,18)" fg:x="205" fg:w="9615"/><text x="0.8079%" y="126.50">__call__ (pluggy/_hooks.py:512)</text></g><g><title>_hookexec (pluggy/_manager.py:120) (9,615 samples, 26.17%)</title><rect x="0.5579%" y="132" width="26.1675%" height="15" fill="rgb(208,13,10)" fg:x="205" fg:w="9615"/><text x="0.8079%" y="142.50">_hookexec (pluggy/_manager.py:120)</text></g><g><title>_multicall (pluggy/_callers.py:121) (9,615 samples, 26.17%)</title><rect x="0.5579%" y="148" width="26.1675%" height="15" fill="rgb(212,200,36)" fg:x="205" fg:w="9615"/><text x="0.8079%" y="158.50">_multicall (pluggy/_callers.py:121)</text></g><g><title>pytest_cmdline_main (_pytest/main.py:336) (9,615 samples, 26.17%)</title><rect x="0.5579%" y="164" width="26.1675%" height="15" fill="rgb(225,90,30)" fg:x="205" fg:w="9615"/><text x="0.8079%" y="174.50">pytest_cmdline_main (_pytest/main.py:336)</text></g><g><title>wrap_session (_pytest/main.py:331) (84 samples, 0.23%)</title><rect x="26.4968%" y="180" width="0.2286%" height="15" fill="rgb(236,182,39)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="190.50"></text></g><g><title>_ensure_unconfigure (_pytest/config/__init__.py:1131) (84 samples, 0.23%)</title><rect x="26.4968%" y="196" width="0.2286%" height="15" fill="rgb(212,144,35)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="206.50"></text></g><g><title>close (contextlib.py:618) (84 samples, 0.23%)</title><rect x="26.4968%" y="212" width="0.2286%" height="15" fill="rgb(228,63,44)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="222.50"></text></g><g><title>__exit__ (contextlib.py:595) (84 samples, 0.23%)</title><rect x="26.4968%" y="228" width="0.2286%" height="15" fill="rgb(228,109,6)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="238.50"></text></g><g><title>_exit_wrapper (contextlib.py:478) (84 samples, 0.23%)</title><rect x="26.4968%" y="244" width="0.2286%" height="15" fill="rgb(238,117,24)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="254.50"></text></g><g><title>cleanup (_pytest/unraisableexception.py:94) (84 samples, 0.23%)</title><rect x="26.4968%" y="260" width="0.2286%" height="15" fill="rgb(242,26,26)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="270.50"></text></g><g><title>gc_collect_harder (_pytest/unraisableexception.py:33) (84 samples, 0.23%)</title><rect x="26.4968%" y="276" width="0.2286%" height="15" fill="rgb(221,92,48)" fg:x="9736" fg:w="84"/><text x="26.7468%" y="286.50"></text></g><g><title>_worker (concurrent/futures/thread.py:89) (1,196 samples, 3.25%)</title><rect x="26.7363%" y="116" width="3.2550%" height="15" fill="rgb(209,209,32)" fg:x="9824" fg:w="1196"/><text x="26.9863%" y="126.50">_wo..</text></g><g><title>dtypes (pandas/core/generic.py:6483) (45 samples, 0.12%)</title><rect x="30.3288%" y="244" width="0.1225%" height="15" fill="rgb(221,70,22)" fg:x="11144" fg:w="45"/><text x="30.5788%" y="254.50"></text></g><g><title>_cast_cols_to_nested (nested_pandas/nestedframe/core.py:67) (57 samples, 0.16%)</title><rect x="30.3097%" y="228" width="0.1551%" height="15" fill="rgb(248,145,5)" fg:x="11137" fg:w="57"/><text x="30.5597%" y="238.50"></text></g><g><title>__call__ (dask/_task_spec.py:754) (147 samples, 0.40%)</title><rect x="30.0838%" y="180" width="0.4001%" height="15" fill="rgb(226,116,26)" fg:x="11054" fg:w="147"/><text x="30.3338%" y="190.50"></text></g><g><title>apply_and_enforce (dask/dataframe/core.py:98) (86 samples, 0.23%)</title><rect x="30.2498%" y="196" width="0.2341%" height="15" fill="rgb(244,5,17)" fg:x="11115" fg:w="86"/><text x="30.4998%" y="206.50"></text></g><g><title>__init__ (nested_pandas/nestedframe/core.py:55) (64 samples, 0.17%)</title><rect x="30.3097%" y="212" width="0.1742%" height="15" fill="rgb(252,159,33)" fg:x="11137" fg:w="64"/><text x="30.5597%" y="222.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:166) (76 samples, 0.21%)</title><rect x="30.5029%" y="276" width="0.2068%" height="15" fill="rgb(206,71,0)" fg:x="11208" fg:w="76"/><text x="30.7529%" y="286.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:597) (68 samples, 0.19%)</title><rect x="30.5247%" y="292" width="0.1851%" height="15" fill="rgb(233,118,54)" fg:x="11216" fg:w="68"/><text x="30.7747%" y="302.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:597) (68 samples, 0.19%)</title><rect x="30.5247%" y="308" width="0.1851%" height="15" fill="rgb(234,83,48)" fg:x="11216" fg:w="68"/><text x="30.7747%" y="318.50"></text></g><g><title>_concat (dask/dataframe/core.py:53) (94 samples, 0.26%)</title><rect x="30.4948%" y="196" width="0.2558%" height="15" fill="rgb(228,3,54)" fg:x="11205" fg:w="94"/><text x="30.7448%" y="206.50"></text></g><g><title>concat (dask/dataframe/dispatch.py:68) (94 samples, 0.26%)</title><rect x="30.4948%" y="212" width="0.2558%" height="15" fill="rgb(226,155,13)" fg:x="11205" fg:w="94"/><text x="30.7448%" y="222.50"></text></g><g><title>concat_pandas (dask/dataframe/backends.py:697) (94 samples, 0.26%)</title><rect x="30.4948%" y="228" width="0.2558%" height="15" fill="rgb(241,28,37)" fg:x="11205" fg:w="94"/><text x="30.7448%" y="238.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (94 samples, 0.26%)</title><rect x="30.4948%" y="244" width="0.2558%" height="15" fill="rgb(233,93,10)" fg:x="11205" fg:w="94"/><text x="30.7448%" y="254.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (93 samples, 0.25%)</title><rect x="30.4975%" y="260" width="0.2531%" height="15" fill="rgb(225,113,19)" fg:x="11206" fg:w="93"/><text x="30.7475%" y="270.50"></text></g><g><title>table_to_dataframe (pyarrow/pandas_compat.py:807) (57 samples, 0.16%)</title><rect x="30.9847%" y="340" width="0.1551%" height="15" fill="rgb(241,2,18)" fg:x="11385" fg:w="57"/><text x="31.2347%" y="350.50"></text></g><g><title>_reconstruct_block (pyarrow/pandas_compat.py:763) (267 samples, 0.73%)</title><rect x="31.1398%" y="356" width="0.7266%" height="15" fill="rgb(228,207,21)" fg:x="11442" fg:w="267"/><text x="31.3898%" y="366.50"></text></g><g><title>__from_arrow__ (pandas/core/dtypes/dtypes.py:2347) (266 samples, 0.72%)</title><rect x="31.1425%" y="372" width="0.7239%" height="15" fill="rgb(213,211,35)" fg:x="11443" fg:w="266"/><text x="31.3925%" y="382.50"></text></g><g><title>cast (pyarrow/compute.py:412) (265 samples, 0.72%)</title><rect x="31.1452%" y="388" width="0.7212%" height="15" fill="rgb(209,83,10)" fg:x="11444" fg:w="265"/><text x="31.3952%" y="398.50"></text></g><g><title>table_to_dataframe (pyarrow/pandas_compat.py:823) (268 samples, 0.73%)</title><rect x="31.1398%" y="340" width="0.7294%" height="15" fill="rgb(209,164,1)" fg:x="11442" fg:w="268"/><text x="31.3898%" y="350.50"></text></g><g><title>from_pyarrow (nested_pandas/nestedframe/io.py:248) (328 samples, 0.89%)</title><rect x="30.9792%" y="324" width="0.8927%" height="15" fill="rgb(213,184,43)" fg:x="11383" fg:w="328"/><text x="31.2292%" y="334.50"></text></g><g><title>read_parquet (nested_pandas/nestedframe/io.py:160) (329 samples, 0.90%)</title><rect x="30.9792%" y="308" width="0.8954%" height="15" fill="rgb(231,61,34)" fg:x="11383" fg:w="329"/><text x="31.2292%" y="318.50"></text></g><g><title>__init__ (pyarrow/parquet/core.py:1374) (136 samples, 0.37%)</title><rect x="31.9916%" y="340" width="0.3701%" height="15" fill="rgb(235,75,3)" fg:x="11755" fg:w="136"/><text x="32.2416%" y="350.50"></text></g><g><title>_ensure_filesystem (pyarrow/fs.py:121) (136 samples, 0.37%)</title><rect x="31.9916%" y="356" width="0.3701%" height="15" fill="rgb(220,106,47)" fg:x="11755" fg:w="136"/><text x="32.2416%" y="366.50"></text></g><g><title>__init__ (pyarrow/parquet/core.py:1401) (93 samples, 0.25%)</title><rect x="32.3617%" y="340" width="0.2531%" height="15" fill="rgb(210,196,33)" fg:x="11891" fg:w="93"/><text x="32.6117%" y="350.50"></text></g><g><title>read_table (pyarrow/parquet/core.py:1861) (332 samples, 0.90%)</title><rect x="31.9671%" y="324" width="0.9035%" height="15" fill="rgb(229,154,42)" fg:x="11746" fg:w="332"/><text x="32.2171%" y="334.50"></text></g><g><title>__init__ (pyarrow/parquet/core.py:1424) (94 samples, 0.26%)</title><rect x="32.6148%" y="340" width="0.2558%" height="15" fill="rgb(228,114,26)" fg:x="11984" fg:w="94"/><text x="32.8648%" y="350.50"></text></g><g><title>dataset (pyarrow/dataset.py:790) (94 samples, 0.26%)</title><rect x="32.6148%" y="356" width="0.2558%" height="15" fill="rgb(208,144,1)" fg:x="11984" fg:w="94"/><text x="32.8648%" y="366.50"></text></g><g><title>_filesystem_dataset (pyarrow/dataset.py:482) (39 samples, 0.11%)</title><rect x="32.7645%" y="372" width="0.1061%" height="15" fill="rgb(239,112,37)" fg:x="12039" fg:w="39"/><text x="33.0145%" y="382.50"></text></g><g><title>read_parquet_file_to_pandas (hats/io/file_io/file_io.py:320) (831 samples, 2.26%)</title><rect x="30.9792%" y="292" width="2.2616%" height="15" fill="rgb(210,96,50)" fg:x="11383" fg:w="831"/><text x="31.2292%" y="302.50">r..</text></g><g><title>read_parquet (nested_pandas/nestedframe/io.py:99) (502 samples, 1.37%)</title><rect x="31.8746%" y="308" width="1.3662%" height="15" fill="rgb(222,178,2)" fg:x="11712" fg:w="502"/><text x="32.1246%" y="318.50"></text></g><g><title>read_table (pyarrow/parquet/core.py:1898) (136 samples, 0.37%)</title><rect x="32.8707%" y="324" width="0.3701%" height="15" fill="rgb(226,74,18)" fg:x="12078" fg:w="136"/><text x="33.1207%" y="334.50"></text></g><g><title>read (pyarrow/parquet/core.py:1538) (136 samples, 0.37%)</title><rect x="32.8707%" y="340" width="0.3701%" height="15" fill="rgb(225,67,54)" fg:x="12078" fg:w="136"/><text x="33.1207%" y="350.50"></text></g><g><title>_read_parquet_file (lsdb/loaders/hats/read_hats.py:395) (838 samples, 2.28%)</title><rect x="30.9792%" y="276" width="2.2806%" height="15" fill="rgb(251,92,32)" fg:x="11383" fg:w="838"/><text x="31.2292%" y="286.50">_..</text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:699) (50 samples, 0.14%)</title><rect x="33.5402%" y="388" width="0.1361%" height="15" fill="rgb(228,149,22)" fg:x="12324" fg:w="50"/><text x="33.7902%" y="398.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4891) (51 samples, 0.14%)</title><rect x="33.5402%" y="372" width="0.1388%" height="15" fill="rgb(243,54,13)" fg:x="12324" fg:w="51"/><text x="33.7902%" y="382.50"></text></g><g><title>drop (pandas/core/generic.py:4810) (115 samples, 0.31%)</title><rect x="33.4449%" y="356" width="0.3130%" height="15" fill="rgb(243,180,28)" fg:x="12289" fg:w="115"/><text x="33.6949%" y="366.50"></text></g><g><title>set_index (pandas/core/frame.py:6208) (117 samples, 0.32%)</title><rect x="33.4422%" y="292" width="0.3184%" height="15" fill="rgb(208,167,24)" fg:x="12288" fg:w="117"/><text x="33.6922%" y="302.50"></text></g><g><title>__delitem__ (nested_pandas/nestedframe/core.py:344) (117 samples, 0.32%)</title><rect x="33.4422%" y="308" width="0.3184%" height="15" fill="rgb(245,73,45)" fg:x="12288" fg:w="117"/><text x="33.6922%" y="318.50"></text></g><g><title>drop (nested_pandas/nestedframe/core.py:803) (117 samples, 0.32%)</title><rect x="33.4422%" y="324" width="0.3184%" height="15" fill="rgb(237,203,48)" fg:x="12288" fg:w="117"/><text x="33.6922%" y="334.50"></text></g><g><title>drop (pandas/core/frame.py:5603) (116 samples, 0.32%)</title><rect x="33.4449%" y="340" width="0.3157%" height="15" fill="rgb(211,197,16)" fg:x="12289" fg:w="116"/><text x="33.6949%" y="350.50"></text></g><g><title>to_numpy (pandas/core/arrays/arrow/array.py:1490) (233 samples, 0.63%)</title><rect x="33.7851%" y="340" width="0.6341%" height="15" fill="rgb(243,99,51)" fg:x="12414" fg:w="233"/><text x="34.0351%" y="350.50"></text></g><g><title>set_index (pandas/core/frame.py:6211) (243 samples, 0.66%)</title><rect x="33.7606%" y="292" width="0.6613%" height="15" fill="rgb(215,123,29)" fg:x="12405" fg:w="243"/><text x="34.0106%" y="302.50"></text></g><g><title>_cleanup (pandas/core/indexes/base.py:841) (243 samples, 0.66%)</title><rect x="33.7606%" y="308" width="0.6613%" height="15" fill="rgb(239,186,37)" fg:x="12405" fg:w="243"/><text x="34.0106%" y="318.50"></text></g><g><title>_engine (pandas/core/indexes/base.py:864) (236 samples, 0.64%)</title><rect x="33.7797%" y="324" width="0.6423%" height="15" fill="rgb(252,136,39)" fg:x="12412" fg:w="236"/><text x="34.0297%" y="334.50"></text></g><g><title>read_pixel (lsdb/loaders/hats/read_hats.py:371) (1,266 samples, 3.45%)</title><rect x="30.9792%" y="260" width="3.4455%" height="15" fill="rgb(223,213,32)" fg:x="11383" fg:w="1266"/><text x="31.2292%" y="270.50">rea..</text></g><g><title>_read_parquet_file (lsdb/loaders/hats/read_hats.py:398) (428 samples, 1.16%)</title><rect x="33.2599%" y="276" width="1.1648%" height="15" fill="rgb(233,115,5)" fg:x="12221" fg:w="428"/><text x="33.5099%" y="286.50"></text></g><g><title>execute_graph (dask/_task_spec.py:1027) (1,387 samples, 3.77%)</title><rect x="30.8404%" y="212" width="3.7748%" height="15" fill="rgb(207,226,44)" fg:x="11332" fg:w="1387"/><text x="31.0904%" y="222.50">exec..</text></g><g><title>__call__ (dask/_task_spec.py:754) (1,385 samples, 3.77%)</title><rect x="30.8459%" y="228" width="3.7693%" height="15" fill="rgb(208,126,0)" fg:x="11334" fg:w="1385"/><text x="31.0959%" y="238.50">__ca..</text></g><g><title>apply_and_enforce (dask/dataframe/core.py:98) (1,357 samples, 3.69%)</title><rect x="30.9221%" y="244" width="3.6931%" height="15" fill="rgb(244,66,21)" fg:x="11362" fg:w="1357"/><text x="31.1721%" y="254.50">appl..</text></g><g><title>search_points (lsdb/core/search/region_search.py:73) (64 samples, 0.17%)</title><rect x="34.4410%" y="260" width="0.1742%" height="15" fill="rgb(222,97,12)" fg:x="12655" fg:w="64"/><text x="34.6910%" y="270.50"></text></g><g><title>cone_filter (hats/search/region_search.py:73) (38 samples, 0.10%)</title><rect x="34.5118%" y="276" width="0.1034%" height="15" fill="rgb(219,213,19)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="286.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (38 samples, 0.10%)</title><rect x="34.5118%" y="292" width="0.1034%" height="15" fill="rgb(252,169,30)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="302.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (38 samples, 0.10%)</title><rect x="34.5118%" y="308" width="0.1034%" height="15" fill="rgb(206,32,51)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="318.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (38 samples, 0.10%)</title><rect x="34.5118%" y="324" width="0.1034%" height="15" fill="rgb(250,172,42)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="334.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (38 samples, 0.10%)</title><rect x="34.5118%" y="340" width="0.1034%" height="15" fill="rgb(209,34,43)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="350.50"></text></g><g><title>take (pandas/core/generic.py:4155) (38 samples, 0.10%)</title><rect x="34.5118%" y="356" width="0.1034%" height="15" fill="rgb(223,11,35)" fg:x="12681" fg:w="38"/><text x="34.7618%" y="366.50"></text></g><g><title>_execute_subgraph (dask/_task_spec.py:203) (1,420 samples, 3.86%)</title><rect x="30.7560%" y="196" width="3.8646%" height="15" fill="rgb(251,219,26)" fg:x="11301" fg:w="1420"/><text x="31.0060%" y="206.50">_exe..</text></g><g><title>_drop_axis (pandas/core/generic.py:4852) (39 samples, 0.11%)</title><rect x="34.6696%" y="292" width="0.1061%" height="15" fill="rgb(231,119,3)" fg:x="12739" fg:w="39"/><text x="34.9196%" y="302.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:807) (40 samples, 0.11%)</title><rect x="34.9145%" y="324" width="0.1089%" height="15" fill="rgb(216,97,11)" fg:x="12829" fg:w="40"/><text x="35.1645%" y="334.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (40 samples, 0.11%)</title><rect x="34.9145%" y="340" width="0.1089%" height="15" fill="rgb(223,59,9)" fg:x="12829" fg:w="40"/><text x="35.1645%" y="350.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:162) (40 samples, 0.11%)</title><rect x="34.9145%" y="356" width="0.1089%" height="15" fill="rgb(233,93,31)" fg:x="12829" fg:w="40"/><text x="35.1645%" y="366.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:699) (105 samples, 0.29%)</title><rect x="34.8492%" y="308" width="0.2858%" height="15" fill="rgb(239,81,33)" fg:x="12805" fg:w="105"/><text x="35.0992%" y="318.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4891) (109 samples, 0.30%)</title><rect x="34.8465%" y="292" width="0.2966%" height="15" fill="rgb(213,120,34)" fg:x="12804" fg:w="109"/><text x="35.0965%" y="302.50"></text></g><g><title>_cast_cols_to_nested (nested_pandas/nestedframe/core.py:67) (52 samples, 0.14%)</title><rect x="35.1949%" y="340" width="0.1415%" height="15" fill="rgb(243,49,53)" fg:x="12932" fg:w="52"/><text x="35.4449%" y="350.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4899) (73 samples, 0.20%)</title><rect x="35.1432%" y="292" width="0.1987%" height="15" fill="rgb(247,216,33)" fg:x="12913" fg:w="73"/><text x="35.3932%" y="302.50"></text></g><g><title>_constructor_from_mgr (pandas/core/frame.py:678) (68 samples, 0.19%)</title><rect x="35.1568%" y="308" width="0.1851%" height="15" fill="rgb(226,26,14)" fg:x="12918" fg:w="68"/><text x="35.4068%" y="318.50"></text></g><g><title>__init__ (nested_pandas/nestedframe/core.py:55) (54 samples, 0.15%)</title><rect x="35.1949%" y="324" width="0.1470%" height="15" fill="rgb(215,49,53)" fg:x="12932" fg:w="54"/><text x="35.4449%" y="334.50"></text></g><g><title>perform_align_and_apply_func (lsdb/dask/merge_catalog_functions.py:482) (261 samples, 0.71%)</title><rect x="34.6397%" y="212" width="0.7103%" height="15" fill="rgb(245,162,40)" fg:x="12728" fg:w="261"/><text x="34.8897%" y="222.50"></text></g><g><title>remove_hips_columns (lsdb/dask/merge_catalog_functions.py:206) (252 samples, 0.69%)</title><rect x="34.6642%" y="228" width="0.6858%" height="15" fill="rgb(229,68,17)" fg:x="12737" fg:w="252"/><text x="34.9142%" y="238.50"></text></g><g><title>drop (nested_pandas/nestedframe/core.py:815) (252 samples, 0.69%)</title><rect x="34.6642%" y="244" width="0.6858%" height="15" fill="rgb(213,182,10)" fg:x="12737" fg:w="252"/><text x="34.9142%" y="254.50"></text></g><g><title>drop (pandas/core/frame.py:5603) (252 samples, 0.69%)</title><rect x="34.6642%" y="260" width="0.6858%" height="15" fill="rgb(245,125,30)" fg:x="12737" fg:w="252"/><text x="34.9142%" y="270.50"></text></g><g><title>drop (pandas/core/generic.py:4810) (250 samples, 0.68%)</title><rect x="34.6696%" y="276" width="0.6804%" height="15" fill="rgb(232,202,2)" fg:x="12739" fg:w="250"/><text x="34.9196%" y="286.50"></text></g><g><title>take (pandas/core/generic.py:4155) (140 samples, 0.38%)</title><rect x="35.3854%" y="324" width="0.3810%" height="15" fill="rgb(237,140,51)" fg:x="13002" fg:w="140"/><text x="35.6354%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (112 samples, 0.30%)</title><rect x="35.4616%" y="340" width="0.3048%" height="15" fill="rgb(236,157,25)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (112 samples, 0.30%)</title><rect x="35.4616%" y="356" width="0.3048%" height="15" fill="rgb(219,209,0)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (112 samples, 0.30%)</title><rect x="35.4616%" y="372" width="0.3048%" height="15" fill="rgb(240,116,54)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (112 samples, 0.30%)</title><rect x="35.4616%" y="388" width="0.3048%" height="15" fill="rgb(216,10,36)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (112 samples, 0.30%)</title><rect x="35.4616%" y="404" width="0.3048%" height="15" fill="rgb(222,72,44)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (112 samples, 0.30%)</title><rect x="35.4616%" y="420" width="0.3048%" height="15" fill="rgb(232,159,9)" fg:x="13030" fg:w="112"/><text x="35.7116%" y="430.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (149 samples, 0.41%)</title><rect x="35.3636%" y="260" width="0.4055%" height="15" fill="rgb(210,39,32)" fg:x="12994" fg:w="149"/><text x="35.6136%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (149 samples, 0.41%)</title><rect x="35.3636%" y="276" width="0.4055%" height="15" fill="rgb(216,194,45)" fg:x="12994" fg:w="149"/><text x="35.6136%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (141 samples, 0.38%)</title><rect x="35.3854%" y="292" width="0.3837%" height="15" fill="rgb(218,18,35)" fg:x="13002" fg:w="141"/><text x="35.6354%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (141 samples, 0.38%)</title><rect x="35.3854%" y="308" width="0.3837%" height="15" fill="rgb(207,83,51)" fg:x="13002" fg:w="141"/><text x="35.6354%" y="318.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (82 samples, 0.22%)</title><rect x="35.8208%" y="276" width="0.2232%" height="15" fill="rgb(225,63,43)" fg:x="13162" fg:w="82"/><text x="36.0708%" y="286.50"></text></g><g><title>_cmp_method (pandas/core/indexes/base.py:7263) (82 samples, 0.22%)</title><rect x="35.8208%" y="292" width="0.2232%" height="15" fill="rgb(207,57,36)" fg:x="13162" fg:w="82"/><text x="36.0708%" y="302.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (82 samples, 0.22%)</title><rect x="35.8208%" y="308" width="0.2232%" height="15" fill="rgb(216,99,33)" fg:x="13162" fg:w="82"/><text x="36.0708%" y="318.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (82 samples, 0.22%)</title><rect x="35.8208%" y="324" width="0.2232%" height="15" fill="rgb(225,42,16)" fg:x="13162" fg:w="82"/><text x="36.0708%" y="334.50"></text></g><g><title>_cmp_method (pandas/core/arrays/arrow/array.py:744) (82 samples, 0.22%)</title><rect x="35.8208%" y="340" width="0.2232%" height="15" fill="rgb(220,201,45)" fg:x="13162" fg:w="82"/><text x="36.0708%" y="350.50"></text></g><g><title>wrapper (pyarrow/compute.py:252) (79 samples, 0.22%)</title><rect x="35.8290%" y="356" width="0.2150%" height="15" fill="rgb(225,33,4)" fg:x="13165" fg:w="79"/><text x="36.0790%" y="366.50"></text></g><g><title>perform_concat (lsdb/dask/concat_catalog_data.py:226) (286 samples, 0.78%)</title><rect x="35.3609%" y="228" width="0.7784%" height="15" fill="rgb(224,33,50)" fg:x="12993" fg:w="286"/><text x="35.6109%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_pixel (lsdb/dask/merge_catalog_functions.py:513) (285 samples, 0.78%)</title><rect x="35.3636%" y="244" width="0.7756%" height="15" fill="rgb(246,198,51)" fg:x="12994" fg:w="285"/><text x="35.6136%" y="254.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (135 samples, 0.37%)</title><rect x="35.7718%" y="260" width="0.3674%" height="15" fill="rgb(205,22,4)" fg:x="13144" fg:w="135"/><text x="36.0218%" y="270.50"></text></g><g><title>take (pandas/core/generic.py:4155) (121 samples, 0.33%)</title><rect x="36.1610%" y="324" width="0.3293%" height="15" fill="rgb(206,3,8)" fg:x="13287" fg:w="121"/><text x="36.4110%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (96 samples, 0.26%)</title><rect x="36.2290%" y="340" width="0.2613%" height="15" fill="rgb(251,23,15)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (96 samples, 0.26%)</title><rect x="36.2290%" y="356" width="0.2613%" height="15" fill="rgb(252,88,28)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (96 samples, 0.26%)</title><rect x="36.2290%" y="372" width="0.2613%" height="15" fill="rgb(212,127,14)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (96 samples, 0.26%)</title><rect x="36.2290%" y="388" width="0.2613%" height="15" fill="rgb(247,145,37)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (96 samples, 0.26%)</title><rect x="36.2290%" y="404" width="0.2613%" height="15" fill="rgb(209,117,53)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (96 samples, 0.26%)</title><rect x="36.2290%" y="420" width="0.2613%" height="15" fill="rgb(212,90,42)" fg:x="13312" fg:w="96"/><text x="36.4790%" y="430.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (130 samples, 0.35%)</title><rect x="36.1392%" y="260" width="0.3538%" height="15" fill="rgb(218,164,37)" fg:x="13279" fg:w="130"/><text x="36.3892%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (130 samples, 0.35%)</title><rect x="36.1392%" y="276" width="0.3538%" height="15" fill="rgb(246,65,34)" fg:x="13279" fg:w="130"/><text x="36.3892%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (122 samples, 0.33%)</title><rect x="36.1610%" y="292" width="0.3320%" height="15" fill="rgb(231,100,33)" fg:x="13287" fg:w="122"/><text x="36.4110%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (122 samples, 0.33%)</title><rect x="36.1610%" y="308" width="0.3320%" height="15" fill="rgb(228,126,14)" fg:x="13287" fg:w="122"/><text x="36.4110%" y="318.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (72 samples, 0.20%)</title><rect x="36.5393%" y="276" width="0.1960%" height="15" fill="rgb(215,173,21)" fg:x="13426" fg:w="72"/><text x="36.7893%" y="286.50"></text></g><g><title>_cmp_method (pandas/core/indexes/base.py:7263) (71 samples, 0.19%)</title><rect x="36.5420%" y="292" width="0.1932%" height="15" fill="rgb(210,6,40)" fg:x="13427" fg:w="71"/><text x="36.7920%" y="302.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (71 samples, 0.19%)</title><rect x="36.5420%" y="308" width="0.1932%" height="15" fill="rgb(212,48,18)" fg:x="13427" fg:w="71"/><text x="36.7920%" y="318.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (71 samples, 0.19%)</title><rect x="36.5420%" y="324" width="0.1932%" height="15" fill="rgb(230,214,11)" fg:x="13427" fg:w="71"/><text x="36.7920%" y="334.50"></text></g><g><title>_cmp_method (pandas/core/arrays/arrow/array.py:744) (71 samples, 0.19%)</title><rect x="36.5420%" y="340" width="0.1932%" height="15" fill="rgb(254,105,39)" fg:x="13427" fg:w="71"/><text x="36.7920%" y="350.50"></text></g><g><title>wrapper (pyarrow/compute.py:252) (66 samples, 0.18%)</title><rect x="36.5556%" y="356" width="0.1796%" height="15" fill="rgb(245,158,5)" fg:x="13432" fg:w="66"/><text x="36.8056%" y="366.50"></text></g><g><title>perform_concat (lsdb/dask/concat_catalog_data.py:231) (246 samples, 0.67%)</title><rect x="36.1392%" y="228" width="0.6695%" height="15" fill="rgb(249,208,11)" fg:x="13279" fg:w="246"/><text x="36.3892%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_pixel (lsdb/dask/merge_catalog_functions.py:513) (246 samples, 0.67%)</title><rect x="36.1392%" y="244" width="0.6695%" height="15" fill="rgb(210,39,28)" fg:x="13279" fg:w="246"/><text x="36.3892%" y="254.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (116 samples, 0.32%)</title><rect x="36.4930%" y="260" width="0.3157%" height="15" fill="rgb(211,56,53)" fg:x="13409" fg:w="116"/><text x="36.7430%" y="270.50"></text></g><g><title>_get_value (pandas/core/series.py:1249) (43 samples, 0.12%)</title><rect x="37.3040%" y="324" width="0.1170%" height="15" fill="rgb(226,201,30)" fg:x="13707" fg:w="43"/><text x="37.5540%" y="334.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1133) (81 samples, 0.22%)</title><rect x="37.2768%" y="308" width="0.2204%" height="15" fill="rgb(239,101,34)" fg:x="13697" fg:w="81"/><text x="37.5268%" y="318.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (193 samples, 0.53%)</title><rect x="37.5435%" y="324" width="0.5253%" height="15" fill="rgb(226,209,5)" fg:x="13795" fg:w="193"/><text x="37.7935%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (251 samples, 0.68%)</title><rect x="37.5136%" y="308" width="0.6831%" height="15" fill="rgb(250,105,47)" fg:x="13784" fg:w="251"/><text x="37.7636%" y="318.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:289) (47 samples, 0.13%)</title><rect x="38.0688%" y="324" width="0.1279%" height="15" fill="rgb(230,72,3)" fg:x="13988" fg:w="47"/><text x="38.3188%" y="334.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1656) (97 samples, 0.26%)</title><rect x="38.7628%" y="356" width="0.2640%" height="15" fill="rgb(232,218,39)" fg:x="14243" fg:w="97"/><text x="39.0128%" y="366.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1662) (61 samples, 0.17%)</title><rect x="39.0268%" y="356" width="0.1660%" height="15" fill="rgb(248,166,6)" fg:x="14340" fg:w="61"/><text x="39.2768%" y="366.50"></text></g><g><title>simplefilter (warnings.py:180) (42 samples, 0.11%)</title><rect x="39.0785%" y="372" width="0.1143%" height="15" fill="rgb(247,89,20)" fg:x="14359" fg:w="42"/><text x="39.3285%" y="382.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (238 samples, 0.65%)</title><rect x="38.6213%" y="340" width="0.6477%" height="15" fill="rgb(248,130,54)" fg:x="14191" fg:w="238"/><text x="38.8713%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (254 samples, 0.69%)</title><rect x="38.5913%" y="324" width="0.6913%" height="15" fill="rgb(234,196,4)" fg:x="14180" fg:w="254"/><text x="38.8413%" y="334.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:622) (41 samples, 0.11%)</title><rect x="39.6555%" y="340" width="0.1116%" height="15" fill="rgb(250,143,31)" fg:x="14571" fg:w="41"/><text x="39.9055%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (182 samples, 0.50%)</title><rect x="39.4051%" y="324" width="0.4953%" height="15" fill="rgb(211,110,34)" fg:x="14479" fg:w="182"/><text x="39.6551%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:589) (75 samples, 0.20%)</title><rect x="39.9004%" y="324" width="0.2041%" height="15" fill="rgb(215,124,48)" fg:x="14661" fg:w="75"/><text x="40.1504%" y="334.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1891) (67 samples, 0.18%)</title><rect x="40.3467%" y="340" width="0.1823%" height="15" fill="rgb(216,46,13)" fg:x="14825" fg:w="67"/><text x="40.5967%" y="350.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2801) (39 samples, 0.11%)</title><rect x="40.4229%" y="356" width="0.1061%" height="15" fill="rgb(205,184,25)" fg:x="14853" fg:w="39"/><text x="40.6729%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (168 samples, 0.46%)</title><rect x="40.1127%" y="324" width="0.4572%" height="15" fill="rgb(228,1,10)" fg:x="14739" fg:w="168"/><text x="40.3627%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (95 samples, 0.26%)</title><rect x="40.5781%" y="324" width="0.2585%" height="15" fill="rgb(213,116,27)" fg:x="14910" fg:w="95"/><text x="40.8281%" y="334.50"></text></g><g><title>__init__ (pandas/core/generic.py:286) (51 samples, 0.14%)</title><rect x="40.6978%" y="340" width="0.1388%" height="15" fill="rgb(241,95,50)" fg:x="14954" fg:w="51"/><text x="40.9478%" y="350.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6334) (69 samples, 0.19%)</title><rect x="40.8420%" y="340" width="0.1878%" height="15" fill="rgb(238,48,32)" fg:x="15007" fg:w="69"/><text x="41.0920%" y="350.50"></text></g><g><title>name (pandas/core/series.py:785) (55 samples, 0.15%)</title><rect x="40.8801%" y="356" width="0.1497%" height="15" fill="rgb(235,113,49)" fg:x="15021" fg:w="55"/><text x="41.1301%" y="366.50"></text></g><g><title>name (pandas/core/series.py:787) (88 samples, 0.24%)</title><rect x="41.1006%" y="356" width="0.2395%" height="15" fill="rgb(205,127,43)" fg:x="15102" fg:w="88"/><text x="41.3506%" y="366.50"></text></g><g><title>name (pandas/core/series.py:789) (44 samples, 0.12%)</title><rect x="41.3401%" y="356" width="0.1197%" height="15" fill="rgb(250,162,2)" fg:x="15190" fg:w="44"/><text x="41.5901%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (238 samples, 0.65%)</title><rect x="40.8366%" y="324" width="0.6477%" height="15" fill="rgb(220,13,41)" fg:x="15005" fg:w="238"/><text x="41.0866%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6342) (153 samples, 0.42%)</title><rect x="41.0679%" y="340" width="0.4164%" height="15" fill="rgb(249,221,25)" fg:x="15090" fg:w="153"/><text x="41.3179%" y="350.50"></text></g><g><title>_set_axis (pandas/core/generic.py:817) (37 samples, 0.10%)</title><rect x="41.5115%" y="340" width="0.1007%" height="15" fill="rgb(215,208,19)" fg:x="15253" fg:w="37"/><text x="41.7615%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:597) (57 samples, 0.16%)</title><rect x="41.4843%" y="324" width="0.1551%" height="15" fill="rgb(236,175,2)" fg:x="15243" fg:w="57"/><text x="41.7343%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (1,757 samples, 4.78%)</title><rect x="36.8931%" y="276" width="4.7817%" height="15" fill="rgb(241,52,2)" fg:x="13556" fg:w="1757"/><text x="37.1431%" y="286.50">_getit..</text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (1,740 samples, 4.74%)</title><rect x="36.9394%" y="292" width="4.7355%" height="15" fill="rgb(248,140,14)" fg:x="13573" fg:w="1740"/><text x="37.1894%" y="302.50">nested..</text></g><g><title>dtypes (pandas/core/generic.py:6483) (1,278 samples, 3.48%)</title><rect x="38.1967%" y="308" width="3.4781%" height="15" fill="rgb(253,22,42)" fg:x="14035" fg:w="1278"/><text x="38.4467%" y="318.50">dty..</text></g><g><title>__init__ (pandas/core/series.py:534) (44 samples, 0.12%)</title><rect x="41.8898%" y="372" width="0.1197%" height="15" fill="rgb(234,61,47)" fg:x="15392" fg:w="44"/><text x="42.1398%" y="382.50"></text></g><g><title>copy (pandas/core/internals/managers.py:612) (41 samples, 0.11%)</title><rect x="41.8980%" y="388" width="0.1116%" height="15" fill="rgb(208,226,15)" fg:x="15395" fg:w="41"/><text x="42.1480%" y="398.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4627) (104 samples, 0.28%)</title><rect x="41.8191%" y="340" width="0.2830%" height="15" fill="rgb(217,221,4)" fg:x="15366" fg:w="104"/><text x="42.0691%" y="350.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:693) (94 samples, 0.26%)</title><rect x="41.8463%" y="356" width="0.2558%" height="15" fill="rgb(212,174,34)" fg:x="15376" fg:w="94"/><text x="42.0963%" y="366.50"></text></g><g><title>_ixs (pandas/core/frame.py:4022) (114 samples, 0.31%)</title><rect x="41.8136%" y="324" width="0.3103%" height="15" fill="rgb(253,83,4)" fg:x="15364" fg:w="114"/><text x="42.0636%" y="334.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (147 samples, 0.40%)</title><rect x="41.7401%" y="308" width="0.4001%" height="15" fill="rgb(250,195,49)" fg:x="15337" fg:w="147"/><text x="41.9901%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (1,931 samples, 5.26%)</title><rect x="36.8904%" y="260" width="5.2553%" height="15" fill="rgb(241,192,25)" fg:x="13555" fg:w="1931"/><text x="37.1404%" y="270.50">__geti..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (166 samples, 0.45%)</title><rect x="41.6939%" y="276" width="0.4518%" height="15" fill="rgb(208,124,10)" fg:x="15320" fg:w="166"/><text x="41.9439%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (152 samples, 0.41%)</title><rect x="41.7320%" y="292" width="0.4137%" height="15" fill="rgb(222,33,0)" fg:x="15334" fg:w="152"/><text x="41.9820%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (1,943 samples, 5.29%)</title><rect x="36.8822%" y="244" width="5.2879%" height="15" fill="rgb(234,209,28)" fg:x="13552" fg:w="1943"/><text x="37.1322%" y="254.50">_reind..</text></g><g><title>dtypes (pandas/core/generic.py:6482) (40 samples, 0.11%)</title><rect x="42.3008%" y="308" width="0.1089%" height="15" fill="rgb(224,11,23)" fg:x="15543" fg:w="40"/><text x="42.5508%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (37 samples, 0.10%)</title><rect x="42.4722%" y="324" width="0.1007%" height="15" fill="rgb(232,99,1)" fg:x="15606" fg:w="37"/><text x="42.7222%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (290 samples, 0.79%)</title><rect x="42.1729%" y="276" width="0.7892%" height="15" fill="rgb(237,95,45)" fg:x="15496" fg:w="290"/><text x="42.4229%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (287 samples, 0.78%)</title><rect x="42.1810%" y="292" width="0.7811%" height="15" fill="rgb(208,109,11)" fg:x="15499" fg:w="287"/><text x="42.4310%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (203 samples, 0.55%)</title><rect x="42.4096%" y="308" width="0.5525%" height="15" fill="rgb(216,190,48)" fg:x="15583" fg:w="203"/><text x="42.6596%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (306 samples, 0.83%)</title><rect x="42.1729%" y="260" width="0.8328%" height="15" fill="rgb(251,171,36)" fg:x="15496" fg:w="306"/><text x="42.4229%" y="270.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (949 samples, 2.58%)</title><rect x="43.1064%" y="388" width="2.5827%" height="15" fill="rgb(230,62,22)" fg:x="15839" fg:w="949"/><text x="43.3564%" y="398.50">_b..</text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (951 samples, 2.59%)</title><rect x="43.1036%" y="372" width="2.5882%" height="15" fill="rgb(225,114,35)" fg:x="15838" fg:w="951"/><text x="43.3536%" y="382.50">_f..</text></g><g><title>astype (pandas/core/internals/blocks.py:784) (1,013 samples, 2.76%)</title><rect x="43.0873%" y="308" width="2.7569%" height="15" fill="rgb(215,118,42)" fg:x="15832" fg:w="1013"/><text x="43.3373%" y="318.50">as..</text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (1,011 samples, 2.75%)</title><rect x="43.0927%" y="324" width="2.7515%" height="15" fill="rgb(243,119,21)" fg:x="15834" fg:w="1011"/><text x="43.3427%" y="334.50">as..</text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (1,007 samples, 2.74%)</title><rect x="43.1036%" y="340" width="2.7406%" height="15" fill="rgb(252,177,53)" fg:x="15838" fg:w="1007"/><text x="43.3536%" y="350.50">as..</text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (1,007 samples, 2.74%)</title><rect x="43.1036%" y="356" width="2.7406%" height="15" fill="rgb(237,209,29)" fg:x="15838" fg:w="1007"/><text x="43.3536%" y="366.50">_a..</text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:314) (56 samples, 0.15%)</title><rect x="45.6918%" y="372" width="0.1524%" height="15" fill="rgb(212,65,23)" fg:x="16789" fg:w="56"/><text x="45.9418%" y="382.50"></text></g><g><title>__init__ (pandas/core/arrays/arrow/array.py:298) (56 samples, 0.15%)</title><rect x="45.6918%" y="388" width="0.1524%" height="15" fill="rgb(230,222,46)" fg:x="16789" fg:w="56"/><text x="45.9418%" y="398.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (1,022 samples, 2.78%)</title><rect x="43.0873%" y="260" width="2.7814%" height="15" fill="rgb(215,135,32)" fg:x="15832" fg:w="1022"/><text x="43.3373%" y="270.50">as..</text></g><g><title>astype (pandas/core/internals/managers.py:449) (1,022 samples, 2.78%)</title><rect x="43.0873%" y="276" width="2.7814%" height="15" fill="rgb(246,101,22)" fg:x="15832" fg:w="1022"/><text x="43.3373%" y="286.50">as..</text></g><g><title>apply (pandas/core/internals/managers.py:363) (1,022 samples, 2.78%)</title><rect x="43.0873%" y="292" width="2.7814%" height="15" fill="rgb(206,107,13)" fg:x="15832" fg:w="1022"/><text x="43.3373%" y="302.50">ap..</text></g><g><title>perform_concat (lsdb/dask/concat_catalog_data.py:245) (3,331 samples, 9.07%)</title><rect x="36.8087%" y="228" width="9.0654%" height="15" fill="rgb(250,100,44)" fg:x="13525" fg:w="3331"/><text x="37.0587%" y="238.50">perform_conca..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (1,361 samples, 3.70%)</title><rect x="42.1702%" y="244" width="3.7040%" height="15" fill="rgb(231,147,38)" fg:x="15495" fg:w="1361"/><text x="42.4202%" y="254.50">_rei..</text></g><g><title>_get_value (pandas/core/series.py:1249) (54 samples, 0.15%)</title><rect x="46.3559%" y="324" width="0.1470%" height="15" fill="rgb(229,8,40)" fg:x="17033" fg:w="54"/><text x="46.6059%" y="334.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1133) (93 samples, 0.25%)</title><rect x="46.3259%" y="308" width="0.2531%" height="15" fill="rgb(221,135,30)" fg:x="17022" fg:w="93"/><text x="46.5759%" y="318.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (221 samples, 0.60%)</title><rect x="46.6335%" y="324" width="0.6015%" height="15" fill="rgb(249,193,18)" fg:x="17135" fg:w="221"/><text x="46.8835%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (280 samples, 0.76%)</title><rect x="46.5981%" y="308" width="0.7620%" height="15" fill="rgb(209,133,39)" fg:x="17122" fg:w="280"/><text x="46.8481%" y="318.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:289) (46 samples, 0.13%)</title><rect x="47.2349%" y="324" width="0.1252%" height="15" fill="rgb(232,100,14)" fg:x="17356" fg:w="46"/><text x="47.4849%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:490) (40 samples, 0.11%)</title><rect x="47.5778%" y="324" width="0.1089%" height="15" fill="rgb(224,185,1)" fg:x="17482" fg:w="40"/><text x="47.8278%" y="334.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1656) (108 samples, 0.29%)</title><rect x="47.8228%" y="356" width="0.2939%" height="15" fill="rgb(223,139,8)" fg:x="17572" fg:w="108"/><text x="48.0728%" y="366.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1662) (77 samples, 0.21%)</title><rect x="48.1167%" y="356" width="0.2096%" height="15" fill="rgb(232,213,38)" fg:x="17680" fg:w="77"/><text x="48.3667%" y="366.50"></text></g><g><title>simplefilter (warnings.py:180) (59 samples, 0.16%)</title><rect x="48.1657%" y="372" width="0.1606%" height="15" fill="rgb(207,94,22)" fg:x="17698" fg:w="59"/><text x="48.4157%" y="382.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (242 samples, 0.66%)</title><rect x="47.7384%" y="340" width="0.6586%" height="15" fill="rgb(219,183,54)" fg:x="17541" fg:w="242"/><text x="47.9884%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (258 samples, 0.70%)</title><rect x="47.7112%" y="324" width="0.7022%" height="15" fill="rgb(216,185,54)" fg:x="17531" fg:w="258"/><text x="47.9612%" y="334.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:622) (59 samples, 0.16%)</title><rect x="48.7808%" y="340" width="0.1606%" height="15" fill="rgb(254,217,39)" fg:x="17924" fg:w="59"/><text x="49.0308%" y="350.50"></text></g><g><title>_try_cast (pandas/core/construction.py:792) (39 samples, 0.11%)</title><rect x="48.8352%" y="356" width="0.1061%" height="15" fill="rgb(240,178,23)" fg:x="17944" fg:w="39"/><text x="49.0852%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (203 samples, 0.55%)</title><rect x="48.5195%" y="324" width="0.5525%" height="15" fill="rgb(218,11,47)" fg:x="17828" fg:w="203"/><text x="48.7695%" y="334.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (46 samples, 0.13%)</title><rect x="49.1672%" y="340" width="0.1252%" height="15" fill="rgb(218,51,51)" fg:x="18066" fg:w="46"/><text x="49.4172%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:589) (84 samples, 0.23%)</title><rect x="49.0720%" y="324" width="0.2286%" height="15" fill="rgb(238,126,27)" fg:x="18031" fg:w="84"/><text x="49.3220%" y="334.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1889) (39 samples, 0.11%)</title><rect x="49.3496%" y="340" width="0.1061%" height="15" fill="rgb(249,202,22)" fg:x="18133" fg:w="39"/><text x="49.5996%" y="350.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1891) (61 samples, 0.17%)</title><rect x="49.5265%" y="340" width="0.1660%" height="15" fill="rgb(254,195,49)" fg:x="18198" fg:w="61"/><text x="49.7765%" y="350.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2801) (37 samples, 0.10%)</title><rect x="49.5918%" y="356" width="0.1007%" height="15" fill="rgb(208,123,14)" fg:x="18222" fg:w="37"/><text x="49.8418%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (155 samples, 0.42%)</title><rect x="49.3115%" y="324" width="0.4218%" height="15" fill="rgb(224,200,8)" fg:x="18119" fg:w="155"/><text x="49.5615%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (83 samples, 0.23%)</title><rect x="49.7387%" y="324" width="0.2259%" height="15" fill="rgb(217,61,36)" fg:x="18276" fg:w="83"/><text x="49.9887%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6334) (53 samples, 0.14%)</title><rect x="49.9946%" y="340" width="0.1442%" height="15" fill="rgb(206,35,45)" fg:x="18370" fg:w="53"/><text x="50.2446%" y="350.50"></text></g><g><title>name (pandas/core/series.py:789) (42 samples, 0.11%)</title><rect x="50.2912%" y="356" width="0.1143%" height="15" fill="rgb(217,65,33)" fg:x="18479" fg:w="42"/><text x="50.5412%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (171 samples, 0.47%)</title><rect x="49.9646%" y="324" width="0.4654%" height="15" fill="rgb(222,158,48)" fg:x="18359" fg:w="171"/><text x="50.2146%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6342) (88 samples, 0.24%)</title><rect x="50.1905%" y="340" width="0.2395%" height="15" fill="rgb(254,2,54)" fg:x="18442" fg:w="88"/><text x="50.4405%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:597) (48 samples, 0.13%)</title><rect x="50.4300%" y="324" width="0.1306%" height="15" fill="rgb(250,143,38)" fg:x="18530" fg:w="48"/><text x="50.6800%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (1,704 samples, 4.64%)</title><rect x="45.9585%" y="276" width="4.6375%" height="15" fill="rgb(248,25,0)" fg:x="16887" fg:w="1704"/><text x="46.2085%" y="286.50">_geti..</text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (1,690 samples, 4.60%)</title><rect x="45.9966%" y="292" width="4.5994%" height="15" fill="rgb(206,152,27)" fg:x="16901" fg:w="1690"/><text x="46.2466%" y="302.50">neste..</text></g><g><title>dtypes (pandas/core/generic.py:6483) (1,189 samples, 3.24%)</title><rect x="47.3601%" y="308" width="3.2359%" height="15" fill="rgb(240,77,30)" fg:x="17402" fg:w="1189"/><text x="47.6101%" y="318.50">dty..</text></g><g><title>_box_col_values (pandas/core/frame.py:4627) (79 samples, 0.22%)</title><rect x="50.7403%" y="340" width="0.2150%" height="15" fill="rgb(231,5,3)" fg:x="18644" fg:w="79"/><text x="50.9903%" y="350.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:693) (68 samples, 0.19%)</title><rect x="50.7702%" y="356" width="0.1851%" height="15" fill="rgb(207,226,32)" fg:x="18655" fg:w="68"/><text x="51.0202%" y="366.50"></text></g><g><title>_ixs (pandas/core/frame.py:4022) (90 samples, 0.24%)</title><rect x="50.7294%" y="324" width="0.2449%" height="15" fill="rgb(222,207,47)" fg:x="18640" fg:w="90"/><text x="50.9794%" y="334.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (116 samples, 0.32%)</title><rect x="50.6668%" y="308" width="0.3157%" height="15" fill="rgb(229,115,45)" fg:x="18617" fg:w="116"/><text x="50.9168%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (1,849 samples, 5.03%)</title><rect x="45.9585%" y="260" width="5.0321%" height="15" fill="rgb(224,191,6)" fg:x="16887" fg:w="1849"/><text x="46.2085%" y="270.50">__geti..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (138 samples, 0.38%)</title><rect x="50.6151%" y="276" width="0.3756%" height="15" fill="rgb(230,227,24)" fg:x="18598" fg:w="138"/><text x="50.8651%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (126 samples, 0.34%)</title><rect x="50.6477%" y="292" width="0.3429%" height="15" fill="rgb(228,80,19)" fg:x="18610" fg:w="126"/><text x="50.8977%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (1,866 samples, 5.08%)</title><rect x="45.9422%" y="244" width="5.0784%" height="15" fill="rgb(247,229,0)" fg:x="16881" fg:w="1866"/><text x="46.1922%" y="254.50">_reind..</text></g><g><title>__init__ (pandas/core/series.py:496) (43 samples, 0.12%)</title><rect x="51.2410%" y="324" width="0.1170%" height="15" fill="rgb(237,194,15)" fg:x="18828" fg:w="43"/><text x="51.4910%" y="334.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (41 samples, 0.11%)</title><rect x="51.2465%" y="340" width="0.1116%" height="15" fill="rgb(219,203,20)" fg:x="18830" fg:w="41"/><text x="51.4965%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (37 samples, 0.10%)</title><rect x="51.5948%" y="324" width="0.1007%" height="15" fill="rgb(234,128,8)" fg:x="18958" fg:w="37"/><text x="51.8448%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (254 samples, 0.69%)</title><rect x="51.0206%" y="276" width="0.6913%" height="15" fill="rgb(248,202,8)" fg:x="18747" fg:w="254"/><text x="51.2706%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (252 samples, 0.69%)</title><rect x="51.0260%" y="292" width="0.6858%" height="15" fill="rgb(206,104,37)" fg:x="18749" fg:w="252"/><text x="51.2760%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (189 samples, 0.51%)</title><rect x="51.1975%" y="308" width="0.5144%" height="15" fill="rgb(223,8,27)" fg:x="18812" fg:w="189"/><text x="51.4475%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (273 samples, 0.74%)</title><rect x="51.0206%" y="260" width="0.7430%" height="15" fill="rgb(216,217,28)" fg:x="18747" fg:w="273"/><text x="51.2706%" y="270.50"></text></g><g><title>__setitem__ (nested_pandas/nestedframe/core.py:339) (47 samples, 0.13%)</title><rect x="51.7636%" y="260" width="0.1279%" height="15" fill="rgb(249,199,1)" fg:x="19020" fg:w="47"/><text x="52.0136%" y="270.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:4322) (47 samples, 0.13%)</title><rect x="51.7636%" y="276" width="0.1279%" height="15" fill="rgb(240,85,17)" fg:x="19020" fg:w="47"/><text x="52.0136%" y="286.50"></text></g><g><title>_set_item (pandas/core/frame.py:4549) (46 samples, 0.13%)</title><rect x="51.7663%" y="292" width="0.1252%" height="15" fill="rgb(206,108,45)" fg:x="19021" fg:w="46"/><text x="52.0163%" y="302.50"></text></g><g><title>_set_item_mgr (pandas/core/frame.py:4501) (46 samples, 0.13%)</title><rect x="51.7663%" y="308" width="0.1252%" height="15" fill="rgb(245,210,41)" fg:x="19021" fg:w="46"/><text x="52.0163%" y="318.50"></text></g><g><title>_iset_item_mgr (pandas/core/frame.py:4489) (46 samples, 0.13%)</title><rect x="51.7663%" y="324" width="0.1252%" height="15" fill="rgb(206,13,37)" fg:x="19021" fg:w="46"/><text x="52.0163%" y="334.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (854 samples, 2.32%)</title><rect x="51.9486%" y="372" width="2.3242%" height="15" fill="rgb(250,61,18)" fg:x="19088" fg:w="854"/><text x="52.1986%" y="382.50">_..</text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (853 samples, 2.32%)</title><rect x="51.9513%" y="388" width="2.3215%" height="15" fill="rgb(235,172,48)" fg:x="19089" fg:w="853"/><text x="52.2013%" y="398.50">_..</text></g><g><title>astype (pandas/core/internals/blocks.py:784) (920 samples, 2.50%)</title><rect x="51.9296%" y="308" width="2.5038%" height="15" fill="rgb(249,201,17)" fg:x="19081" fg:w="920"/><text x="52.1796%" y="318.50">as..</text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (920 samples, 2.50%)</title><rect x="51.9296%" y="324" width="2.5038%" height="15" fill="rgb(219,208,6)" fg:x="19081" fg:w="920"/><text x="52.1796%" y="334.50">as..</text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (914 samples, 2.49%)</title><rect x="51.9459%" y="340" width="2.4875%" height="15" fill="rgb(248,31,23)" fg:x="19087" fg:w="914"/><text x="52.1959%" y="350.50">as..</text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (914 samples, 2.49%)</title><rect x="51.9459%" y="356" width="2.4875%" height="15" fill="rgb(245,15,42)" fg:x="19087" fg:w="914"/><text x="52.1959%" y="366.50">_a..</text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:314) (59 samples, 0.16%)</title><rect x="54.2728%" y="372" width="0.1606%" height="15" fill="rgb(222,217,39)" fg:x="19942" fg:w="59"/><text x="54.5228%" y="382.50"></text></g><g><title>__init__ (pandas/core/arrays/arrow/array.py:298) (59 samples, 0.16%)</title><rect x="54.2728%" y="388" width="0.1606%" height="15" fill="rgb(210,219,27)" fg:x="19942" fg:w="59"/><text x="54.5228%" y="398.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (924 samples, 2.51%)</title><rect x="51.9268%" y="260" width="2.5147%" height="15" fill="rgb(252,166,36)" fg:x="19080" fg:w="924"/><text x="52.1768%" y="270.50">as..</text></g><g><title>astype (pandas/core/internals/managers.py:449) (924 samples, 2.51%)</title><rect x="51.9268%" y="276" width="2.5147%" height="15" fill="rgb(245,132,34)" fg:x="19080" fg:w="924"/><text x="52.1768%" y="286.50">as..</text></g><g><title>apply (pandas/core/internals/managers.py:363) (923 samples, 2.51%)</title><rect x="51.9296%" y="292" width="2.5120%" height="15" fill="rgb(236,54,3)" fg:x="19081" fg:w="923"/><text x="52.1796%" y="302.50">ap..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (1,258 samples, 3.42%)</title><rect x="51.0206%" y="244" width="3.4237%" height="15" fill="rgb(241,173,43)" fg:x="18747" fg:w="1258"/><text x="51.2706%" y="254.50">_re..</text></g><g><title>perform_concat (lsdb/dask/concat_catalog_data.py:246) (3,150 samples, 8.57%)</title><rect x="45.8742%" y="228" width="8.5728%" height="15" fill="rgb(215,190,9)" fg:x="16856" fg:w="3150"/><text x="46.1242%" y="238.50">perform_conc..</text></g><g><title>reduce (pandas/core/internals/managers.py:1519) (41 samples, 0.11%)</title><rect x="54.4960%" y="324" width="0.1116%" height="15" fill="rgb(242,101,16)" fg:x="20024" fg:w="41"/><text x="54.7460%" y="334.50"></text></g><g><title>_reduce (pandas/core/frame.py:11589) (61 samples, 0.17%)</title><rect x="54.4960%" y="308" width="0.1660%" height="15" fill="rgb(223,190,21)" fg:x="20024" fg:w="61"/><text x="54.7460%" y="318.50"></text></g><g><title>_reduce (pandas/core/frame.py:11590) (37 samples, 0.10%)</title><rect x="54.6620%" y="308" width="0.1007%" height="15" fill="rgb(215,228,25)" fg:x="20085" fg:w="37"/><text x="54.9120%" y="318.50"></text></g><g><title>any (pandas/core/frame.py:11640) (131 samples, 0.36%)</title><rect x="54.4905%" y="276" width="0.3565%" height="15" fill="rgb(225,36,22)" fg:x="20022" fg:w="131"/><text x="54.7405%" y="286.50"></text></g><g><title>_logical_func (pandas/core/generic.py:12273) (130 samples, 0.35%)</title><rect x="54.4933%" y="292" width="0.3538%" height="15" fill="rgb(251,106,46)" fg:x="20023" fg:w="130"/><text x="54.7433%" y="302.50"></text></g><g><title>apply (pandas/core/internals/blocks.py:395) (53 samples, 0.14%)</title><rect x="54.8824%" y="324" width="0.1442%" height="15" fill="rgb(208,90,1)" fg:x="20166" fg:w="53"/><text x="55.1324%" y="334.50"></text></g><g><title>__invert__ (pandas/core/generic.py:1574) (58 samples, 0.16%)</title><rect x="54.8797%" y="292" width="0.1578%" height="15" fill="rgb(243,10,4)" fg:x="20165" fg:w="58"/><text x="55.1297%" y="302.50"></text></g><g><title>apply (pandas/core/internals/managers.py:361) (57 samples, 0.16%)</title><rect x="54.8824%" y="308" width="0.1551%" height="15" fill="rgb(212,137,27)" fg:x="20166" fg:w="57"/><text x="55.1324%" y="318.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:175) (273 samples, 0.74%)</title><rect x="54.4742%" y="244" width="0.7430%" height="15" fill="rgb(231,220,49)" fg:x="20016" fg:w="273"/><text x="54.7242%" y="254.50"></text></g><g><title>_is_all_na (lsdb/dask/concat_catalog_data.py:149) (269 samples, 0.73%)</title><rect x="54.4851%" y="260" width="0.7321%" height="15" fill="rgb(237,96,20)" fg:x="20020" fg:w="269"/><text x="54.7351%" y="270.50"></text></g><g><title>notna (pandas/core/frame.py:6525) (129 samples, 0.35%)</title><rect x="54.8661%" y="276" width="0.3511%" height="15" fill="rgb(239,229,30)" fg:x="20160" fg:w="129"/><text x="55.1161%" y="286.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (196 samples, 0.53%)</title><rect x="55.2444%" y="292" width="0.5334%" height="15" fill="rgb(219,65,33)" fg:x="20299" fg:w="196"/><text x="55.4944%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (195 samples, 0.53%)</title><rect x="55.2471%" y="308" width="0.5307%" height="15" fill="rgb(243,134,7)" fg:x="20300" fg:w="195"/><text x="55.4971%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (137 samples, 0.37%)</title><rect x="55.4050%" y="324" width="0.3728%" height="15" fill="rgb(216,177,54)" fg:x="20358" fg:w="137"/><text x="55.6550%" y="334.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (218 samples, 0.59%)</title><rect x="55.2417%" y="260" width="0.5933%" height="15" fill="rgb(211,160,20)" fg:x="20298" fg:w="218"/><text x="55.4917%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (217 samples, 0.59%)</title><rect x="55.2444%" y="276" width="0.5906%" height="15" fill="rgb(239,85,39)" fg:x="20299" fg:w="217"/><text x="55.4944%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (229 samples, 0.62%)</title><rect x="55.2172%" y="244" width="0.6232%" height="15" fill="rgb(232,125,22)" fg:x="20289" fg:w="229"/><text x="55.4672%" y="254.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (61 samples, 0.17%)</title><rect x="55.8431%" y="292" width="0.1660%" height="15" fill="rgb(244,57,34)" fg:x="20519" fg:w="61"/><text x="56.0931%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (61 samples, 0.17%)</title><rect x="55.8431%" y="308" width="0.1660%" height="15" fill="rgb(214,203,32)" fg:x="20519" fg:w="61"/><text x="56.0931%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (49 samples, 0.13%)</title><rect x="55.8758%" y="324" width="0.1334%" height="15" fill="rgb(207,58,43)" fg:x="20531" fg:w="49"/><text x="56.1258%" y="334.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (71 samples, 0.19%)</title><rect x="55.8404%" y="244" width="0.1932%" height="15" fill="rgb(215,193,15)" fg:x="20518" fg:w="71"/><text x="56.0904%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (70 samples, 0.19%)</title><rect x="55.8431%" y="260" width="0.1905%" height="15" fill="rgb(232,15,44)" fg:x="20519" fg:w="70"/><text x="56.0931%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (70 samples, 0.19%)</title><rect x="55.8431%" y="276" width="0.1905%" height="15" fill="rgb(212,3,48)" fg:x="20519" fg:w="70"/><text x="56.0931%" y="286.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:127) (45 samples, 0.12%)</title><rect x="56.0336%" y="260" width="0.1225%" height="15" fill="rgb(218,128,7)" fg:x="20589" fg:w="45"/><text x="56.2836%" y="270.50"></text></g><g><title>reindex (pandas/core/frame.py:5400) (45 samples, 0.12%)</title><rect x="56.0336%" y="276" width="0.1225%" height="15" fill="rgb(226,216,39)" fg:x="20589" fg:w="45"/><text x="56.2836%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1249) (62 samples, 0.17%)</title><rect x="56.9154%" y="340" width="0.1687%" height="15" fill="rgb(243,47,51)" fg:x="20913" fg:w="62"/><text x="57.1654%" y="350.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3812) (43 samples, 0.12%)</title><rect x="56.9671%" y="356" width="0.1170%" height="15" fill="rgb(241,183,40)" fg:x="20932" fg:w="43"/><text x="57.2171%" y="366.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1133) (123 samples, 0.33%)</title><rect x="56.8882%" y="324" width="0.3347%" height="15" fill="rgb(231,217,32)" fg:x="20903" fg:w="123"/><text x="57.1382%" y="334.50"></text></g><g><title>_get_value (pandas/core/series.py:1252) (42 samples, 0.11%)</title><rect x="57.1086%" y="340" width="0.1143%" height="15" fill="rgb(229,61,38)" fg:x="20984" fg:w="42"/><text x="57.3586%" y="350.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (393 samples, 1.07%)</title><rect x="57.3264%" y="340" width="1.0696%" height="15" fill="rgb(225,210,5)" fg:x="21064" fg:w="393"/><text x="57.5764%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (501 samples, 1.36%)</title><rect x="57.2474%" y="324" width="1.3635%" height="15" fill="rgb(231,79,45)" fg:x="21035" fg:w="501"/><text x="57.4974%" y="334.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:289) (79 samples, 0.22%)</title><rect x="58.3959%" y="340" width="0.2150%" height="15" fill="rgb(224,100,7)" fg:x="21457" fg:w="79"/><text x="58.6459%" y="350.50"></text></g><g><title>maybe_extract_name (pandas/core/indexes/base.py:7758) (43 samples, 0.12%)</title><rect x="59.1389%" y="356" width="0.1170%" height="15" fill="rgb(241,198,18)" fg:x="21730" fg:w="43"/><text x="59.3889%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:490) (87 samples, 0.24%)</title><rect x="59.0736%" y="340" width="0.2368%" height="15" fill="rgb(252,97,53)" fg:x="21706" fg:w="87"/><text x="59.3236%" y="350.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1640) (44 samples, 0.12%)</title><rect x="59.4818%" y="372" width="0.1197%" height="15" fill="rgb(220,88,7)" fg:x="21856" fg:w="44"/><text x="59.7318%" y="382.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1656) (177 samples, 0.48%)</title><rect x="59.6097%" y="372" width="0.4817%" height="15" fill="rgb(213,176,14)" fg:x="21903" fg:w="177"/><text x="59.8597%" y="382.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1662) (123 samples, 0.33%)</title><rect x="60.0914%" y="372" width="0.3347%" height="15" fill="rgb(246,73,7)" fg:x="22080" fg:w="123"/><text x="60.3414%" y="382.50"></text></g><g><title>simplefilter (warnings.py:180) (81 samples, 0.22%)</title><rect x="60.2057%" y="388" width="0.2204%" height="15" fill="rgb(245,64,36)" fg:x="22122" fg:w="81"/><text x="60.4557%" y="398.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (425 samples, 1.16%)</title><rect x="59.4083%" y="356" width="1.1567%" height="15" fill="rgb(245,80,10)" fg:x="21829" fg:w="425"/><text x="59.6583%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (456 samples, 1.24%)</title><rect x="59.3403%" y="340" width="1.2410%" height="15" fill="rgb(232,107,50)" fg:x="21804" fg:w="456"/><text x="59.5903%" y="350.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:551) (43 samples, 0.12%)</title><rect x="60.8943%" y="356" width="0.1170%" height="15" fill="rgb(253,3,0)" fg:x="22375" fg:w="43"/><text x="61.1443%" y="366.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:622) (75 samples, 0.20%)</title><rect x="61.2753%" y="356" width="0.2041%" height="15" fill="rgb(212,99,53)" fg:x="22515" fg:w="75"/><text x="61.5253%" y="366.50"></text></g><g><title>_try_cast (pandas/core/construction.py:792) (48 samples, 0.13%)</title><rect x="61.3488%" y="372" width="0.1306%" height="15" fill="rgb(249,111,54)" fg:x="22542" fg:w="48"/><text x="61.5988%" y="382.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:656) (41 samples, 0.11%)</title><rect x="61.4794%" y="356" width="0.1116%" height="15" fill="rgb(249,55,30)" fg:x="22590" fg:w="41"/><text x="61.7294%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (335 samples, 0.91%)</title><rect x="60.8235%" y="340" width="0.9117%" height="15" fill="rgb(237,47,42)" fg:x="22349" fg:w="335"/><text x="61.0735%" y="350.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (56 samples, 0.15%)</title><rect x="61.7597%" y="356" width="0.1524%" height="15" fill="rgb(211,20,18)" fg:x="22693" fg:w="56"/><text x="62.0097%" y="366.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (74 samples, 0.20%)</title><rect x="61.9121%" y="356" width="0.2014%" height="15" fill="rgb(231,203,46)" fg:x="22749" fg:w="74"/><text x="62.1621%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:589) (144 samples, 0.39%)</title><rect x="61.7352%" y="340" width="0.3919%" height="15" fill="rgb(237,142,3)" fg:x="22684" fg:w="144"/><text x="61.9852%" y="350.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1889) (49 samples, 0.13%)</title><rect x="62.2034%" y="356" width="0.1334%" height="15" fill="rgb(241,107,1)" fg:x="22856" fg:w="49"/><text x="62.4534%" y="366.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1890) (53 samples, 0.14%)</title><rect x="62.3367%" y="356" width="0.1442%" height="15" fill="rgb(229,83,13)" fg:x="22905" fg:w="53"/><text x="62.5867%" y="366.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1891) (113 samples, 0.31%)</title><rect x="62.4809%" y="356" width="0.3075%" height="15" fill="rgb(241,91,40)" fg:x="22958" fg:w="113"/><text x="62.7309%" y="366.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2801) (65 samples, 0.18%)</title><rect x="62.6116%" y="372" width="0.1769%" height="15" fill="rgb(225,3,45)" fg:x="23006" fg:w="65"/><text x="62.8616%" y="382.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (271 samples, 0.74%)</title><rect x="62.1353%" y="340" width="0.7375%" height="15" fill="rgb(244,223,14)" fg:x="22831" fg:w="271"/><text x="62.3853%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (167 samples, 0.45%)</title><rect x="62.8756%" y="340" width="0.4545%" height="15" fill="rgb(224,124,37)" fg:x="23103" fg:w="167"/><text x="63.1256%" y="350.50"></text></g><g><title>__init__ (pandas/core/generic.py:286) (75 samples, 0.20%)</title><rect x="63.1260%" y="356" width="0.2041%" height="15" fill="rgb(251,171,30)" fg:x="23195" fg:w="75"/><text x="63.3760%" y="366.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6334) (90 samples, 0.24%)</title><rect x="63.3899%" y="356" width="0.2449%" height="15" fill="rgb(236,46,54)" fg:x="23292" fg:w="90"/><text x="63.6399%" y="366.50"></text></g><g><title>name (pandas/core/series.py:785) (66 samples, 0.18%)</title><rect x="63.4553%" y="372" width="0.1796%" height="15" fill="rgb(245,213,5)" fg:x="23316" fg:w="66"/><text x="63.7053%" y="382.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6321) (45 samples, 0.12%)</title><rect x="63.5124%" y="388" width="0.1225%" height="15" fill="rgb(230,144,27)" fg:x="23337" fg:w="45"/><text x="63.7624%" y="398.50"></text></g><g><title>name (pandas/core/series.py:787) (46 samples, 0.13%)</title><rect x="63.7628%" y="372" width="0.1252%" height="15" fill="rgb(220,86,6)" fg:x="23429" fg:w="46"/><text x="64.0128%" y="382.50"></text></g><g><title>name (pandas/core/series.py:789) (87 samples, 0.24%)</title><rect x="63.8880%" y="372" width="0.2368%" height="15" fill="rgb(240,20,13)" fg:x="23475" fg:w="87"/><text x="64.1380%" y="382.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1600) (60 samples, 0.16%)</title><rect x="63.9615%" y="388" width="0.1633%" height="15" fill="rgb(217,89,34)" fg:x="23502" fg:w="60"/><text x="64.2115%" y="398.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (306 samples, 0.83%)</title><rect x="63.3301%" y="340" width="0.8328%" height="15" fill="rgb(229,13,5)" fg:x="23270" fg:w="306"/><text x="63.5801%" y="350.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6342) (167 samples, 0.45%)</title><rect x="63.7084%" y="356" width="0.4545%" height="15" fill="rgb(244,67,35)" fg:x="23409" fg:w="167"/><text x="63.9584%" y="366.50"></text></g><g><title>_set_axis (pandas/core/generic.py:817) (46 samples, 0.13%)</title><rect x="64.2146%" y="356" width="0.1252%" height="15" fill="rgb(221,40,2)" fg:x="23595" fg:w="46"/><text x="64.4646%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:597) (77 samples, 0.21%)</title><rect x="64.1629%" y="340" width="0.2096%" height="15" fill="rgb(237,157,21)" fg:x="23576" fg:w="77"/><text x="64.4129%" y="350.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (3,020 samples, 8.22%)</title><rect x="56.2541%" y="308" width="8.2190%" height="15" fill="rgb(222,94,11)" fg:x="20670" fg:w="3020"/><text x="56.5041%" y="318.50">nested_colu..</text></g><g><title>dtypes (pandas/core/generic.py:6483) (2,154 samples, 5.86%)</title><rect x="58.6109%" y="324" width="5.8622%" height="15" fill="rgb(249,113,6)" fg:x="21536" fg:w="2154"/><text x="58.8609%" y="334.50">dtypes ..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (3,049 samples, 8.30%)</title><rect x="56.1806%" y="292" width="8.2980%" height="15" fill="rgb(238,137,36)" fg:x="20643" fg:w="3049"/><text x="56.4306%" y="302.50">_getitem_str..</text></g><g><title>_box_col_values (pandas/core/frame.py:4627) (101 samples, 0.27%)</title><rect x="64.7344%" y="356" width="0.2749%" height="15" fill="rgb(210,102,26)" fg:x="23786" fg:w="101"/><text x="64.9844%" y="366.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:693) (87 samples, 0.24%)</title><rect x="64.7725%" y="372" width="0.2368%" height="15" fill="rgb(218,30,30)" fg:x="23800" fg:w="87"/><text x="65.0225%" y="382.50"></text></g><g><title>_ixs (pandas/core/frame.py:4022) (123 samples, 0.33%)</title><rect x="64.7180%" y="340" width="0.3347%" height="15" fill="rgb(214,67,26)" fg:x="23780" fg:w="123"/><text x="64.9680%" y="350.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (180 samples, 0.49%)</title><rect x="64.5983%" y="324" width="0.4899%" height="15" fill="rgb(251,9,53)" fg:x="23736" fg:w="180"/><text x="64.8483%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (3,282 samples, 8.93%)</title><rect x="56.1752%" y="276" width="8.9321%" height="15" fill="rgb(228,204,25)" fg:x="20641" fg:w="3282"/><text x="56.4252%" y="286.50">__getitem__ (..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (222 samples, 0.60%)</title><rect x="64.5030%" y="292" width="0.6042%" height="15" fill="rgb(207,153,8)" fg:x="23701" fg:w="222"/><text x="64.7530%" y="302.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (195 samples, 0.53%)</title><rect x="64.5765%" y="308" width="0.5307%" height="15" fill="rgb(242,9,16)" fg:x="23728" fg:w="195"/><text x="64.8265%" y="318.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:186) (3,343 samples, 9.10%)</title><rect x="56.0336%" y="244" width="9.0981%" height="15" fill="rgb(217,211,10)" fg:x="20589" fg:w="3343"/><text x="56.2836%" y="254.50">_concat_meta_..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (3,298 samples, 8.98%)</title><rect x="56.1561%" y="260" width="8.9756%" height="15" fill="rgb(219,228,52)" fg:x="20634" fg:w="3298"/><text x="56.4061%" y="270.50">_reindex_and_..</text></g><g><title>_concat (pandas/core/indexes/base.py:5509) (44 samples, 0.12%)</title><rect x="65.1617%" y="356" width="0.1197%" height="15" fill="rgb(231,92,29)" fg:x="23943" fg:w="44"/><text x="65.4117%" y="366.50"></text></g><g><title>concat_compat (pandas/core/dtypes/concat.py:85) (42 samples, 0.11%)</title><rect x="65.1671%" y="372" width="0.1143%" height="15" fill="rgb(232,8,23)" fg:x="23945" fg:w="42"/><text x="65.4171%" y="382.50"></text></g><g><title>_concat_same_type (pandas/core/arrays/arrow/array.py:1627) (37 samples, 0.10%)</title><rect x="65.1807%" y="388" width="0.1007%" height="15" fill="rgb(216,211,34)" fg:x="23950" fg:w="37"/><text x="65.4307%" y="398.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:671) (52 samples, 0.14%)</title><rect x="65.1481%" y="276" width="0.1415%" height="15" fill="rgb(236,151,0)" fg:x="23938" fg:w="52"/><text x="65.3981%" y="286.50"></text></g><g><title>new_axes (pandas/core/reshape/concat.py:703) (52 samples, 0.14%)</title><rect x="65.1481%" y="292" width="0.1415%" height="15" fill="rgb(209,168,3)" fg:x="23938" fg:w="52"/><text x="65.3981%" y="302.50"></text></g><g><title>_get_concat_axis (pandas/core/reshape/concat.py:760) (47 samples, 0.13%)</title><rect x="65.1617%" y="308" width="0.1279%" height="15" fill="rgb(208,129,28)" fg:x="23943" fg:w="47"/><text x="65.4117%" y="318.50"></text></g><g><title>_concat_indexes (pandas/core/reshape/concat.py:778) (47 samples, 0.13%)</title><rect x="65.1617%" y="324" width="0.1279%" height="15" fill="rgb(229,78,22)" fg:x="23943" fg:w="47"/><text x="65.4117%" y="334.50"></text></g><g><title>append (pandas/core/indexes/base.py:5501) (47 samples, 0.13%)</title><rect x="65.1617%" y="340" width="0.1279%" height="15" fill="rgb(228,187,13)" fg:x="23943" fg:w="47"/><text x="65.4117%" y="350.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:166) (93 samples, 0.25%)</title><rect x="65.3413%" y="292" width="0.2531%" height="15" fill="rgb(240,119,24)" fg:x="24009" fg:w="93"/><text x="65.5913%" y="302.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:597) (89 samples, 0.24%)</title><rect x="65.3522%" y="308" width="0.2422%" height="15" fill="rgb(209,194,42)" fg:x="24013" fg:w="89"/><text x="65.6022%" y="318.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:597) (89 samples, 0.24%)</title><rect x="65.3522%" y="324" width="0.2422%" height="15" fill="rgb(247,200,46)" fg:x="24013" fg:w="89"/><text x="65.6022%" y="334.50"></text></g><g><title>_concat_same_type (pandas/core/arrays/arrow/array.py:1627) (203 samples, 0.55%)</title><rect x="65.6243%" y="324" width="0.5525%" height="15" fill="rgb(218,76,16)" fg:x="24113" fg:w="203"/><text x="65.8743%" y="334.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:180) (216 samples, 0.59%)</title><rect x="65.5998%" y="292" width="0.5879%" height="15" fill="rgb(225,21,48)" fg:x="24104" fg:w="216"/><text x="65.8498%" y="302.50"></text></g><g><title>concat_compat (pandas/core/dtypes/concat.py:83) (215 samples, 0.59%)</title><rect x="65.6025%" y="308" width="0.5851%" height="15" fill="rgb(239,223,50)" fg:x="24105" fg:w="215"/><text x="65.8525%" y="318.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (330 samples, 0.90%)</title><rect x="65.2977%" y="276" width="0.8981%" height="15" fill="rgb(244,45,21)" fg:x="23993" fg:w="330"/><text x="65.5477%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:187) (403 samples, 1.10%)</title><rect x="65.1317%" y="244" width="1.0968%" height="15" fill="rgb(232,33,43)" fg:x="23932" fg:w="403"/><text x="65.3817%" y="254.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (397 samples, 1.08%)</title><rect x="65.1481%" y="260" width="1.0804%" height="15" fill="rgb(209,8,3)" fg:x="23938" fg:w="397"/><text x="65.3981%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1133) (62 samples, 0.17%)</title><rect x="66.5769%" y="324" width="0.1687%" height="15" fill="rgb(214,25,53)" fg:x="24463" fg:w="62"/><text x="66.8269%" y="334.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (191 samples, 0.52%)</title><rect x="66.7810%" y="340" width="0.5198%" height="15" fill="rgb(254,186,54)" fg:x="24538" fg:w="191"/><text x="67.0310%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (247 samples, 0.67%)</title><rect x="66.7483%" y="324" width="0.6722%" height="15" fill="rgb(208,174,49)" fg:x="24526" fg:w="247"/><text x="66.9983%" y="334.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:289) (44 samples, 0.12%)</title><rect x="67.3008%" y="340" width="0.1197%" height="15" fill="rgb(233,191,51)" fg:x="24729" fg:w="44"/><text x="67.5508%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:490) (44 samples, 0.12%)</title><rect x="67.6546%" y="340" width="0.1197%" height="15" fill="rgb(222,134,10)" fg:x="24859" fg:w="44"/><text x="67.9046%" y="350.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1656) (67 samples, 0.18%)</title><rect x="67.9022%" y="372" width="0.1823%" height="15" fill="rgb(230,226,20)" fg:x="24950" fg:w="67"/><text x="68.1522%" y="382.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1662) (51 samples, 0.14%)</title><rect x="68.0846%" y="372" width="0.1388%" height="15" fill="rgb(251,111,25)" fg:x="25017" fg:w="51"/><text x="68.3346%" y="382.50"></text></g><g><title>simplefilter (warnings.py:180) (42 samples, 0.11%)</title><rect x="68.1091%" y="388" width="0.1143%" height="15" fill="rgb(224,40,46)" fg:x="25026" fg:w="42"/><text x="68.3591%" y="398.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (183 samples, 0.50%)</title><rect x="67.8124%" y="356" width="0.4980%" height="15" fill="rgb(236,108,47)" fg:x="24917" fg:w="183"/><text x="68.0624%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (193 samples, 0.53%)</title><rect x="67.7934%" y="340" width="0.5253%" height="15" fill="rgb(234,93,0)" fg:x="24910" fg:w="193"/><text x="68.0434%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (149 samples, 0.41%)</title><rect x="68.4738%" y="340" width="0.4055%" height="15" fill="rgb(224,213,32)" fg:x="25160" fg:w="149"/><text x="68.7238%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:589) (67 samples, 0.18%)</title><rect x="68.8793%" y="340" width="0.1823%" height="15" fill="rgb(251,11,48)" fg:x="25309" fg:w="67"/><text x="69.1293%" y="350.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1891) (65 samples, 0.18%)</title><rect x="69.2576%" y="356" width="0.1769%" height="15" fill="rgb(236,173,5)" fg:x="25448" fg:w="65"/><text x="69.5076%" y="366.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2801) (42 samples, 0.11%)</title><rect x="69.3202%" y="372" width="0.1143%" height="15" fill="rgb(230,95,12)" fg:x="25471" fg:w="42"/><text x="69.5702%" y="382.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (148 samples, 0.40%)</title><rect x="69.0671%" y="340" width="0.4028%" height="15" fill="rgb(232,209,1)" fg:x="25378" fg:w="148"/><text x="69.3171%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (84 samples, 0.23%)</title><rect x="69.4726%" y="340" width="0.2286%" height="15" fill="rgb(232,6,1)" fg:x="25527" fg:w="84"/><text x="69.7226%" y="350.50"></text></g><g><title>__init__ (pandas/core/generic.py:286) (42 samples, 0.11%)</title><rect x="69.5869%" y="356" width="0.1143%" height="15" fill="rgb(210,224,50)" fg:x="25569" fg:w="42"/><text x="69.8369%" y="366.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6334) (44 samples, 0.12%)</title><rect x="69.7202%" y="356" width="0.1197%" height="15" fill="rgb(228,127,35)" fg:x="25618" fg:w="44"/><text x="69.9702%" y="366.50"></text></g><g><title>name (pandas/core/series.py:789) (42 samples, 0.11%)</title><rect x="69.9516%" y="372" width="0.1143%" height="15" fill="rgb(245,102,45)" fg:x="25703" fg:w="42"/><text x="70.2016%" y="382.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (145 samples, 0.39%)</title><rect x="69.7012%" y="340" width="0.3946%" height="15" fill="rgb(214,1,49)" fg:x="25611" fg:w="145"/><text x="69.9512%" y="350.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6342) (84 samples, 0.23%)</title><rect x="69.8672%" y="356" width="0.2286%" height="15" fill="rgb(226,163,40)" fg:x="25672" fg:w="84"/><text x="70.1172%" y="366.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (1,453 samples, 3.95%)</title><rect x="66.2720%" y="292" width="3.9544%" height="15" fill="rgb(239,212,28)" fg:x="24351" fg:w="1453"/><text x="66.5220%" y="302.50">_get..</text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (1,446 samples, 3.94%)</title><rect x="66.2911%" y="308" width="3.9353%" height="15" fill="rgb(220,20,13)" fg:x="24358" fg:w="1446"/><text x="66.5411%" y="318.50">nest..</text></g><g><title>dtypes (pandas/core/generic.py:6483) (1,031 samples, 2.81%)</title><rect x="67.4205%" y="324" width="2.8059%" height="15" fill="rgb(210,164,35)" fg:x="24773" fg:w="1031"/><text x="67.6705%" y="334.50">dt..</text></g><g><title>_box_col_values (pandas/core/frame.py:4627) (54 samples, 0.15%)</title><rect x="70.3244%" y="356" width="0.1470%" height="15" fill="rgb(248,109,41)" fg:x="25840" fg:w="54"/><text x="70.5744%" y="366.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:693) (44 samples, 0.12%)</title><rect x="70.3516%" y="372" width="0.1197%" height="15" fill="rgb(238,23,50)" fg:x="25850" fg:w="44"/><text x="70.6016%" y="382.50"></text></g><g><title>_ixs (pandas/core/frame.py:4022) (62 samples, 0.17%)</title><rect x="70.3190%" y="340" width="0.1687%" height="15" fill="rgb(211,48,49)" fg:x="25838" fg:w="62"/><text x="70.5690%" y="350.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (80 samples, 0.22%)</title><rect x="70.2809%" y="324" width="0.2177%" height="15" fill="rgb(223,36,21)" fg:x="25824" fg:w="80"/><text x="70.5309%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (1,555 samples, 4.23%)</title><rect x="66.2693%" y="276" width="4.2320%" height="15" fill="rgb(207,123,46)" fg:x="24350" fg:w="1555"/><text x="66.5193%" y="286.50">__get..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (95 samples, 0.26%)</title><rect x="70.2428%" y="292" width="0.2585%" height="15" fill="rgb(240,218,32)" fg:x="25810" fg:w="95"/><text x="70.4928%" y="302.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (84 samples, 0.23%)</title><rect x="70.2727%" y="308" width="0.2286%" height="15" fill="rgb(252,5,43)" fg:x="25821" fg:w="84"/><text x="70.5227%" y="318.50"></text></g><g><title>perform_concat (lsdb/dask/concat_catalog_data.py:249) (5,905 samples, 16.07%)</title><rect x="54.4470%" y="228" width="16.0707%" height="15" fill="rgb(252,84,19)" fg:x="20006" fg:w="5905"/><text x="54.6970%" y="238.50">perform_concat (lsdb/dask..</text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:188) (1,576 samples, 4.29%)</title><rect x="66.2285%" y="244" width="4.2891%" height="15" fill="rgb(243,152,39)" fg:x="24335" fg:w="1576"/><text x="66.4785%" y="254.50">_conc..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (1,563 samples, 4.25%)</title><rect x="66.2639%" y="260" width="4.2538%" height="15" fill="rgb(234,160,15)" fg:x="24348" fg:w="1563"/><text x="66.5139%" y="270.50">_rein..</text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:572) (41 samples, 0.11%)</title><rect x="70.5612%" y="244" width="0.1116%" height="15" fill="rgb(237,34,20)" fg:x="25927" fg:w="41"/><text x="70.8112%" y="254.50"></text></g><g><title>to_numpy (pandas/core/base.py:641) (41 samples, 0.11%)</title><rect x="70.5612%" y="260" width="0.1116%" height="15" fill="rgb(229,97,13)" fg:x="25927" fg:w="41"/><text x="70.8112%" y="270.50"></text></g><g><title>to_numpy (pandas/core/arrays/arrow/array.py:1490) (40 samples, 0.11%)</title><rect x="70.5639%" y="276" width="0.1089%" height="15" fill="rgb(234,71,50)" fg:x="25928" fg:w="40"/><text x="70.8139%" y="286.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:305) (122 samples, 0.33%)</title><rect x="70.5394%" y="228" width="0.3320%" height="15" fill="rgb(253,155,4)" fg:x="25919" fg:w="122"/><text x="70.7894%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:577) (55 samples, 0.15%)</title><rect x="70.7218%" y="244" width="0.1497%" height="15" fill="rgb(222,185,37)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (55 samples, 0.15%)</title><rect x="70.7218%" y="260" width="0.1497%" height="15" fill="rgb(251,177,13)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (55 samples, 0.15%)</title><rect x="70.7218%" y="276" width="0.1497%" height="15" fill="rgb(250,179,40)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (55 samples, 0.15%)</title><rect x="70.7218%" y="292" width="0.1497%" height="15" fill="rgb(242,44,2)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (55 samples, 0.15%)</title><rect x="70.7218%" y="308" width="0.1497%" height="15" fill="rgb(216,177,13)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="318.50"></text></g><g><title>take (pandas/core/generic.py:4155) (55 samples, 0.15%)</title><rect x="70.7218%" y="324" width="0.1497%" height="15" fill="rgb(216,106,43)" fg:x="25986" fg:w="55"/><text x="70.9718%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (39 samples, 0.11%)</title><rect x="70.7653%" y="340" width="0.1061%" height="15" fill="rgb(216,183,2)" fg:x="26002" fg:w="39"/><text x="71.0153%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (39 samples, 0.11%)</title><rect x="70.7653%" y="356" width="0.1061%" height="15" fill="rgb(249,75,3)" fg:x="26002" fg:w="39"/><text x="71.0153%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (39 samples, 0.11%)</title><rect x="70.7653%" y="372" width="0.1061%" height="15" fill="rgb(219,67,39)" fg:x="26002" fg:w="39"/><text x="71.0153%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (39 samples, 0.11%)</title><rect x="70.7653%" y="388" width="0.1061%" height="15" fill="rgb(253,228,2)" fg:x="26002" fg:w="39"/><text x="71.0153%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (39 samples, 0.11%)</title><rect x="70.7653%" y="404" width="0.1061%" height="15" fill="rgb(235,138,27)" fg:x="26002" fg:w="39"/><text x="71.0153%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (38 samples, 0.10%)</title><rect x="70.7680%" y="420" width="0.1034%" height="15" fill="rgb(236,97,51)" fg:x="26003" fg:w="38"/><text x="71.0180%" y="430.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (47 samples, 0.13%)</title><rect x="70.9667%" y="308" width="0.1279%" height="15" fill="rgb(240,80,30)" fg:x="26076" fg:w="47"/><text x="71.2167%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (41 samples, 0.11%)</title><rect x="71.1490%" y="324" width="0.1116%" height="15" fill="rgb(230,178,19)" fg:x="26143" fg:w="41"/><text x="71.3990%" y="334.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (39 samples, 0.11%)</title><rect x="71.1545%" y="340" width="0.1061%" height="15" fill="rgb(210,190,27)" fg:x="26145" fg:w="39"/><text x="71.4045%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (266 samples, 0.72%)</title><rect x="70.8714%" y="276" width="0.7239%" height="15" fill="rgb(222,107,31)" fg:x="26041" fg:w="266"/><text x="71.1214%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (265 samples, 0.72%)</title><rect x="70.8742%" y="292" width="0.7212%" height="15" fill="rgb(216,127,34)" fg:x="26042" fg:w="265"/><text x="71.1242%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (184 samples, 0.50%)</title><rect x="71.0946%" y="308" width="0.5008%" height="15" fill="rgb(234,116,52)" fg:x="26123" fg:w="184"/><text x="71.3446%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (291 samples, 0.79%)</title><rect x="70.8714%" y="260" width="0.7920%" height="15" fill="rgb(222,124,15)" fg:x="26041" fg:w="291"/><text x="71.1214%" y="270.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (292 samples, 0.79%)</title><rect x="70.8714%" y="244" width="0.7947%" height="15" fill="rgb(231,179,28)" fg:x="26041" fg:w="292"/><text x="71.1214%" y="254.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (100 samples, 0.27%)</title><rect x="71.6688%" y="276" width="0.2722%" height="15" fill="rgb(226,93,45)" fg:x="26334" fg:w="100"/><text x="71.9188%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (100 samples, 0.27%)</title><rect x="71.6688%" y="292" width="0.2722%" height="15" fill="rgb(215,8,51)" fg:x="26334" fg:w="100"/><text x="71.9188%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (74 samples, 0.20%)</title><rect x="71.7396%" y="308" width="0.2014%" height="15" fill="rgb(223,106,5)" fg:x="26360" fg:w="74"/><text x="71.9896%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (106 samples, 0.29%)</title><rect x="71.6661%" y="260" width="0.2885%" height="15" fill="rgb(250,191,5)" fg:x="26333" fg:w="106"/><text x="71.9161%" y="270.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (212 samples, 0.58%)</title><rect x="72.0009%" y="372" width="0.5770%" height="15" fill="rgb(242,132,44)" fg:x="26456" fg:w="212"/><text x="72.2509%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (212 samples, 0.58%)</title><rect x="72.0009%" y="388" width="0.5770%" height="15" fill="rgb(251,152,29)" fg:x="26456" fg:w="212"/><text x="72.2509%" y="398.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (230 samples, 0.63%)</title><rect x="71.9981%" y="308" width="0.6260%" height="15" fill="rgb(218,179,5)" fg:x="26455" fg:w="230"/><text x="72.2481%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (230 samples, 0.63%)</title><rect x="71.9981%" y="324" width="0.6260%" height="15" fill="rgb(227,67,19)" fg:x="26455" fg:w="230"/><text x="72.2481%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (229 samples, 0.62%)</title><rect x="72.0009%" y="340" width="0.6232%" height="15" fill="rgb(233,119,31)" fg:x="26456" fg:w="229"/><text x="72.2509%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (229 samples, 0.62%)</title><rect x="72.0009%" y="356" width="0.6232%" height="15" fill="rgb(241,120,22)" fg:x="26456" fg:w="229"/><text x="72.2509%" y="366.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:308) (645 samples, 1.76%)</title><rect x="70.8714%" y="228" width="1.7554%" height="15" fill="rgb(224,102,30)" fg:x="26041" fg:w="645"/><text x="71.1214%" y="238.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (353 samples, 0.96%)</title><rect x="71.6661%" y="244" width="0.9607%" height="15" fill="rgb(210,164,37)" fg:x="26333" fg:w="353"/><text x="71.9161%" y="254.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (232 samples, 0.63%)</title><rect x="71.9954%" y="260" width="0.6314%" height="15" fill="rgb(226,191,16)" fg:x="26454" fg:w="232"/><text x="72.2454%" y="270.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (232 samples, 0.63%)</title><rect x="71.9954%" y="276" width="0.6314%" height="15" fill="rgb(214,40,45)" fg:x="26454" fg:w="232"/><text x="72.2454%" y="286.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (232 samples, 0.63%)</title><rect x="71.9954%" y="292" width="0.6314%" height="15" fill="rgb(244,29,26)" fg:x="26454" fg:w="232"/><text x="72.2454%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (38 samples, 0.10%)</title><rect x="72.7275%" y="324" width="0.1034%" height="15" fill="rgb(216,16,5)" fg:x="26723" fg:w="38"/><text x="72.9775%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (38 samples, 0.10%)</title><rect x="72.8772%" y="340" width="0.1034%" height="15" fill="rgb(249,76,35)" fg:x="26778" fg:w="38"/><text x="73.1272%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (218 samples, 0.59%)</title><rect x="72.6432%" y="292" width="0.5933%" height="15" fill="rgb(207,11,44)" fg:x="26692" fg:w="218"/><text x="72.8932%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (215 samples, 0.59%)</title><rect x="72.6513%" y="308" width="0.5851%" height="15" fill="rgb(228,190,49)" fg:x="26695" fg:w="215"/><text x="72.9013%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (149 samples, 0.41%)</title><rect x="72.8309%" y="324" width="0.4055%" height="15" fill="rgb(214,173,12)" fg:x="26761" fg:w="149"/><text x="73.0809%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (241 samples, 0.66%)</title><rect x="72.6432%" y="276" width="0.6559%" height="15" fill="rgb(218,26,35)" fg:x="26692" fg:w="241"/><text x="72.8932%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (245 samples, 0.67%)</title><rect x="72.6350%" y="244" width="0.6668%" height="15" fill="rgb(220,200,19)" fg:x="26689" fg:w="245"/><text x="72.8850%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (242 samples, 0.66%)</title><rect x="72.6432%" y="260" width="0.6586%" height="15" fill="rgb(239,95,49)" fg:x="26692" fg:w="242"/><text x="72.8932%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (39 samples, 0.11%)</title><rect x="73.3018%" y="276" width="0.1061%" height="15" fill="rgb(235,85,53)" fg:x="26934" fg:w="39"/><text x="73.5518%" y="286.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:309) (288 samples, 0.78%)</title><rect x="72.6268%" y="228" width="0.7838%" height="15" fill="rgb(233,133,31)" fg:x="26686" fg:w="288"/><text x="72.8768%" y="238.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (40 samples, 0.11%)</title><rect x="73.3018%" y="244" width="0.1089%" height="15" fill="rgb(218,25,20)" fg:x="26934" fg:w="40"/><text x="73.5518%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (40 samples, 0.11%)</title><rect x="73.3018%" y="260" width="0.1089%" height="15" fill="rgb(252,210,38)" fg:x="26934" fg:w="40"/><text x="73.5518%" y="270.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:317) (107 samples, 0.29%)</title><rect x="73.4542%" y="228" width="0.2912%" height="15" fill="rgb(242,134,21)" fg:x="26990" fg:w="107"/><text x="73.7042%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:577) (51 samples, 0.14%)</title><rect x="73.6066%" y="244" width="0.1388%" height="15" fill="rgb(213,28,48)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (51 samples, 0.14%)</title><rect x="73.6066%" y="260" width="0.1388%" height="15" fill="rgb(250,196,2)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (51 samples, 0.14%)</title><rect x="73.6066%" y="276" width="0.1388%" height="15" fill="rgb(227,5,17)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (51 samples, 0.14%)</title><rect x="73.6066%" y="292" width="0.1388%" height="15" fill="rgb(221,226,24)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (51 samples, 0.14%)</title><rect x="73.6066%" y="308" width="0.1388%" height="15" fill="rgb(211,5,48)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="318.50"></text></g><g><title>take (pandas/core/generic.py:4155) (51 samples, 0.14%)</title><rect x="73.6066%" y="324" width="0.1388%" height="15" fill="rgb(219,150,6)" fg:x="27046" fg:w="51"/><text x="73.8566%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (42 samples, 0.11%)</title><rect x="73.6311%" y="340" width="0.1143%" height="15" fill="rgb(251,46,16)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (42 samples, 0.11%)</title><rect x="73.6311%" y="356" width="0.1143%" height="15" fill="rgb(220,204,40)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (42 samples, 0.11%)</title><rect x="73.6311%" y="372" width="0.1143%" height="15" fill="rgb(211,85,2)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (42 samples, 0.11%)</title><rect x="73.6311%" y="388" width="0.1143%" height="15" fill="rgb(229,17,7)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (42 samples, 0.11%)</title><rect x="73.6311%" y="404" width="0.1143%" height="15" fill="rgb(239,72,28)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (42 samples, 0.11%)</title><rect x="73.6311%" y="420" width="0.1143%" height="15" fill="rgb(230,47,54)" fg:x="27055" fg:w="42"/><text x="73.8811%" y="430.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (39 samples, 0.11%)</title><rect x="73.8243%" y="308" width="0.1061%" height="15" fill="rgb(214,50,8)" fg:x="27126" fg:w="39"/><text x="74.0743%" y="318.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (49 samples, 0.13%)</title><rect x="73.9713%" y="324" width="0.1334%" height="15" fill="rgb(216,198,43)" fg:x="27180" fg:w="49"/><text x="74.2213%" y="334.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (48 samples, 0.13%)</title><rect x="73.9740%" y="340" width="0.1306%" height="15" fill="rgb(234,20,35)" fg:x="27181" fg:w="48"/><text x="74.2240%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (269 samples, 0.73%)</title><rect x="73.7454%" y="276" width="0.7321%" height="15" fill="rgb(254,45,19)" fg:x="27097" fg:w="269"/><text x="73.9954%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (266 samples, 0.72%)</title><rect x="73.7535%" y="292" width="0.7239%" height="15" fill="rgb(219,14,44)" fg:x="27100" fg:w="266"/><text x="74.0035%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (201 samples, 0.55%)</title><rect x="73.9304%" y="308" width="0.5470%" height="15" fill="rgb(217,220,26)" fg:x="27165" fg:w="201"/><text x="74.1804%" y="318.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (288 samples, 0.78%)</title><rect x="73.7454%" y="244" width="0.7838%" height="15" fill="rgb(213,158,28)" fg:x="27097" fg:w="288"/><text x="73.9954%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (288 samples, 0.78%)</title><rect x="73.7454%" y="260" width="0.7838%" height="15" fill="rgb(252,51,52)" fg:x="27097" fg:w="288"/><text x="73.9954%" y="270.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (76 samples, 0.21%)</title><rect x="74.5292%" y="276" width="0.2068%" height="15" fill="rgb(246,89,16)" fg:x="27385" fg:w="76"/><text x="74.7792%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (75 samples, 0.20%)</title><rect x="74.5319%" y="292" width="0.2041%" height="15" fill="rgb(216,158,49)" fg:x="27386" fg:w="75"/><text x="74.7819%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (61 samples, 0.17%)</title><rect x="74.5700%" y="308" width="0.1660%" height="15" fill="rgb(236,107,19)" fg:x="27400" fg:w="61"/><text x="74.8200%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (81 samples, 0.22%)</title><rect x="74.5292%" y="260" width="0.2204%" height="15" fill="rgb(228,185,30)" fg:x="27385" fg:w="81"/><text x="74.7792%" y="270.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (173 samples, 0.47%)</title><rect x="74.7932%" y="372" width="0.4708%" height="15" fill="rgb(246,134,8)" fg:x="27482" fg:w="173"/><text x="75.0432%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (172 samples, 0.47%)</title><rect x="74.7959%" y="388" width="0.4681%" height="15" fill="rgb(214,143,50)" fg:x="27483" fg:w="172"/><text x="75.0459%" y="398.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:320) (579 samples, 1.58%)</title><rect x="73.7454%" y="228" width="1.5758%" height="15" fill="rgb(228,75,8)" fg:x="27097" fg:w="579"/><text x="73.9954%" y="238.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (291 samples, 0.79%)</title><rect x="74.5292%" y="244" width="0.7920%" height="15" fill="rgb(207,175,4)" fg:x="27385" fg:w="291"/><text x="74.7792%" y="254.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (196 samples, 0.53%)</title><rect x="74.7877%" y="260" width="0.5334%" height="15" fill="rgb(205,108,24)" fg:x="27480" fg:w="196"/><text x="75.0377%" y="270.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (196 samples, 0.53%)</title><rect x="74.7877%" y="276" width="0.5334%" height="15" fill="rgb(244,120,49)" fg:x="27480" fg:w="196"/><text x="75.0377%" y="286.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (196 samples, 0.53%)</title><rect x="74.7877%" y="292" width="0.5334%" height="15" fill="rgb(223,47,38)" fg:x="27480" fg:w="196"/><text x="75.0377%" y="302.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (196 samples, 0.53%)</title><rect x="74.7877%" y="308" width="0.5334%" height="15" fill="rgb(229,179,11)" fg:x="27480" fg:w="196"/><text x="75.0377%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (195 samples, 0.53%)</title><rect x="74.7904%" y="324" width="0.5307%" height="15" fill="rgb(231,122,1)" fg:x="27481" fg:w="195"/><text x="75.0404%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (194 samples, 0.53%)</title><rect x="74.7932%" y="340" width="0.5280%" height="15" fill="rgb(245,119,9)" fg:x="27482" fg:w="194"/><text x="75.0432%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (194 samples, 0.53%)</title><rect x="74.7932%" y="356" width="0.5280%" height="15" fill="rgb(241,163,25)" fg:x="27482" fg:w="194"/><text x="75.0432%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (48 samples, 0.13%)</title><rect x="75.5334%" y="340" width="0.1306%" height="15" fill="rgb(217,214,3)" fg:x="27754" fg:w="48"/><text x="75.7834%" y="350.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (47 samples, 0.13%)</title><rect x="75.5361%" y="356" width="0.1279%" height="15" fill="rgb(240,86,28)" fg:x="27755" fg:w="47"/><text x="75.7861%" y="366.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (230 samples, 0.63%)</title><rect x="75.3266%" y="292" width="0.6260%" height="15" fill="rgb(215,47,9)" fg:x="27678" fg:w="230"/><text x="75.5766%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (227 samples, 0.62%)</title><rect x="75.3347%" y="308" width="0.6178%" height="15" fill="rgb(252,25,45)" fg:x="27681" fg:w="227"/><text x="75.5847%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (169 samples, 0.46%)</title><rect x="75.4926%" y="324" width="0.4599%" height="15" fill="rgb(251,164,9)" fg:x="27739" fg:w="169"/><text x="75.7426%" y="334.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (249 samples, 0.68%)</title><rect x="75.3211%" y="244" width="0.6777%" height="15" fill="rgb(233,194,0)" fg:x="27676" fg:w="249"/><text x="75.5711%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (247 samples, 0.67%)</title><rect x="75.3266%" y="260" width="0.6722%" height="15" fill="rgb(249,111,24)" fg:x="27678" fg:w="247"/><text x="75.5766%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (247 samples, 0.67%)</title><rect x="75.3266%" y="276" width="0.6722%" height="15" fill="rgb(250,223,3)" fg:x="27678" fg:w="247"/><text x="75.5766%" y="286.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (44 samples, 0.12%)</title><rect x="76.0042%" y="292" width="0.1197%" height="15" fill="rgb(236,178,37)" fg:x="27927" fg:w="44"/><text x="76.2542%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (44 samples, 0.12%)</title><rect x="76.0042%" y="308" width="0.1197%" height="15" fill="rgb(241,158,50)" fg:x="27927" fg:w="44"/><text x="76.2542%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (48 samples, 0.13%)</title><rect x="76.0042%" y="276" width="0.1306%" height="15" fill="rgb(213,121,41)" fg:x="27927" fg:w="48"/><text x="76.2542%" y="286.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:321) (300 samples, 0.82%)</title><rect x="75.3211%" y="228" width="0.8165%" height="15" fill="rgb(240,92,3)" fg:x="27676" fg:w="300"/><text x="75.5711%" y="238.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (51 samples, 0.14%)</title><rect x="75.9988%" y="244" width="0.1388%" height="15" fill="rgb(205,123,3)" fg:x="27925" fg:w="51"/><text x="76.2488%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (50 samples, 0.14%)</title><rect x="76.0015%" y="260" width="0.1361%" height="15" fill="rgb(205,97,47)" fg:x="27926" fg:w="50"/><text x="76.2515%" y="270.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:325) (37 samples, 0.10%)</title><rect x="76.1376%" y="228" width="0.1007%" height="15" fill="rgb(247,152,14)" fg:x="27976" fg:w="37"/><text x="76.3876%" y="238.50"></text></g><g><title>concat_partition_and_margin (lsdb/dask/merge_catalog_functions.py:190) (37 samples, 0.10%)</title><rect x="76.1376%" y="244" width="0.1007%" height="15" fill="rgb(248,195,53)" fg:x="27976" fg:w="37"/><text x="76.3876%" y="254.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:572) (77 samples, 0.21%)</title><rect x="76.3091%" y="244" width="0.2096%" height="15" fill="rgb(226,201,16)" fg:x="28039" fg:w="77"/><text x="76.5591%" y="254.50"></text></g><g><title>to_numpy (pandas/core/base.py:641) (76 samples, 0.21%)</title><rect x="76.3118%" y="260" width="0.2068%" height="15" fill="rgb(205,98,0)" fg:x="28040" fg:w="76"/><text x="76.5618%" y="270.50"></text></g><g><title>to_numpy (pandas/core/arrays/arrow/array.py:1490) (74 samples, 0.20%)</title><rect x="76.3172%" y="276" width="0.2014%" height="15" fill="rgb(214,191,48)" fg:x="28042" fg:w="74"/><text x="76.5672%" y="286.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:576) (39 samples, 0.11%)</title><rect x="76.5186%" y="244" width="0.1061%" height="15" fill="rgb(237,112,39)" fg:x="28116" fg:w="39"/><text x="76.7686%" y="254.50"></text></g><g><title>isin (numpy/lib/_arraysetops_impl.py:1177) (39 samples, 0.11%)</title><rect x="76.5186%" y="260" width="0.1061%" height="15" fill="rgb(247,203,27)" fg:x="28116" fg:w="39"/><text x="76.7686%" y="270.50"></text></g><g><title>take (pandas/core/generic.py:4155) (111 samples, 0.30%)</title><rect x="76.6248%" y="324" width="0.3021%" height="15" fill="rgb(235,124,28)" fg:x="28155" fg:w="111"/><text x="76.8748%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (79 samples, 0.22%)</title><rect x="76.7118%" y="340" width="0.2150%" height="15" fill="rgb(208,207,46)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (79 samples, 0.22%)</title><rect x="76.7118%" y="356" width="0.2150%" height="15" fill="rgb(234,176,4)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (79 samples, 0.22%)</title><rect x="76.7118%" y="372" width="0.2150%" height="15" fill="rgb(230,133,28)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (79 samples, 0.22%)</title><rect x="76.7118%" y="388" width="0.2150%" height="15" fill="rgb(211,137,40)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (79 samples, 0.22%)</title><rect x="76.7118%" y="404" width="0.2150%" height="15" fill="rgb(254,35,13)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (79 samples, 0.22%)</title><rect x="76.7118%" y="420" width="0.2150%" height="15" fill="rgb(225,49,51)" fg:x="28187" fg:w="79"/><text x="76.9618%" y="430.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:326) (269 samples, 0.73%)</title><rect x="76.2383%" y="228" width="0.7321%" height="15" fill="rgb(251,10,15)" fg:x="28013" fg:w="269"/><text x="76.4883%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:577) (127 samples, 0.35%)</title><rect x="76.6248%" y="244" width="0.3456%" height="15" fill="rgb(228,207,15)" fg:x="28155" fg:w="127"/><text x="76.8748%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (127 samples, 0.35%)</title><rect x="76.6248%" y="260" width="0.3456%" height="15" fill="rgb(241,99,19)" fg:x="28155" fg:w="127"/><text x="76.8748%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (127 samples, 0.35%)</title><rect x="76.6248%" y="276" width="0.3456%" height="15" fill="rgb(207,104,49)" fg:x="28155" fg:w="127"/><text x="76.8748%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (127 samples, 0.35%)</title><rect x="76.6248%" y="292" width="0.3456%" height="15" fill="rgb(234,99,18)" fg:x="28155" fg:w="127"/><text x="76.8748%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (127 samples, 0.35%)</title><rect x="76.6248%" y="308" width="0.3456%" height="15" fill="rgb(213,191,49)" fg:x="28155" fg:w="127"/><text x="76.8748%" y="318.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (70 samples, 0.19%)</title><rect x="77.2806%" y="324" width="0.1905%" height="15" fill="rgb(210,226,19)" fg:x="28396" fg:w="70"/><text x="77.5306%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (95 samples, 0.26%)</title><rect x="77.2698%" y="308" width="0.2585%" height="15" fill="rgb(229,97,18)" fg:x="28392" fg:w="95"/><text x="77.5198%" y="318.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1656) (38 samples, 0.10%)</title><rect x="77.7079%" y="356" width="0.1034%" height="15" fill="rgb(211,167,15)" fg:x="28553" fg:w="38"/><text x="77.9579%" y="366.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (100 samples, 0.27%)</title><rect x="77.6453%" y="340" width="0.2722%" height="15" fill="rgb(210,169,34)" fg:x="28530" fg:w="100"/><text x="77.8953%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (109 samples, 0.30%)</title><rect x="77.6263%" y="324" width="0.2966%" height="15" fill="rgb(241,121,31)" fg:x="28523" fg:w="109"/><text x="77.8763%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (62 samples, 0.17%)</title><rect x="77.9746%" y="324" width="0.1687%" height="15" fill="rgb(232,40,11)" fg:x="28651" fg:w="62"/><text x="78.2246%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (59 samples, 0.16%)</title><rect x="78.2332%" y="324" width="0.1606%" height="15" fill="rgb(205,86,26)" fg:x="28746" fg:w="59"/><text x="78.4832%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (46 samples, 0.13%)</title><rect x="78.4618%" y="324" width="0.1252%" height="15" fill="rgb(231,126,28)" fg:x="28830" fg:w="46"/><text x="78.7118%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (579 samples, 1.58%)</title><rect x="77.0575%" y="276" width="1.5758%" height="15" fill="rgb(219,221,18)" fg:x="28314" fg:w="579"/><text x="77.3075%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (577 samples, 1.57%)</title><rect x="77.0629%" y="292" width="1.5703%" height="15" fill="rgb(211,40,0)" fg:x="28316" fg:w="577"/><text x="77.3129%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (406 samples, 1.10%)</title><rect x="77.5283%" y="308" width="1.1049%" height="15" fill="rgb(239,85,43)" fg:x="28487" fg:w="406"/><text x="77.7783%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (41 samples, 0.11%)</title><rect x="78.6496%" y="308" width="0.1116%" height="15" fill="rgb(231,55,21)" fg:x="28899" fg:w="41"/><text x="78.8996%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (628 samples, 1.71%)</title><rect x="77.0548%" y="260" width="1.7091%" height="15" fill="rgb(225,184,43)" fg:x="28313" fg:w="628"/><text x="77.3048%" y="270.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (48 samples, 0.13%)</title><rect x="78.6332%" y="276" width="0.1306%" height="15" fill="rgb(251,158,41)" fg:x="28893" fg:w="48"/><text x="78.8832%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (44 samples, 0.12%)</title><rect x="78.6441%" y="292" width="0.1197%" height="15" fill="rgb(234,159,37)" fg:x="28897" fg:w="44"/><text x="78.8941%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (633 samples, 1.72%)</title><rect x="77.0548%" y="244" width="1.7227%" height="15" fill="rgb(216,204,22)" fg:x="28313" fg:w="633"/><text x="77.3048%" y="254.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (185 samples, 0.50%)</title><rect x="78.7775%" y="276" width="0.5035%" height="15" fill="rgb(214,17,3)" fg:x="28946" fg:w="185"/><text x="79.0275%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (185 samples, 0.50%)</title><rect x="78.7775%" y="292" width="0.5035%" height="15" fill="rgb(212,111,17)" fg:x="28946" fg:w="185"/><text x="79.0275%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (132 samples, 0.36%)</title><rect x="78.9217%" y="308" width="0.3592%" height="15" fill="rgb(221,157,24)" fg:x="28999" fg:w="132"/><text x="79.1717%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (199 samples, 0.54%)</title><rect x="78.7775%" y="260" width="0.5416%" height="15" fill="rgb(252,16,13)" fg:x="28946" fg:w="199"/><text x="79.0275%" y="270.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (462 samples, 1.26%)</title><rect x="79.3871%" y="372" width="1.2573%" height="15" fill="rgb(221,62,2)" fg:x="29170" fg:w="462"/><text x="79.6371%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (462 samples, 1.26%)</title><rect x="79.3871%" y="388" width="1.2573%" height="15" fill="rgb(247,87,22)" fg:x="29170" fg:w="462"/><text x="79.6371%" y="398.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (511 samples, 1.39%)</title><rect x="79.3789%" y="308" width="1.3907%" height="15" fill="rgb(215,73,9)" fg:x="29167" fg:w="511"/><text x="79.6289%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (511 samples, 1.39%)</title><rect x="79.3789%" y="324" width="1.3907%" height="15" fill="rgb(207,175,33)" fg:x="29167" fg:w="511"/><text x="79.6289%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (508 samples, 1.38%)</title><rect x="79.3871%" y="340" width="1.3825%" height="15" fill="rgb(243,129,54)" fg:x="29170" fg:w="508"/><text x="79.6371%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (508 samples, 1.38%)</title><rect x="79.3871%" y="356" width="1.3825%" height="15" fill="rgb(227,119,45)" fg:x="29170" fg:w="508"/><text x="79.6371%" y="366.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:314) (46 samples, 0.13%)</title><rect x="80.6445%" y="372" width="0.1252%" height="15" fill="rgb(205,109,36)" fg:x="29632" fg:w="46"/><text x="80.8945%" y="382.50"></text></g><g><title>__init__ (pandas/core/arrays/arrow/array.py:298) (46 samples, 0.13%)</title><rect x="80.6445%" y="388" width="0.1252%" height="15" fill="rgb(205,6,39)" fg:x="29632" fg:w="46"/><text x="80.8945%" y="398.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (516 samples, 1.40%)</title><rect x="79.3789%" y="292" width="1.4043%" height="15" fill="rgb(221,32,16)" fg:x="29167" fg:w="516"/><text x="79.6289%" y="302.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:329) (1,403 samples, 3.82%)</title><rect x="76.9704%" y="228" width="3.8183%" height="15" fill="rgb(228,144,50)" fg:x="28282" fg:w="1403"/><text x="77.2204%" y="238.50">perf..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (739 samples, 2.01%)</title><rect x="78.7775%" y="244" width="2.0112%" height="15" fill="rgb(229,201,53)" fg:x="28946" fg:w="739"/><text x="79.0275%" y="254.50">_..</text></g><g><title>astype (pandas/core/generic.py:6665) (518 samples, 1.41%)</title><rect x="79.3789%" y="260" width="1.4098%" height="15" fill="rgb(249,153,27)" fg:x="29167" fg:w="518"/><text x="79.6289%" y="270.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (518 samples, 1.41%)</title><rect x="79.3789%" y="276" width="1.4098%" height="15" fill="rgb(227,106,25)" fg:x="29167" fg:w="518"/><text x="79.6289%" y="286.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (65 samples, 0.18%)</title><rect x="81.0282%" y="324" width="0.1769%" height="15" fill="rgb(230,65,29)" fg:x="29773" fg:w="65"/><text x="81.2782%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (79 samples, 0.22%)</title><rect x="81.0200%" y="308" width="0.2150%" height="15" fill="rgb(221,57,46)" fg:x="29770" fg:w="79"/><text x="81.2700%" y="318.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (76 samples, 0.21%)</title><rect x="81.3711%" y="340" width="0.2068%" height="15" fill="rgb(229,161,17)" fg:x="29899" fg:w="76"/><text x="81.6211%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (81 samples, 0.22%)</title><rect x="81.3629%" y="324" width="0.2204%" height="15" fill="rgb(222,213,11)" fg:x="29896" fg:w="81"/><text x="81.6129%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (55 samples, 0.15%)</title><rect x="81.6079%" y="324" width="0.1497%" height="15" fill="rgb(235,35,13)" fg:x="29986" fg:w="55"/><text x="81.8579%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (50 samples, 0.14%)</title><rect x="81.8528%" y="324" width="0.1361%" height="15" fill="rgb(233,158,34)" fg:x="30076" fg:w="50"/><text x="82.1028%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (39 samples, 0.11%)</title><rect x="81.9916%" y="324" width="0.1061%" height="15" fill="rgb(215,151,48)" fg:x="30127" fg:w="39"/><text x="82.2416%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (59 samples, 0.16%)</title><rect x="82.0978%" y="324" width="0.1606%" height="15" fill="rgb(229,84,14)" fg:x="30166" fg:w="59"/><text x="82.3478%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (552 samples, 1.50%)</title><rect x="80.8078%" y="276" width="1.5023%" height="15" fill="rgb(229,68,14)" fg:x="29692" fg:w="552"/><text x="81.0578%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (549 samples, 1.49%)</title><rect x="80.8159%" y="292" width="1.4941%" height="15" fill="rgb(243,106,26)" fg:x="29695" fg:w="549"/><text x="81.0659%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (395 samples, 1.08%)</title><rect x="81.2350%" y="308" width="1.0750%" height="15" fill="rgb(206,45,38)" fg:x="29849" fg:w="395"/><text x="81.4850%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (583 samples, 1.59%)</title><rect x="80.8078%" y="260" width="1.5867%" height="15" fill="rgb(226,6,15)" fg:x="29692" fg:w="583"/><text x="81.0578%" y="270.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (584 samples, 1.59%)</title><rect x="80.8078%" y="244" width="1.5894%" height="15" fill="rgb(232,22,54)" fg:x="29692" fg:w="584"/><text x="81.0578%" y="254.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (153 samples, 0.42%)</title><rect x="82.5087%" y="372" width="0.4164%" height="15" fill="rgb(229,222,32)" fg:x="30317" fg:w="153"/><text x="82.7587%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (153 samples, 0.42%)</title><rect x="82.5087%" y="388" width="0.4164%" height="15" fill="rgb(228,62,29)" fg:x="30317" fg:w="153"/><text x="82.7587%" y="398.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (162 samples, 0.44%)</title><rect x="82.5005%" y="308" width="0.4409%" height="15" fill="rgb(251,103,34)" fg:x="30314" fg:w="162"/><text x="82.7505%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (161 samples, 0.44%)</title><rect x="82.5033%" y="324" width="0.4382%" height="15" fill="rgb(233,12,30)" fg:x="30315" fg:w="161"/><text x="82.7533%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (160 samples, 0.44%)</title><rect x="82.5060%" y="340" width="0.4354%" height="15" fill="rgb(238,52,0)" fg:x="30316" fg:w="160"/><text x="82.7560%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (160 samples, 0.44%)</title><rect x="82.5060%" y="356" width="0.4354%" height="15" fill="rgb(223,98,5)" fg:x="30316" fg:w="160"/><text x="82.7560%" y="366.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (163 samples, 0.44%)</title><rect x="82.5005%" y="292" width="0.4436%" height="15" fill="rgb(228,75,37)" fg:x="30314" fg:w="163"/><text x="82.7505%" y="302.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:330) (793 samples, 2.16%)</title><rect x="80.7887%" y="228" width="2.1582%" height="15" fill="rgb(205,115,49)" fg:x="29685" fg:w="793"/><text x="81.0387%" y="238.50">p..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (202 samples, 0.55%)</title><rect x="82.3971%" y="244" width="0.5497%" height="15" fill="rgb(250,154,43)" fg:x="30276" fg:w="202"/><text x="82.6471%" y="254.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (165 samples, 0.45%)</title><rect x="82.4978%" y="260" width="0.4491%" height="15" fill="rgb(226,43,29)" fg:x="30313" fg:w="165"/><text x="82.7478%" y="270.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (165 samples, 0.45%)</title><rect x="82.4978%" y="276" width="0.4491%" height="15" fill="rgb(249,228,39)" fg:x="30313" fg:w="165"/><text x="82.7478%" y="286.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (101 samples, 0.27%)</title><rect x="83.0394%" y="292" width="0.2749%" height="15" fill="rgb(216,79,43)" fg:x="30512" fg:w="101"/><text x="83.2894%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (101 samples, 0.27%)</title><rect x="83.0394%" y="308" width="0.2749%" height="15" fill="rgb(228,95,12)" fg:x="30512" fg:w="101"/><text x="83.2894%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (70 samples, 0.19%)</title><rect x="83.1238%" y="324" width="0.1905%" height="15" fill="rgb(249,221,15)" fg:x="30543" fg:w="70"/><text x="83.3738%" y="334.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (109 samples, 0.30%)</title><rect x="83.0394%" y="260" width="0.2966%" height="15" fill="rgb(233,34,13)" fg:x="30512" fg:w="109"/><text x="83.2894%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (109 samples, 0.30%)</title><rect x="83.0394%" y="276" width="0.2966%" height="15" fill="rgb(214,103,39)" fg:x="30512" fg:w="109"/><text x="83.2894%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (112 samples, 0.30%)</title><rect x="83.0340%" y="244" width="0.3048%" height="15" fill="rgb(251,126,39)" fg:x="30510" fg:w="112"/><text x="83.2840%" y="254.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (45 samples, 0.12%)</title><rect x="83.4612%" y="340" width="0.1225%" height="15" fill="rgb(214,216,36)" fg:x="30667" fg:w="45"/><text x="83.7112%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (55 samples, 0.15%)</title><rect x="83.4531%" y="324" width="0.1497%" height="15" fill="rgb(220,221,8)" fg:x="30664" fg:w="55"/><text x="83.7031%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (50 samples, 0.14%)</title><rect x="83.6681%" y="340" width="0.1361%" height="15" fill="rgb(240,216,3)" fg:x="30743" fg:w="50"/><text x="83.9181%" y="350.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (47 samples, 0.13%)</title><rect x="83.6762%" y="356" width="0.1279%" height="15" fill="rgb(232,218,17)" fg:x="30746" fg:w="47"/><text x="83.9262%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (53 samples, 0.14%)</title><rect x="84.1035%" y="340" width="0.1442%" height="15" fill="rgb(229,163,45)" fg:x="30903" fg:w="53"/><text x="84.3535%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (348 samples, 0.95%)</title><rect x="83.3524%" y="292" width="0.9471%" height="15" fill="rgb(231,110,42)" fg:x="30627" fg:w="348"/><text x="83.6024%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (344 samples, 0.94%)</title><rect x="83.3633%" y="308" width="0.9362%" height="15" fill="rgb(208,170,48)" fg:x="30631" fg:w="344"/><text x="83.6133%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (256 samples, 0.70%)</title><rect x="83.6028%" y="324" width="0.6967%" height="15" fill="rgb(239,116,25)" fg:x="30719" fg:w="256"/><text x="83.8528%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (370 samples, 1.01%)</title><rect x="83.3524%" y="276" width="1.0070%" height="15" fill="rgb(219,200,50)" fg:x="30627" fg:w="370"/><text x="83.6024%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (378 samples, 1.03%)</title><rect x="83.3388%" y="244" width="1.0287%" height="15" fill="rgb(245,200,0)" fg:x="30622" fg:w="378"/><text x="83.5888%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (374 samples, 1.02%)</title><rect x="83.3497%" y="260" width="1.0179%" height="15" fill="rgb(245,119,33)" fg:x="30626" fg:w="374"/><text x="83.5997%" y="270.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (56 samples, 0.15%)</title><rect x="84.5063%" y="340" width="0.1524%" height="15" fill="rgb(231,125,12)" fg:x="31051" fg:w="56"/><text x="84.7563%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (66 samples, 0.18%)</title><rect x="84.5036%" y="324" width="0.1796%" height="15" fill="rgb(216,96,41)" fg:x="31050" fg:w="66"/><text x="84.7536%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (61 samples, 0.17%)</title><rect x="84.7676%" y="340" width="0.1660%" height="15" fill="rgb(248,43,45)" fg:x="31147" fg:w="61"/><text x="85.0176%" y="350.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (56 samples, 0.15%)</title><rect x="84.7812%" y="356" width="0.1524%" height="15" fill="rgb(217,222,7)" fg:x="31152" fg:w="56"/><text x="85.0312%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (44 samples, 0.12%)</title><rect x="85.2520%" y="340" width="0.1197%" height="15" fill="rgb(233,28,6)" fg:x="31325" fg:w="44"/><text x="85.5020%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (373 samples, 1.02%)</title><rect x="84.3866%" y="292" width="1.0151%" height="15" fill="rgb(231,218,15)" fg:x="31007" fg:w="373"/><text x="84.6366%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (371 samples, 1.01%)</title><rect x="84.3920%" y="308" width="1.0097%" height="15" fill="rgb(226,171,48)" fg:x="31009" fg:w="371"/><text x="84.6420%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (264 samples, 0.72%)</title><rect x="84.6832%" y="324" width="0.7185%" height="15" fill="rgb(235,201,9)" fg:x="31116" fg:w="264"/><text x="84.9332%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (397 samples, 1.08%)</title><rect x="84.3866%" y="276" width="1.0804%" height="15" fill="rgb(217,80,15)" fg:x="31007" fg:w="397"/><text x="84.6366%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:186) (405 samples, 1.10%)</title><rect x="84.3675%" y="244" width="1.1022%" height="15" fill="rgb(219,152,8)" fg:x="31000" fg:w="405"/><text x="84.6175%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (398 samples, 1.08%)</title><rect x="84.3866%" y="260" width="1.0832%" height="15" fill="rgb(243,107,38)" fg:x="31007" fg:w="398"/><text x="84.6366%" y="270.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (142 samples, 0.39%)</title><rect x="85.5623%" y="308" width="0.3865%" height="15" fill="rgb(231,17,5)" fg:x="31439" fg:w="142"/><text x="85.8123%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (97 samples, 0.26%)</title><rect x="85.6847%" y="324" width="0.2640%" height="15" fill="rgb(209,25,54)" fg:x="31484" fg:w="97"/><text x="85.9347%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (145 samples, 0.39%)</title><rect x="85.5568%" y="292" width="0.3946%" height="15" fill="rgb(219,0,2)" fg:x="31437" fg:w="145"/><text x="85.8068%" y="302.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:331) (1,111 samples, 3.02%)</title><rect x="82.9469%" y="228" width="3.0236%" height="15" fill="rgb(246,9,5)" fg:x="30478" fg:w="1111"/><text x="83.1969%" y="238.50">per..</text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:188) (154 samples, 0.42%)</title><rect x="85.5514%" y="244" width="0.4191%" height="15" fill="rgb(226,159,4)" fg:x="31435" fg:w="154"/><text x="85.8014%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (152 samples, 0.41%)</title><rect x="85.5568%" y="260" width="0.4137%" height="15" fill="rgb(219,175,34)" fg:x="31437" fg:w="152"/><text x="85.8068%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (152 samples, 0.41%)</title><rect x="85.5568%" y="276" width="0.4137%" height="15" fill="rgb(236,10,46)" fg:x="31437" fg:w="152"/><text x="85.8068%" y="286.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (50 samples, 0.14%)</title><rect x="85.9923%" y="276" width="0.1361%" height="15" fill="rgb(240,211,16)" fg:x="31597" fg:w="50"/><text x="86.2423%" y="286.50"></text></g><g><title>concat_partition_and_margin (lsdb/dask/merge_catalog_functions.py:190) (61 samples, 0.17%)</title><rect x="85.9705%" y="244" width="0.1660%" height="15" fill="rgb(205,3,43)" fg:x="31589" fg:w="61"/><text x="86.2205%" y="254.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (61 samples, 0.17%)</title><rect x="85.9705%" y="260" width="0.1660%" height="15" fill="rgb(245,7,22)" fg:x="31589" fg:w="61"/><text x="86.2205%" y="270.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:335) (63 samples, 0.17%)</title><rect x="85.9705%" y="228" width="0.1715%" height="15" fill="rgb(239,132,32)" fg:x="31589" fg:w="63"/><text x="86.2205%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:572) (62 samples, 0.17%)</title><rect x="86.2127%" y="244" width="0.1687%" height="15" fill="rgb(228,202,34)" fg:x="31678" fg:w="62"/><text x="86.4627%" y="254.50"></text></g><g><title>to_numpy (pandas/core/base.py:641) (62 samples, 0.17%)</title><rect x="86.2127%" y="260" width="0.1687%" height="15" fill="rgb(254,200,22)" fg:x="31678" fg:w="62"/><text x="86.4627%" y="270.50"></text></g><g><title>to_numpy (pandas/core/arrays/arrow/array.py:1490) (60 samples, 0.16%)</title><rect x="86.2182%" y="276" width="0.1633%" height="15" fill="rgb(219,10,39)" fg:x="31680" fg:w="60"/><text x="86.4682%" y="286.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:576) (44 samples, 0.12%)</title><rect x="86.3815%" y="244" width="0.1197%" height="15" fill="rgb(226,210,39)" fg:x="31740" fg:w="44"/><text x="86.6315%" y="254.50"></text></g><g><title>isin (numpy/lib/_arraysetops_impl.py:1177) (44 samples, 0.12%)</title><rect x="86.3815%" y="260" width="0.1197%" height="15" fill="rgb(208,219,16)" fg:x="31740" fg:w="44"/><text x="86.6315%" y="270.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:336) (236 samples, 0.64%)</title><rect x="86.1420%" y="228" width="0.6423%" height="15" fill="rgb(216,158,51)" fg:x="31652" fg:w="236"/><text x="86.3920%" y="238.50"></text></g><g><title>filter_by_spatial_index_to_margin (lsdb/dask/merge_catalog_functions.py:577) (104 samples, 0.28%)</title><rect x="86.5012%" y="244" width="0.2830%" height="15" fill="rgb(233,14,44)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:234) (104 samples, 0.28%)</title><rect x="86.5012%" y="260" width="0.2830%" height="15" fill="rgb(237,97,39)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4104) (104 samples, 0.28%)</title><rect x="86.5012%" y="276" width="0.2830%" height="15" fill="rgb(218,198,43)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4166) (104 samples, 0.28%)</title><rect x="86.5012%" y="292" width="0.2830%" height="15" fill="rgb(231,104,20)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4175) (104 samples, 0.28%)</title><rect x="86.5012%" y="308" width="0.2830%" height="15" fill="rgb(254,36,13)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="318.50"></text></g><g><title>take (pandas/core/generic.py:4155) (104 samples, 0.28%)</title><rect x="86.5012%" y="324" width="0.2830%" height="15" fill="rgb(248,14,50)" fg:x="31784" fg:w="104"/><text x="86.7512%" y="334.50"></text></g><g><title>take (pandas/core/internals/managers.py:913) (74 samples, 0.20%)</title><rect x="86.5828%" y="340" width="0.2014%" height="15" fill="rgb(217,107,29)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="350.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:707) (74 samples, 0.20%)</title><rect x="86.5828%" y="356" width="0.2014%" height="15" fill="rgb(251,169,33)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="366.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1373) (74 samples, 0.20%)</title><rect x="86.5828%" y="372" width="0.2014%" height="15" fill="rgb(217,108,32)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="382.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (74 samples, 0.20%)</title><rect x="86.5828%" y="388" width="0.2014%" height="15" fill="rgb(219,66,42)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="398.50"></text></g><g><title>take (pandas/core/arrays/arrow/array.py:1400) (74 samples, 0.20%)</title><rect x="86.5828%" y="404" width="0.2014%" height="15" fill="rgb(206,180,7)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="414.50"></text></g><g><title>take (pyarrow/compute.py:506) (74 samples, 0.20%)</title><rect x="86.5828%" y="420" width="0.2014%" height="15" fill="rgb(208,226,31)" fg:x="31814" fg:w="74"/><text x="86.8328%" y="430.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (85 samples, 0.23%)</title><rect x="86.9611%" y="324" width="0.2313%" height="15" fill="rgb(218,26,49)" fg:x="31953" fg:w="85"/><text x="87.2111%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (99 samples, 0.27%)</title><rect x="86.9448%" y="308" width="0.2694%" height="15" fill="rgb(233,197,48)" fg:x="31947" fg:w="99"/><text x="87.1948%" y="318.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (79 samples, 0.22%)</title><rect x="87.3422%" y="340" width="0.2150%" height="15" fill="rgb(252,181,51)" fg:x="32093" fg:w="79"/><text x="87.5922%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (82 samples, 0.22%)</title><rect x="87.3367%" y="324" width="0.2232%" height="15" fill="rgb(253,90,19)" fg:x="32091" fg:w="82"/><text x="87.5867%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (65 samples, 0.18%)</title><rect x="87.6306%" y="324" width="0.1769%" height="15" fill="rgb(215,171,30)" fg:x="32199" fg:w="65"/><text x="87.8806%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:589) (38 samples, 0.10%)</title><rect x="87.8075%" y="324" width="0.1034%" height="15" fill="rgb(214,222,9)" fg:x="32264" fg:w="38"/><text x="88.0575%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (58 samples, 0.16%)</title><rect x="87.9137%" y="324" width="0.1578%" height="15" fill="rgb(223,3,22)" fg:x="32303" fg:w="58"/><text x="88.1637%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (74 samples, 0.20%)</title><rect x="88.1722%" y="324" width="0.2014%" height="15" fill="rgb(225,196,46)" fg:x="32398" fg:w="74"/><text x="88.4222%" y="334.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6342) (42 samples, 0.11%)</title><rect x="88.2593%" y="340" width="0.1143%" height="15" fill="rgb(209,110,37)" fg:x="32430" fg:w="42"/><text x="88.5093%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (605 samples, 1.65%)</title><rect x="86.7870%" y="276" width="1.6465%" height="15" fill="rgb(249,89,12)" fg:x="31889" fg:w="605"/><text x="87.0370%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (598 samples, 1.63%)</title><rect x="86.8060%" y="292" width="1.6275%" height="15" fill="rgb(226,27,33)" fg:x="31896" fg:w="598"/><text x="87.0560%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (448 samples, 1.22%)</title><rect x="87.2142%" y="308" width="1.2192%" height="15" fill="rgb(213,82,22)" fg:x="32046" fg:w="448"/><text x="87.4642%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (652 samples, 1.77%)</title><rect x="86.7870%" y="260" width="1.7744%" height="15" fill="rgb(248,140,0)" fg:x="31889" fg:w="652"/><text x="87.0370%" y="270.50">_..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (45 samples, 0.12%)</title><rect x="88.4389%" y="276" width="0.1225%" height="15" fill="rgb(228,106,3)" fg:x="32496" fg:w="45"/><text x="88.6889%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (41 samples, 0.11%)</title><rect x="88.4498%" y="292" width="0.1116%" height="15" fill="rgb(209,23,37)" fg:x="32500" fg:w="41"/><text x="88.6998%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (654 samples, 1.78%)</title><rect x="86.7870%" y="244" width="1.7799%" height="15" fill="rgb(241,93,50)" fg:x="31889" fg:w="654"/><text x="87.0370%" y="254.50">_..</text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (167 samples, 0.45%)</title><rect x="88.6703%" y="372" width="0.4545%" height="15" fill="rgb(253,46,43)" fg:x="32581" fg:w="167"/><text x="88.9203%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (167 samples, 0.45%)</title><rect x="88.6703%" y="388" width="0.4545%" height="15" fill="rgb(226,206,43)" fg:x="32581" fg:w="167"/><text x="88.9203%" y="398.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:339) (868 samples, 2.36%)</title><rect x="86.7842%" y="228" width="2.3623%" height="15" fill="rgb(217,54,7)" fg:x="31888" fg:w="868"/><text x="87.0342%" y="238.50">pe..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (213 samples, 0.58%)</title><rect x="88.5668%" y="244" width="0.5797%" height="15" fill="rgb(223,5,52)" fg:x="32543" fg:w="213"/><text x="88.8168%" y="254.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (178 samples, 0.48%)</title><rect x="88.6621%" y="260" width="0.4844%" height="15" fill="rgb(206,52,46)" fg:x="32578" fg:w="178"/><text x="88.9121%" y="270.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (178 samples, 0.48%)</title><rect x="88.6621%" y="276" width="0.4844%" height="15" fill="rgb(253,136,11)" fg:x="32578" fg:w="178"/><text x="88.9121%" y="286.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (178 samples, 0.48%)</title><rect x="88.6621%" y="292" width="0.4844%" height="15" fill="rgb(208,106,33)" fg:x="32578" fg:w="178"/><text x="88.9121%" y="302.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (177 samples, 0.48%)</title><rect x="88.6648%" y="308" width="0.4817%" height="15" fill="rgb(206,54,4)" fg:x="32579" fg:w="177"/><text x="88.9148%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (176 samples, 0.48%)</title><rect x="88.6675%" y="324" width="0.4790%" height="15" fill="rgb(213,3,15)" fg:x="32580" fg:w="176"/><text x="88.9175%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (176 samples, 0.48%)</title><rect x="88.6675%" y="340" width="0.4790%" height="15" fill="rgb(252,211,39)" fg:x="32580" fg:w="176"/><text x="88.9175%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (176 samples, 0.48%)</title><rect x="88.6675%" y="356" width="0.4790%" height="15" fill="rgb(223,6,36)" fg:x="32580" fg:w="176"/><text x="88.9175%" y="366.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (74 samples, 0.20%)</title><rect x="89.4024%" y="324" width="0.2014%" height="15" fill="rgb(252,169,45)" fg:x="32850" fg:w="74"/><text x="89.6524%" y="334.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (88 samples, 0.24%)</title><rect x="89.3915%" y="308" width="0.2395%" height="15" fill="rgb(212,48,26)" fg:x="32846" fg:w="88"/><text x="89.6415%" y="318.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (75 samples, 0.20%)</title><rect x="89.7779%" y="340" width="0.2041%" height="15" fill="rgb(251,102,48)" fg:x="32988" fg:w="75"/><text x="90.0279%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (86 samples, 0.23%)</title><rect x="89.7534%" y="324" width="0.2341%" height="15" fill="rgb(243,208,16)" fg:x="32979" fg:w="86"/><text x="90.0034%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (65 samples, 0.18%)</title><rect x="90.0474%" y="324" width="0.1769%" height="15" fill="rgb(219,96,24)" fg:x="33087" fg:w="65"/><text x="90.2974%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:591) (59 samples, 0.16%)</title><rect x="90.3005%" y="324" width="0.1606%" height="15" fill="rgb(219,33,29)" fg:x="33180" fg:w="59"/><text x="90.5505%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:595) (37 samples, 0.10%)</title><rect x="90.4610%" y="324" width="0.1007%" height="15" fill="rgb(223,176,5)" fg:x="33239" fg:w="37"/><text x="90.7110%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (67 samples, 0.18%)</title><rect x="90.5617%" y="324" width="0.1823%" height="15" fill="rgb(228,140,14)" fg:x="33276" fg:w="67"/><text x="90.8117%" y="334.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (587 samples, 1.60%)</title><rect x="89.1955%" y="292" width="1.5975%" height="15" fill="rgb(217,179,31)" fg:x="32774" fg:w="587"/><text x="89.4455%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (427 samples, 1.16%)</title><rect x="89.6310%" y="308" width="1.1621%" height="15" fill="rgb(230,9,30)" fg:x="32934" fg:w="427"/><text x="89.8810%" y="318.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (595 samples, 1.62%)</title><rect x="89.1765%" y="276" width="1.6193%" height="15" fill="rgb(230,136,20)" fg:x="32767" fg:w="595"/><text x="89.4265%" y="286.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (38 samples, 0.10%)</title><rect x="90.8067%" y="308" width="0.1034%" height="15" fill="rgb(215,210,22)" fg:x="33366" fg:w="38"/><text x="91.0567%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (638 samples, 1.74%)</title><rect x="89.1765%" y="260" width="1.7363%" height="15" fill="rgb(218,43,5)" fg:x="32767" fg:w="638"/><text x="89.4265%" y="270.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (42 samples, 0.11%)</title><rect x="90.7985%" y="276" width="0.1143%" height="15" fill="rgb(216,11,5)" fg:x="33363" fg:w="42"/><text x="91.0485%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (41 samples, 0.11%)</title><rect x="90.8012%" y="292" width="0.1116%" height="15" fill="rgb(209,82,29)" fg:x="33364" fg:w="41"/><text x="91.0512%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (645 samples, 1.76%)</title><rect x="89.1737%" y="244" width="1.7554%" height="15" fill="rgb(244,115,12)" fg:x="32766" fg:w="645"/><text x="89.4237%" y="254.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (176 samples, 0.48%)</title><rect x="90.9346%" y="276" width="0.4790%" height="15" fill="rgb(222,82,18)" fg:x="33413" fg:w="176"/><text x="91.1846%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (174 samples, 0.47%)</title><rect x="90.9400%" y="292" width="0.4735%" height="15" fill="rgb(249,227,8)" fg:x="33415" fg:w="174"/><text x="91.1900%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (120 samples, 0.33%)</title><rect x="91.0870%" y="308" width="0.3266%" height="15" fill="rgb(253,141,45)" fg:x="33469" fg:w="120"/><text x="91.3370%" y="318.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (185 samples, 0.50%)</title><rect x="90.9346%" y="260" width="0.5035%" height="15" fill="rgb(234,184,4)" fg:x="33413" fg:w="185"/><text x="91.1846%" y="270.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:313) (402 samples, 1.09%)</title><rect x="91.5578%" y="372" width="1.0941%" height="15" fill="rgb(218,194,23)" fg:x="33642" fg:w="402"/><text x="91.8078%" y="382.50"></text></g><g><title>_box_pa_array (pandas/core/arrays/arrow/array.py:503) (399 samples, 1.09%)</title><rect x="91.5660%" y="388" width="1.0859%" height="15" fill="rgb(235,66,41)" fg:x="33645" fg:w="399"/><text x="91.8160%" y="398.50"></text></g><g><title>_from_sequence (pandas/core/arrays/arrow/array.py:314) (48 samples, 0.13%)</title><rect x="92.6519%" y="372" width="0.1306%" height="15" fill="rgb(245,217,1)" fg:x="34044" fg:w="48"/><text x="92.9019%" y="382.50"></text></g><g><title>__init__ (pandas/core/arrays/arrow/array.py:298) (48 samples, 0.13%)</title><rect x="92.6519%" y="388" width="0.1306%" height="15" fill="rgb(229,91,1)" fg:x="34044" fg:w="48"/><text x="92.9019%" y="398.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:784) (459 samples, 1.25%)</title><rect x="91.5388%" y="308" width="1.2492%" height="15" fill="rgb(207,101,30)" fg:x="33635" fg:w="459"/><text x="91.7888%" y="318.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (457 samples, 1.24%)</title><rect x="91.5442%" y="324" width="1.2437%" height="15" fill="rgb(223,82,49)" fg:x="33637" fg:w="457"/><text x="91.7942%" y="334.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (452 samples, 1.23%)</title><rect x="91.5578%" y="340" width="1.2301%" height="15" fill="rgb(218,167,17)" fg:x="33642" fg:w="452"/><text x="91.8078%" y="350.50"></text></g><g><title>_astype_nansafe (pandas/core/dtypes/astype.py:80) (452 samples, 1.23%)</title><rect x="91.5578%" y="356" width="1.2301%" height="15" fill="rgb(208,103,14)" fg:x="33642" fg:w="452"/><text x="91.8078%" y="366.50"></text></g><g><title>astype (pandas/core/internals/managers.py:449) (464 samples, 1.26%)</title><rect x="91.5306%" y="276" width="1.2628%" height="15" fill="rgb(238,20,8)" fg:x="33632" fg:w="464"/><text x="91.7806%" y="286.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (462 samples, 1.26%)</title><rect x="91.5360%" y="292" width="1.2573%" height="15" fill="rgb(218,80,54)" fg:x="33634" fg:w="462"/><text x="91.7860%" y="302.50"></text></g><g><title>astype (pandas/core/generic.py:6665) (466 samples, 1.27%)</title><rect x="91.5306%" y="260" width="1.2682%" height="15" fill="rgb(240,144,17)" fg:x="33632" fg:w="466"/><text x="91.7806%" y="270.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:340) (1,343 samples, 3.66%)</title><rect x="89.1465%" y="228" width="3.6550%" height="15" fill="rgb(245,27,50)" fg:x="32756" fg:w="1343"/><text x="89.3965%" y="238.50">perf..</text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:131) (688 samples, 1.87%)</title><rect x="90.9291%" y="244" width="1.8724%" height="15" fill="rgb(251,51,7)" fg:x="33411" fg:w="688"/><text x="91.1791%" y="254.50">_..</text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (118 samples, 0.32%)</title><rect x="92.9050%" y="292" width="0.3211%" height="15" fill="rgb(245,217,29)" fg:x="34137" fg:w="118"/><text x="93.1550%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (118 samples, 0.32%)</title><rect x="92.9050%" y="308" width="0.3211%" height="15" fill="rgb(221,176,29)" fg:x="34137" fg:w="118"/><text x="93.1550%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (83 samples, 0.23%)</title><rect x="93.0002%" y="324" width="0.2259%" height="15" fill="rgb(212,180,24)" fg:x="34172" fg:w="83"/><text x="93.2502%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (124 samples, 0.34%)</title><rect x="92.9050%" y="276" width="0.3375%" height="15" fill="rgb(254,24,2)" fg:x="34137" fg:w="124"/><text x="93.1550%" y="286.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (125 samples, 0.34%)</title><rect x="92.9050%" y="260" width="0.3402%" height="15" fill="rgb(230,100,2)" fg:x="34137" fg:w="125"/><text x="93.1550%" y="270.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (131 samples, 0.36%)</title><rect x="92.8941%" y="244" width="0.3565%" height="15" fill="rgb(219,142,25)" fg:x="34133" fg:w="131"/><text x="93.1441%" y="254.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (43 samples, 0.12%)</title><rect x="93.3676%" y="340" width="0.1170%" height="15" fill="rgb(240,73,43)" fg:x="34307" fg:w="43"/><text x="93.6176%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (50 samples, 0.14%)</title><rect x="93.3595%" y="324" width="0.1361%" height="15" fill="rgb(214,114,15)" fg:x="34304" fg:w="50"/><text x="93.6095%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (57 samples, 0.16%)</title><rect x="93.5609%" y="340" width="0.1551%" height="15" fill="rgb(207,130,4)" fg:x="34378" fg:w="57"/><text x="93.8109%" y="350.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (54 samples, 0.15%)</title><rect x="93.5690%" y="356" width="0.1470%" height="15" fill="rgb(221,25,40)" fg:x="34381" fg:w="54"/><text x="93.8190%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:587) (49 samples, 0.13%)</title><rect x="93.7378%" y="340" width="0.1334%" height="15" fill="rgb(241,184,7)" fg:x="34443" fg:w="49"/><text x="93.9878%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (39 samples, 0.11%)</title><rect x="94.0453%" y="340" width="0.1061%" height="15" fill="rgb(235,159,4)" fg:x="34556" fg:w="39"/><text x="94.2953%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (339 samples, 0.92%)</title><rect x="93.2533%" y="292" width="0.9226%" height="15" fill="rgb(214,87,48)" fg:x="34265" fg:w="339"/><text x="93.5033%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (338 samples, 0.92%)</title><rect x="93.2560%" y="308" width="0.9199%" height="15" fill="rgb(246,198,24)" fg:x="34266" fg:w="338"/><text x="93.5060%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (250 samples, 0.68%)</title><rect x="93.4955%" y="324" width="0.6804%" height="15" fill="rgb(209,66,40)" fg:x="34354" fg:w="250"/><text x="93.7455%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (361 samples, 0.98%)</title><rect x="93.2533%" y="276" width="0.9825%" height="15" fill="rgb(233,147,39)" fg:x="34265" fg:w="361"/><text x="93.5033%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (365 samples, 0.99%)</title><rect x="93.2506%" y="244" width="0.9934%" height="15" fill="rgb(231,145,52)" fg:x="34264" fg:w="365"/><text x="93.5006%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (364 samples, 0.99%)</title><rect x="93.2533%" y="260" width="0.9906%" height="15" fill="rgb(206,20,26)" fg:x="34265" fg:w="364"/><text x="93.5033%" y="270.50"></text></g><g><title>get_dtypes (pandas/core/internals/managers.py:288) (52 samples, 0.14%)</title><rect x="94.3637%" y="340" width="0.1415%" height="15" fill="rgb(238,220,4)" fg:x="34673" fg:w="52"/><text x="94.6137%" y="350.50"></text></g><g><title>dtypes (pandas/core/generic.py:6482) (65 samples, 0.18%)</title><rect x="94.3501%" y="324" width="0.1769%" height="15" fill="rgb(252,195,42)" fg:x="34668" fg:w="65"/><text x="94.6001%" y="334.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (44 samples, 0.12%)</title><rect x="94.6086%" y="340" width="0.1197%" height="15" fill="rgb(209,10,6)" fg:x="34763" fg:w="44"/><text x="94.8586%" y="350.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (42 samples, 0.11%)</title><rect x="94.6141%" y="356" width="0.1143%" height="15" fill="rgb(229,3,52)" fg:x="34765" fg:w="42"/><text x="94.8641%" y="366.50"></text></g><g><title>__init__ (pandas/core/series.py:596) (41 samples, 0.11%)</title><rect x="95.0332%" y="340" width="0.1116%" height="15" fill="rgb(253,49,37)" fg:x="34919" fg:w="41"/><text x="95.2832%" y="350.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (337 samples, 0.92%)</title><rect x="94.2548%" y="292" width="0.9172%" height="15" fill="rgb(240,103,49)" fg:x="34633" fg:w="337"/><text x="94.5048%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (336 samples, 0.91%)</title><rect x="94.2576%" y="308" width="0.9144%" height="15" fill="rgb(250,182,30)" fg:x="34634" fg:w="336"/><text x="94.5076%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (237 samples, 0.65%)</title><rect x="94.5270%" y="324" width="0.6450%" height="15" fill="rgb(248,8,30)" fg:x="34733" fg:w="237"/><text x="94.7770%" y="334.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (367 samples, 1.00%)</title><rect x="94.2548%" y="276" width="0.9988%" height="15" fill="rgb(237,120,30)" fg:x="34633" fg:w="367"/><text x="94.5048%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:186) (375 samples, 1.02%)</title><rect x="94.2440%" y="244" width="1.0206%" height="15" fill="rgb(221,146,34)" fg:x="34629" fg:w="375"/><text x="94.4940%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (373 samples, 1.02%)</title><rect x="94.2494%" y="260" width="1.0151%" height="15" fill="rgb(242,55,13)" fg:x="34631" fg:w="373"/><text x="94.4994%" y="270.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (167 samples, 0.45%)</title><rect x="95.3625%" y="292" width="0.4545%" height="15" fill="rgb(242,112,31)" fg:x="35040" fg:w="167"/><text x="95.6125%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (165 samples, 0.45%)</title><rect x="95.3680%" y="308" width="0.4491%" height="15" fill="rgb(249,192,27)" fg:x="35042" fg:w="165"/><text x="95.6180%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (124 samples, 0.34%)</title><rect x="95.4795%" y="324" width="0.3375%" height="15" fill="rgb(208,204,44)" fg:x="35083" fg:w="124"/><text x="95.7295%" y="334.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:341) (1,123 samples, 3.06%)</title><rect x="92.8015%" y="228" width="3.0563%" height="15" fill="rgb(208,93,54)" fg:x="34099" fg:w="1123"/><text x="93.0515%" y="238.50">per..</text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:188) (182 samples, 0.50%)</title><rect x="95.3625%" y="244" width="0.4953%" height="15" fill="rgb(242,1,31)" fg:x="35040" fg:w="182"/><text x="95.6125%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (182 samples, 0.50%)</title><rect x="95.3625%" y="260" width="0.4953%" height="15" fill="rgb(241,83,25)" fg:x="35040" fg:w="182"/><text x="95.6125%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (182 samples, 0.50%)</title><rect x="95.3625%" y="276" width="0.4953%" height="15" fill="rgb(205,169,50)" fg:x="35040" fg:w="182"/><text x="95.6125%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (37 samples, 0.10%)</title><rect x="96.1191%" y="324" width="0.1007%" height="15" fill="rgb(239,186,37)" fg:x="35318" fg:w="37"/><text x="96.3691%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (244 samples, 0.66%)</title><rect x="95.8823%" y="276" width="0.6641%" height="15" fill="rgb(205,221,10)" fg:x="35231" fg:w="244"/><text x="96.1323%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (241 samples, 0.66%)</title><rect x="95.8905%" y="292" width="0.6559%" height="15" fill="rgb(218,196,15)" fg:x="35234" fg:w="241"/><text x="96.1405%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (175 samples, 0.48%)</title><rect x="96.0701%" y="308" width="0.4763%" height="15" fill="rgb(218,196,35)" fg:x="35300" fg:w="175"/><text x="96.3201%" y="318.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:344) (284 samples, 0.77%)</title><rect x="95.8578%" y="228" width="0.7729%" height="15" fill="rgb(233,63,24)" fg:x="35222" fg:w="284"/><text x="96.1078%" y="238.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (276 samples, 0.75%)</title><rect x="95.8796%" y="244" width="0.7511%" height="15" fill="rgb(225,8,4)" fg:x="35230" fg:w="276"/><text x="96.1296%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (275 samples, 0.75%)</title><rect x="95.8823%" y="260" width="0.7484%" height="15" fill="rgb(234,105,35)" fg:x="35231" fg:w="275"/><text x="96.1323%" y="270.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:519) (43 samples, 0.12%)</title><rect x="96.8294%" y="340" width="0.1170%" height="15" fill="rgb(236,21,32)" fg:x="35579" fg:w="43"/><text x="97.0794%" y="350.50"></text></g><g><title>__init__ (pandas/core/series.py:496) (47 samples, 0.13%)</title><rect x="96.8212%" y="324" width="0.1279%" height="15" fill="rgb(228,109,6)" fg:x="35576" fg:w="47"/><text x="97.0712%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (219 samples, 0.60%)</title><rect x="96.6444%" y="276" width="0.5960%" height="15" fill="rgb(229,215,31)" fg:x="35511" fg:w="219"/><text x="96.8944%" y="286.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (213 samples, 0.58%)</title><rect x="96.6607%" y="292" width="0.5797%" height="15" fill="rgb(221,52,54)" fg:x="35517" fg:w="213"/><text x="96.9107%" y="302.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (167 samples, 0.45%)</title><rect x="96.7859%" y="308" width="0.4545%" height="15" fill="rgb(252,129,43)" fg:x="35563" fg:w="167"/><text x="97.0359%" y="318.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4650) (45 samples, 0.12%)</title><rect x="97.2485%" y="308" width="0.1225%" height="15" fill="rgb(248,183,27)" fg:x="35733" fg:w="45"/><text x="97.4985%" y="318.50"></text></g><g><title>_ixs (pandas/core/frame.py:4022) (37 samples, 0.10%)</title><rect x="97.2703%" y="324" width="0.1007%" height="15" fill="rgb(250,0,22)" fg:x="35741" fg:w="37"/><text x="97.5203%" y="334.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (268 samples, 0.73%)</title><rect x="96.6444%" y="244" width="0.7294%" height="15" fill="rgb(213,166,10)" fg:x="35511" fg:w="268"/><text x="96.8944%" y="254.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (268 samples, 0.73%)</title><rect x="96.6444%" y="260" width="0.7294%" height="15" fill="rgb(207,163,36)" fg:x="35511" fg:w="268"/><text x="96.8944%" y="270.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:242) (47 samples, 0.13%)</title><rect x="97.2458%" y="276" width="0.1279%" height="15" fill="rgb(208,122,22)" fg:x="35732" fg:w="47"/><text x="97.4958%" y="286.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4089) (47 samples, 0.13%)</title><rect x="97.2458%" y="292" width="0.1279%" height="15" fill="rgb(207,104,49)" fg:x="35732" fg:w="47"/><text x="97.4958%" y="302.50"></text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:345) (275 samples, 0.75%)</title><rect x="96.6307%" y="228" width="0.7484%" height="15" fill="rgb(248,211,50)" fg:x="35506" fg:w="275"/><text x="96.8807%" y="238.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (66 samples, 0.18%)</title><rect x="97.4635%" y="308" width="0.1796%" height="15" fill="rgb(217,13,45)" fg:x="35812" fg:w="66"/><text x="97.7135%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (50 samples, 0.14%)</title><rect x="97.5071%" y="324" width="0.1361%" height="15" fill="rgb(211,216,49)" fg:x="35828" fg:w="50"/><text x="97.7571%" y="334.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (67 samples, 0.18%)</title><rect x="97.4635%" y="292" width="0.1823%" height="15" fill="rgb(221,58,53)" fg:x="35812" fg:w="67"/><text x="97.7135%" y="302.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (79 samples, 0.22%)</title><rect x="97.4635%" y="260" width="0.2150%" height="15" fill="rgb(220,112,41)" fg:x="35812" fg:w="79"/><text x="97.7135%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (79 samples, 0.22%)</title><rect x="97.4635%" y="276" width="0.2150%" height="15" fill="rgb(236,38,28)" fg:x="35812" fg:w="79"/><text x="97.7135%" y="286.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:180) (86 samples, 0.23%)</title><rect x="97.4554%" y="244" width="0.2341%" height="15" fill="rgb(227,195,22)" fg:x="35809" fg:w="86"/><text x="97.7054%" y="254.50"></text></g><g><title>_getitem_str (nested_pandas/nestedframe/core.py:237) (173 samples, 0.47%)</title><rect x="97.7003%" y="292" width="0.4708%" height="15" fill="rgb(214,55,33)" fg:x="35899" fg:w="173"/><text x="97.9503%" y="302.50"></text></g><g><title>nested_columns (nested_pandas/nestedframe/core.py:102) (170 samples, 0.46%)</title><rect x="97.7085%" y="308" width="0.4627%" height="15" fill="rgb(248,80,13)" fg:x="35902" fg:w="170"/><text x="97.9585%" y="318.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (133 samples, 0.36%)</title><rect x="97.8092%" y="324" width="0.3620%" height="15" fill="rgb(238,52,6)" fg:x="35939" fg:w="133"/><text x="98.0592%" y="334.50"></text></g><g><title>_concat_meta_safe (lsdb/dask/concat_catalog_data.py:183) (192 samples, 0.52%)</title><rect x="97.6894%" y="244" width="0.5225%" height="15" fill="rgb(224,198,47)" fg:x="35895" fg:w="192"/><text x="97.9394%" y="254.50"></text></g><g><title>_reindex_and_coerce_dtypes (lsdb/dask/concat_catalog_data.py:128) (188 samples, 0.51%)</title><rect x="97.7003%" y="260" width="0.5116%" height="15" fill="rgb(233,171,20)" fg:x="35899" fg:w="188"/><text x="97.9503%" y="270.50"></text></g><g><title>__getitem__ (nested_pandas/nestedframe/core.py:230) (188 samples, 0.51%)</title><rect x="97.7003%" y="276" width="0.5116%" height="15" fill="rgb(241,30,25)" fg:x="35899" fg:w="188"/><text x="97.9503%" y="286.50"></text></g><g><title>apply (dask/utils.py:77) (23,376 samples, 63.62%)</title><rect x="34.6206%" y="196" width="63.6185%" height="15" fill="rgb(207,171,38)" fg:x="12721" fg:w="23376"/><text x="34.8706%" y="206.50">apply (dask/utils.py:77)</text></g><g><title>perform_align_and_apply_func (lsdb/dask/merge_catalog_functions.py:483) (23,108 samples, 62.89%)</title><rect x="35.3500%" y="212" width="62.8892%" height="15" fill="rgb(234,70,1)" fg:x="12989" fg:w="23108"/><text x="35.6000%" y="222.50">perform_align_and_apply_func (lsdb/dask/merge_catalog_functions.py:483)</text></g><g><title>perform_margin_concat (lsdb/dask/concat_catalog_data.py:346) (316 samples, 0.86%)</title><rect x="97.3792%" y="228" width="0.8600%" height="15" fill="rgb(232,178,18)" fg:x="35781" fg:w="316"/><text x="97.6292%" y="238.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5655) (38 samples, 0.10%)</title><rect x="98.5957%" y="340" width="0.1034%" height="15" fill="rgb(241,78,40)" fg:x="36228" fg:w="38"/><text x="98.8457%" y="350.50"></text></g><g><title>_reindex_axes (pandas/core/generic.py:5660) (42 samples, 0.11%)</title><rect x="98.7018%" y="340" width="0.1143%" height="15" fill="rgb(222,35,25)" fg:x="36267" fg:w="42"/><text x="98.9518%" y="350.50"></text></g><g><title>reindex (pandas/core/generic.py:5632) (86 samples, 0.23%)</title><rect x="98.5848%" y="324" width="0.2341%" height="15" fill="rgb(207,92,16)" fg:x="36224" fg:w="86"/><text x="98.8348%" y="334.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:611) (103 samples, 0.28%)</title><rect x="98.5413%" y="292" width="0.2803%" height="15" fill="rgb(216,59,51)" fg:x="36208" fg:w="103"/><text x="98.7913%" y="302.50"></text></g><g><title>reindex (pandas/core/series.py:5172) (103 samples, 0.28%)</title><rect x="98.5413%" y="308" width="0.2803%" height="15" fill="rgb(213,80,28)" fg:x="36208" fg:w="103"/><text x="98.7913%" y="318.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (107 samples, 0.29%)</title><rect x="98.5385%" y="276" width="0.2912%" height="15" fill="rgb(220,93,7)" fg:x="36207" fg:w="107"/><text x="98.7885%" y="286.50"></text></g><g><title>__init__ (pandas/core/frame.py:782) (157 samples, 0.43%)</title><rect x="98.4406%" y="244" width="0.4273%" height="15" fill="rgb(225,24,44)" fg:x="36171" fg:w="157"/><text x="98.6906%" y="254.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (121 samples, 0.33%)</title><rect x="98.5385%" y="260" width="0.3293%" height="15" fill="rgb(243,74,40)" fg:x="36207" fg:w="121"/><text x="98.7885%" y="270.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:660) (163 samples, 0.44%)</title><rect x="98.4351%" y="228" width="0.4436%" height="15" fill="rgb(228,39,7)" fg:x="36169" fg:w="163"/><text x="98.6851%" y="238.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (201 samples, 0.55%)</title><rect x="98.3453%" y="212" width="0.5470%" height="15" fill="rgb(227,79,8)" fg:x="36136" fg:w="201"/><text x="98.5953%" y="222.50"></text></g><g><title>check_meta (dask/dataframe/utils.py:357) (272 samples, 0.74%)</title><rect x="98.3045%" y="196" width="0.7403%" height="15" fill="rgb(236,58,11)" fg:x="36121" fg:w="272"/><text x="98.5545%" y="206.50"></text></g><g><title>dtypes (pandas/core/generic.py:6483) (40 samples, 0.11%)</title><rect x="98.9359%" y="212" width="0.1089%" height="15" fill="rgb(249,63,35)" fg:x="36353" fg:w="40"/><text x="99.1859%" y="222.50"></text></g><g><title>_maybe_downcast (pandas/core/internals/blocks.py:567) (39 samples, 0.11%)</title><rect x="99.1400%" y="276" width="0.1061%" height="15" fill="rgb(252,114,16)" fg:x="36428" fg:w="39"/><text x="99.3900%" y="286.50"></text></g><g><title>fillna (pandas/core/internals/base.py:186) (63 samples, 0.17%)</title><rect x="99.0828%" y="228" width="0.1715%" height="15" fill="rgb(254,151,24)" fg:x="36407" fg:w="63"/><text x="99.3328%" y="238.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (61 samples, 0.17%)</title><rect x="99.0883%" y="244" width="0.1660%" height="15" fill="rgb(253,54,39)" fg:x="36409" fg:w="61"/><text x="99.3383%" y="254.50"></text></g><g><title>fillna (pandas/core/internals/blocks.py:1743) (46 samples, 0.13%)</title><rect x="99.1291%" y="260" width="0.1252%" height="15" fill="rgb(243,25,45)" fg:x="36424" fg:w="46"/><text x="99.3791%" y="270.50"></text></g><g><title>fillna (pandas/core/generic.py:7457) (64 samples, 0.17%)</title><rect x="99.0828%" y="212" width="0.1742%" height="15" fill="rgb(234,134,9)" fg:x="36407" fg:w="64"/><text x="99.3328%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1185) (54 samples, 0.15%)</title><rect x="99.3142%" y="244" width="0.1470%" height="15" fill="rgb(227,166,31)" fg:x="36492" fg:w="54"/><text x="99.5642%" y="254.50"></text></g><g><title>_getitem_tuple (pandas/core/indexing.py:1693) (37 samples, 0.10%)</title><rect x="99.3604%" y="260" width="0.1007%" height="15" fill="rgb(245,143,41)" fg:x="36509" fg:w="37"/><text x="99.6104%" y="270.50"></text></g><g><title>itertuples (pandas/core/frame.py:1639) (70 samples, 0.19%)</title><rect x="99.2734%" y="212" width="0.1905%" height="15" fill="rgb(238,181,32)" fg:x="36477" fg:w="70"/><text x="99.5234%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/frame.py:1639) (68 samples, 0.19%)</title><rect x="99.2788%" y="228" width="0.1851%" height="15" fill="rgb(224,113,18)" fg:x="36479" fg:w="68"/><text x="99.5288%" y="238.50"></text></g><g><title>namedtuple (collections/__init__.py:441) (72 samples, 0.20%)</title><rect x="99.4802%" y="228" width="0.1960%" height="15" fill="rgb(240,229,28)" fg:x="36553" fg:w="72"/><text x="99.7302%" y="238.50"></text></g><g><title>itertuples (pandas/core/frame.py:1644) (126 samples, 0.34%)</title><rect x="99.4639%" y="212" width="0.3429%" height="15" fill="rgb(250,185,3)" fg:x="36547" fg:w="126"/><text x="99.7139%" y="222.50"></text></g><g><title>check_meta (dask/dataframe/utils.py:360) (279 samples, 0.76%)</title><rect x="99.0665%" y="196" width="0.7593%" height="15" fill="rgb(212,59,25)" fg:x="36401" fg:w="279"/><text x="99.3165%" y="206.50"></text></g><g><title>execute_task (dask/local.py:229) (25,693 samples, 69.92%)</title><rect x="30.0131%" y="164" width="69.9243%" height="15" fill="rgb(221,87,20)" fg:x="11028" fg:w="25693"/><text x="30.2631%" y="174.50">execute_task (dask/local.py:229)</text></g><g><title>__call__ (dask/_task_spec.py:755) (25,520 samples, 69.45%)</title><rect x="30.4839%" y="180" width="69.4535%" height="15" fill="rgb(213,74,28)" fg:x="11201" fg:w="25520"/><text x="30.7339%" y="190.50">__call__ (dask/_task_spec.py:755)</text></g><g><title>run (concurrent/futures/thread.py:58) (25,701 samples, 69.95%)</title><rect x="30.0076%" y="132" width="69.9461%" height="15" fill="rgb(224,132,34)" fg:x="11026" fg:w="25701"/><text x="30.2576%" y="142.50">run (concurrent/futures/thread.py:58)</text></g><g><title>batch_execute_tasks (dask/local.py:243) (25,701 samples, 69.95%)</title><rect x="30.0076%" y="148" width="69.9461%" height="15" fill="rgb(222,101,24)" fg:x="11026" fg:w="25701"/><text x="30.2576%" y="158.50">batch_execute_tasks (dask/local.py:243)</text></g><g><title>_worker (concurrent/futures/thread.py:92) (25,720 samples, 70.00%)</title><rect x="29.9913%" y="116" width="69.9978%" height="15" fill="rgb(254,142,4)" fg:x="11020" fg:w="25720"/><text x="30.2413%" y="126.50">_worker (concurrent/futures/thread.py:92)</text></g><g><title>_bootstrap (threading.py:1030) (26,920 samples, 73.26%)</title><rect x="26.7282%" y="68" width="73.2637%" height="15" fill="rgb(230,229,49)" fg:x="9821" fg:w="26920"/><text x="26.9782%" y="78.50">_bootstrap (threading.py:1030)</text></g><g><title>_bootstrap_inner (threading.py:1073) (26,920 samples, 73.26%)</title><rect x="26.7282%" y="84" width="73.2637%" height="15" fill="rgb(238,70,47)" fg:x="9821" fg:w="26920"/><text x="26.9782%" y="94.50">_bootstrap_inner (threading.py:1073)</text></g><g><title>run (threading.py:1010) (26,920 samples, 73.26%)</title><rect x="26.7282%" y="100" width="73.2637%" height="15" fill="rgb(231,160,17)" fg:x="9821" fg:w="26920"/><text x="26.9782%" y="110.50">run (threading.py:1010)</text></g><g><title>all (36,744 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(218,68,53)" fg:x="0" fg:w="36744"/><text x="0.2500%" y="62.50"></text></g></svg></svg>